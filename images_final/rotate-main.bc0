C0 C0 FF EE       # magic number
00 17             # version 11, arch = 1 (64 bits)

00 18             # int pool count
# int pool
7F FF FF FF
80 00 00 00
7F FF FF FF
80 00 00 00
00 00 00 FF
00 00 01 00
00 00 00 FF
00 00 01 00
00 00 00 FF
00 00 01 00
00 00 00 FF
00 00 01 00
00 00 01 00
00 00 01 00
00 00 01 00
00 00 01 00
00 00 01 00
00 00 01 00
00 00 01 00
00 00 01 00
00 00 01 00
00 00 01 00
00 00 01 00
00 00 01 00

36 E6             # string pool total size
# string pool
69 6E 74 5F 73 69 7A 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 38 2E 31 2D 39 2E 33 33 29 00  # "int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 39 2E 36 2D 39 2E 32 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 9.6-9.27: @ensures annotation failed"
69 6E 74 5F 6D 61 78 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 30 2E 31 2D 31 31 2E 34 32 29 00  # "int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 31 2E 36 2D 31 31 2E 33 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 11.6-11.36: @ensures annotation failed"
69 6E 74 5F 6D 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 32 2E 31 2D 31 33 2E 34 33 29 00  # "int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 33 2E 36 2D 31 33 2E 33 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 13.6-13.37: @ensures annotation failed"
61 62 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 37 2E 31 39 2D 31 37 2E 32 38 29 00  # "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 37 2E 36 2D 31 37 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.h0: 17.6-17.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
61 62 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 36 2E 31 2D 31 39 2E 34 38 29 00  # "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 38 2E 36 2D 31 38 2E 32 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 18.6-18.27: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 39 2E 36 2D 31 39 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 19.6-19.42: @ensures annotation failed"
6D 61 78 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 32 2E 31 2D 32 34 2E 34 39 29 00  # "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 33 2E 36 2D 32 33 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 23.6-23.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 34 2E 36 2D 32 34 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 24.6-24.43: @ensures annotation failed"
6D 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 37 2E 31 2D 32 39 2E 34 39 29 00  # "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 38 2E 36 2D 32 38 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 28.6-28.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 39 2E 36 2D 32 39 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 29.6-29.43: @ensures annotation failed"
73 74 72 69 6E 67 5F 63 68 61 72 61 74 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 31 39 2E 33 33 2D 31 39 2E 34 39 29 00  # "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 31 39 2E 36 2D 31 39 2E 35 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 19.6-19.50: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 6A 6F 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 33 2E 31 34 2D 32 33 2E 33 36 29 00  # "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)"
73 74 72 69 6E 67 5F 6A 6F 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 34 2E 31 39 2D 32 34 2E 33 35 29 00  # "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)"
73 74 72 69 6E 67 5F 6A 6F 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 34 2E 33 38 2D 32 34 2E 35 34 29 00  # "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 33 2E 36 2D 32 34 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 23.6-24.55: @ensures annotation failed"
73 74 72 69 6E 67 5F 73 75 62 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 31 2E 35 32 2D 33 31 2E 36 38 29 00  # "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 31 2E 36 2D 33 31 2E 36 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 31.6-31.69: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 73 75 62 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 32 2E 31 34 2D 33 32 2E 33 36 29 00  # "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 32 2E 36 2D 33 32 2E 35 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 32.6-32.52: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 37 2E 36 2D 33 37 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 37.6-37.44: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 33 2E 36 2D 34 33 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 43.6-43.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 66 72 6F 6D 63 68 61 72 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 34 2E 31 34 2D 34 34 2E 33 36 29 00  # "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 34 2E 36 2D 34 34 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 44.6-44.42: @ensures annotation failed"
73 74 72 69 6E 67 5F 66 72 6F 6D 63 68 61 72 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 35 2E 31 34 2D 34 35 2E 33 39 29 00  # "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 35 2E 36 2D 34 35 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 45.6-45.45: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 32 2E 36 2D 35 32 2E 34 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 52.6-52.41: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 74 6F 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 36 2E 33 34 2D 35 36 2E 35 30 29 00  # "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 36 2E 36 2D 35 36 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 56.6-56.55: @ensures annotation failed"
73 74 72 69 6E 67 5F 74 6F 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 37 2E 34 31 2D 35 37 2E 35 37 29 00  # "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)"
73 74 72 69 6E 67 5F 74 6F 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 37 2E 31 34 2D 35 37 2E 36 32 29 00  # "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 37 2E 36 2D 35 37 2E 36 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 57.6-57.63: @ensures annotation failed"
73 74 72 69 6E 67 5F 66 72 6F 6D 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 32 2E 31 35 2D 36 32 2E 34 37 29 00  # "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 32 2E 36 2D 36 32 2E 34 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 62.6-62.48: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 66 72 6F 6D 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 33 2E 31 34 2D 36 33 2E 33 36 29 00  # "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 33 2E 36 2D 36 33 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 63.6-63.55: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 37 2E 36 2D 36 37 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 67.6-67.45: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 39 2E 36 2D 36 39 2E 33 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 69.6-69.34: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 31 33 2E 34 2D 31 33 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 13.4-13.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 31 34 2E 34 2D 31 34 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 14.4-14.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 31 2E 34 2D 32 31 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 21.4-21.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 32 2E 34 2D 32 32 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 22.4-22.41: @ensures annotation failed"
61 62 73 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 39 2E 31 37 2D 32 39 2E 32 36 29 00  # "abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 39 2E 34 2D 32 39 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.c0: 29.4-29.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 33 30 2E 34 2D 33 30 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 30.4-30.25: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 33 37 2E 34 2D 33 37 2E 33 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.c0: 37.4-37.30: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 30 2E 32 31 2D 34 30 2E 33 34 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 30 2E 31 32 2D 34 30 2E 33 39 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 32 2E 32 31 2D 34 32 2E 33 34 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 32 2E 31 32 2D 34 32 2E 34 34 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 35 31 2E 31 38 2D 35 31 2E 32 38 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 35 35 2E 38 2D 35 35 2E 34 35 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 55.8-55.45: @loop_invariant annotation failed"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 35 37 2E 32 33 2D 35 37 2E 34 33 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 36 30 2E 31 30 2D 36 30 2E 33 34 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 39 2E 31 32 2D 34 39 2E 33 34 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 39 2E 34 30 2D 34 39 2E 35 30 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 39 2E 34 2D 34 39 2E 35 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 49.4-49.51: @ensures annotation failed"
72 65 61 64 6C 69 6E 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 63 6F 6E 69 6F 2E 68 30 3A 20 31 34 2E 31 36 2D 31 34 2E 32 31 29 00  # "readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 63 6F 6E 69 6F 2E 68 30 3A 20 31 34 2E 36 2D 31 34 2E 32 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/conio.h0: 14.6-14.22: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 31 33 2E 34 2D 31 33 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/pixel-int.c0: 13.4-13.42: @ensures annotation failed"
2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 32 31 2E 34 2D 32 31 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/pixel-int.c0: 21.4-21.42: @ensures annotation failed"
2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 32 39 2E 34 2D 32 39 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/pixel-int.c0: 29.4-29.42: @ensures annotation failed"
2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 33 37 2E 34 2D 33 37 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/pixel-int.c0: 37.4-37.42: @ensures annotation failed"
2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 34 37 2E 34 2D 34 37 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/pixel-int.c0: 47.4-47.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 34 38 2E 34 2D 34 38 2E 33 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/pixel-int.c0: 48.4-48.37: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 34 39 2E 34 2D 34 39 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/pixel-int.c0: 49.4-49.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 35 30 2E 34 2D 35 30 2E 33 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/pixel-int.c0: 50.4-50.38: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
00  # ""
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 36 30 2E 33 2D 36 30 2E 32 37 29 00  # "pixel_print (.tmp0/pixel-int.c0: 60.3-60.27)"
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 36 30 2E 31 36 2D 36 30 2E 32 36 29 00  # "pixel_print (.tmp0/pixel-int.c0: 60.16-60.26)"
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 36 30 2E 33 2D 36 30 2E 32 37 29 00  # "pixel_print (.tmp0/pixel-int.c0: 60.3-60.27)"
00  # ""
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 36 30 2E 33 2D 36 30 2E 32 37 29 00  # "pixel_print (.tmp0/pixel-int.c0: 60.3-60.27)"
67 65 74 5F 72 65 64 5F 5F 31 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 36 39 2E 31 2D 37 30 2E 34 38 29 00  # "get_red__1 (.tmp0/pixel-int.c0: 69.1-70.48)"
2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 37 30 2E 34 2D 37 30 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/pixel-int.c0: 70.4-70.42: @ensures annotation failed"
67 65 74 5F 67 72 65 65 6E 5F 5F 31 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 37 32 2E 31 2D 37 33 2E 34 38 29 00  # "get_green__1 (.tmp0/pixel-int.c0: 72.1-73.48)"
2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 37 33 2E 34 2D 37 33 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/pixel-int.c0: 73.4-73.42: @ensures annotation failed"
67 65 74 5F 62 6C 75 65 5F 5F 31 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 37 35 2E 31 2D 37 36 2E 34 38 29 00  # "get_blue__1 (.tmp0/pixel-int.c0: 75.1-76.48)"
2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 37 36 2E 34 2D 37 36 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/pixel-int.c0: 76.4-76.42: @ensures annotation failed"
67 65 74 5F 61 6C 70 68 61 5F 5F 31 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 37 38 2E 31 2D 37 39 2E 34 38 29 00  # "get_alpha__1 (.tmp0/pixel-int.c0: 78.1-79.48)"
2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 37 39 2E 34 2D 37 39 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/pixel-int.c0: 79.4-79.42: @ensures annotation failed"
2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 38 32 2E 34 2D 38 32 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/pixel-int.c0: 82.4-82.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 38 33 2E 34 2D 38 33 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/pixel-int.c0: 83.4-83.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 38 34 2E 34 2D 38 34 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/pixel-int.c0: 84.4-84.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 38 35 2E 34 2D 38 35 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/pixel-int.c0: 85.4-85.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6D 61 6B 65 5F 70 69 78 65 6C 5F 5F 31 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 69 6E 74 2E 63 30 3A 20 38 31 2E 31 2D 38 35 2E 34 35 29 00  # "make_pixel__1 (.tmp0/pixel-int.c0: 81.1-85.45)"
69 73 5F 76 61 6C 69 64 5F 69 6D 61 67 65 73 69 7A 65 20 28 69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 31 36 2E 31 37 2D 31 36 2E 32 36 29 00  # "is_valid_imagesize (imageutil.c0: 16.17-16.26)"
67 65 74 5F 72 6F 77 20 28 69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 32 37 2E 31 33 2D 32 37 2E 34 36 29 00  # "get_row (imageutil.c0: 27.13-27.46)"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 32 37 2E 34 2D 32 37 2E 34 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "imageutil.c0: 27.4-27.47: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 32 38 2E 34 2D 32 38 2E 35 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "imageutil.c0: 28.4-28.50: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 32 39 2E 34 2D 32 39 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "imageutil.c0: 29.4-29.45: @ensures annotation failed"
67 65 74 5F 63 6F 6C 75 6D 6E 20 28 69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 34 32 2E 31 33 2D 34 32 2E 34 36 29 00  # "get_column (imageutil.c0: 42.13-42.46)"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 34 32 2E 34 2D 34 32 2E 34 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "imageutil.c0: 42.4-42.47: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 34 33 2E 34 2D 34 33 2E 35 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "imageutil.c0: 43.4-43.50: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 65 74 5F 63 6F 6C 75 6D 6E 20 28 69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 34 36 2E 31 33 2D 34 36 2E 34 32 29 00  # "get_column (imageutil.c0: 46.13-46.42)"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 34 34 2E 34 2D 34 34 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "imageutil.c0: 44.4-44.44: @ensures annotation failed"
69 73 5F 76 61 6C 69 64 5F 70 69 78 65 6C 20 28 69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 35 35 2E 31 33 2D 35 35 2E 34 36 29 00  # "is_valid_pixel (imageutil.c0: 55.13-55.46)"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 35 35 2E 34 2D 35 35 2E 34 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "imageutil.c0: 55.4-55.47: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 73 5F 76 61 6C 69 64 5F 70 69 78 65 6C 20 28 69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 35 39 2E 31 36 2D 35 39 2E 32 35 29 00  # "is_valid_pixel (imageutil.c0: 59.16-59.25)"
67 65 74 5F 69 6E 64 65 78 20 28 69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 37 32 2E 31 33 2D 37 32 2E 34 36 29 00  # "get_index (imageutil.c0: 72.13-72.46)"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 37 32 2E 34 2D 37 32 2E 34 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "imageutil.c0: 72.4-72.47: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 65 74 5F 69 6E 64 65 78 20 28 69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 37 33 2E 31 33 2D 37 33 2E 35 32 29 00  # "get_index (imageutil.c0: 73.13-73.52)"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 37 33 2E 34 2D 37 33 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "imageutil.c0: 73.4-73.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 37 34 2E 34 2D 37 34 2E 35 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "imageutil.c0: 74.4-74.53: @ensures annotation failed"
70 72 69 6E 74 5F 69 6D 61 67 65 20 69 73 20 6E 6F 74 20 61 20 75 73 65 66 75 6C 20 64 65 62 75 67 67 69 6E 67 20 74 6F 6F 6C 20 66 6F 72 20 6C 61 72 67 65 20 69 6D 61 67 65 73 0A 00  # "print_image is not a useful debugging tool for large images\n"
69 6D 61 67 65 5F 70 72 69 6E 74 20 28 69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 38 38 2E 35 2D 38 38 2E 37 36 29 00  # "image_print (imageutil.c0: 88.5-88.76)"
74 79 70 65 20 27 79 27 20 74 6F 20 70 72 6F 63 65 65 64 20 6E 6F 6E 65 74 68 65 6C 65 73 73 2C 20 00  # "type \'y\' to proceed nonetheless, "
69 6D 61 67 65 5F 70 72 69 6E 74 20 28 69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 38 39 2E 35 2D 38 39 2E 34 38 29 00  # "image_print (imageutil.c0: 89.5-89.48)"
61 6E 64 20 61 6E 79 74 68 69 6E 67 20 65 6C 73 65 20 74 6F 20 73 6B 69 70 20 70 72 69 6E 74 69 6E 67 3A 20 00  # "and anything else to skip printing: "
69 6D 61 67 65 5F 70 72 69 6E 74 20 28 69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 39 30 2E 35 2D 39 30 2E 35 31 29 00  # "image_print (imageutil.c0: 90.5-90.51)"
69 6D 61 67 65 5F 70 72 69 6E 74 20 28 69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 39 31 2E 31 36 2D 39 31 2E 32 36 29 00  # "image_print (imageutil.c0: 91.16-91.26)"
79 00  # "y"
69 6D 61 67 65 5F 70 72 69 6E 74 20 28 69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 39 32 2E 31 31 2D 39 32 2E 33 31 29 00  # "image_print (imageutil.c0: 92.11-92.31)"
59 00  # "Y"
69 6D 61 67 65 5F 70 72 69 6E 74 20 28 69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 39 32 2E 33 35 2D 39 32 2E 35 35 29 00  # "image_print (imageutil.c0: 92.35-92.55)"
69 6D 61 67 65 5F 70 72 69 6E 74 20 28 69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 39 39 2E 32 35 2D 39 39 2E 35 39 29 00  # "image_print (imageutil.c0: 99.25-99.59)"
69 6D 61 67 65 5F 70 72 69 6E 74 20 28 69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 39 39 2E 31 31 2D 39 39 2E 36 31 29 00  # "image_print (imageutil.c0: 99.11-99.61)"
20 00  # " "
69 6D 61 67 65 5F 70 72 69 6E 74 20 28 69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 31 30 30 2E 31 31 2D 31 30 30 2E 32 32 29 00  # "image_print (imageutil.c0: 100.11-100.22)"
0A 00  # "\n"
69 6D 61 67 65 5F 70 72 69 6E 74 20 28 69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 20 31 30 32 2E 37 2D 31 30 32 2E 31 39 29 00  # "image_print (imageutil.c0: 102.7-102.19)"
72 6F 74 61 74 65 20 28 72 6F 74 61 74 65 2E 63 30 3A 20 32 2E 33 32 2D 32 2E 36 35 29 00  # "rotate (rotate.c0: 2.32-2.65)"
72 6F 74 61 74 65 2E 63 30 3A 20 32 2E 34 2D 32 2E 36 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "rotate.c0: 2.4-2.66: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
72 6F 74 61 74 65 20 28 72 6F 74 61 74 65 2E 63 30 3A 20 33 2E 31 33 2D 33 2E 36 33 29 00  # "rotate (rotate.c0: 3.13-3.63)"
72 6F 74 61 74 65 2E 63 30 3A 20 33 2E 34 2D 33 2E 36 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "rotate.c0: 3.4-3.64: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
72 6F 74 61 74 65 2E 63 30 3A 20 35 2E 34 2D 35 2E 35 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "rotate.c0: 5.4-5.55: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
72 6F 74 61 74 65 2E 63 30 3A 20 31 38 2E 36 2D 31 38 2E 36 37 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "rotate.c0: 18.6-18.67: @loop_invariant annotation failed"
72 6F 74 61 74 65 20 28 72 6F 74 61 74 65 2E 63 30 3A 20 32 31 2E 32 33 2D 32 31 2E 35 38 29 00  # "rotate (rotate.c0: 21.23-21.58)"
72 6F 74 61 74 65 20 28 72 6F 74 61 74 65 2E 63 30 3A 20 32 32 2E 31 34 2D 32 32 2E 34 36 29 00  # "rotate (rotate.c0: 22.14-22.46)"
72 6F 74 61 74 65 20 28 72 6F 74 61 74 65 2E 63 30 3A 20 32 33 2E 31 36 2D 32 33 2E 37 31 29 00  # "rotate (rotate.c0: 23.16-23.71)"
72 6F 74 61 74 65 20 28 72 6F 74 61 74 65 2E 63 30 3A 20 32 37 2E 31 34 2D 32 37 2E 34 36 29 00  # "rotate (rotate.c0: 27.14-27.46)"
72 6F 74 61 74 65 20 28 72 6F 74 61 74 65 2E 63 30 3A 20 32 38 2E 31 34 2D 32 38 2E 34 39 29 00  # "rotate (rotate.c0: 28.14-28.49)"
72 6F 74 61 74 65 20 28 72 6F 74 61 74 65 2E 63 30 3A 20 32 39 2E 31 36 2D 32 39 2E 37 31 29 00  # "rotate (rotate.c0: 29.16-29.71)"
72 6F 74 61 74 65 20 28 72 6F 74 61 74 65 2E 63 30 3A 20 33 33 2E 33 30 2D 33 33 2E 36 32 29 00  # "rotate (rotate.c0: 33.30-33.62)"
72 6F 74 61 74 65 20 28 72 6F 74 61 74 65 2E 63 30 3A 20 33 34 2E 32 32 2D 33 34 2E 35 37 29 00  # "rotate (rotate.c0: 34.22-34.57)"
72 6F 74 61 74 65 20 28 72 6F 74 61 74 65 2E 63 30 3A 20 33 35 2E 31 36 2D 33 35 2E 37 31 29 00  # "rotate (rotate.c0: 35.16-35.71)"
72 6F 74 61 74 65 20 28 72 6F 74 61 74 65 2E 63 30 3A 20 33 39 2E 31 34 2D 33 39 2E 34 39 29 00  # "rotate (rotate.c0: 39.14-39.49)"
72 6F 74 61 74 65 20 28 72 6F 74 61 74 65 2E 63 30 3A 20 34 30 2E 33 30 2D 34 30 2E 36 32 29 00  # "rotate (rotate.c0: 40.30-40.62)"
72 6F 74 61 74 65 20 28 72 6F 74 61 74 65 2E 63 30 3A 20 34 31 2E 31 36 2D 34 31 2E 37 31 29 00  # "rotate (rotate.c0: 41.16-41.71)"
72 6F 74 61 74 65 2E 63 30 3A 20 36 2E 34 2D 36 2E 33 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "rotate.c0: 6.4-6.38: @ensures annotation failed"
72 6F 74 61 74 65 2E 63 30 3A 20 37 2E 34 2D 37 2E 36 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "rotate.c0: 7.4-7.68: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 61 72 67 73 2E 68 30 3A 20 38 2E 36 2D 38 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/args.h0: 8.6-8.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 61 72 67 73 2E 68 30 3A 20 31 34 2E 36 2D 31 34 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/args.h0: 14.6-14.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 61 72 67 73 2E 68 30 3A 20 32 30 2E 36 2D 32 30 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/args.h0: 20.6-20.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 61 72 67 73 2E 68 30 3A 20 33 34 2E 36 2D 33 34 2E 37 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/args.h0: 34.6-34.73: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 31 33 2E 36 2D 31 33 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/parse.h0: 13.6-13.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 30 2E 36 2D 32 30 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/parse.h0: 20.6-20.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 61 72 73 65 5F 74 6F 6B 65 6E 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 33 2E 33 34 2D 32 33 2E 34 37 29 00  # "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 33 2E 36 2D 32 33 2E 34 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/parse.h0: 23.6-23.48: @ensures annotation failed"
70 61 72 73 65 5F 69 6E 74 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 37 2E 31 35 2D 32 37 2E 33 34 29 00  # "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 27.15-27.34)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 37 2E 36 2D 32 37 2E 33 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/parse.h0: 27.6-27.35: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 61 72 73 65 5F 69 6E 74 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 38 2E 33 34 2D 32 38 2E 34 37 29 00  # "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 38 2E 36 2D 32 38 2E 34 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/parse.h0: 28.6-28.48: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 31 32 2E 36 2D 31 32 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/img.h0: 12.6-12.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 31 33 2E 36 2D 31 33 2E 32 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/img.h0: 13.6-13.26: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 31 37 2E 36 2D 31 37 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/img.h0: 17.6-17.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 31 38 2E 36 2D 31 38 2E 32 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/img.h0: 18.6-18.26: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 32 32 2E 36 2D 32 32 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/img.h0: 22.6-22.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 32 33 2E 36 2D 32 33 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/img.h0: 23.6-23.30: @ensures annotation failed"
69 6D 61 67 65 5F 63 72 65 61 74 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 32 34 2E 31 34 2D 32 34 2E 33 34 29 00  # "image_create__1 (/afs/andrew/course/15/122/lib/img.h0: 24.14-24.34)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 32 34 2E 36 2D 32 34 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/img.h0: 24.6-24.44: @ensures annotation failed"
69 6D 61 67 65 5F 63 72 65 61 74 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 32 35 2E 31 34 2D 32 35 2E 33 35 29 00  # "image_create__1 (/afs/andrew/course/15/122/lib/img.h0: 25.14-25.35)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 32 35 2E 36 2D 32 35 2E 34 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/img.h0: 25.6-25.46: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 32 39 2E 36 2D 32 39 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/img.h0: 29.6-29.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6D 61 67 65 5F 63 6C 6F 6E 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 33 30 2E 31 34 2D 33 30 2E 33 34 29 00  # "image_clone__1 (/afs/andrew/course/15/122/lib/img.h0: 30.14-30.34)"
69 6D 61 67 65 5F 63 6C 6F 6E 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 33 30 2E 33 38 2D 33 30 2E 35 36 29 00  # "image_clone__1 (/afs/andrew/course/15/122/lib/img.h0: 30.38-30.56)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 33 30 2E 36 2D 33 30 2E 35 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/img.h0: 30.6-30.57: @ensures annotation failed"
69 6D 61 67 65 5F 63 6C 6F 6E 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 33 31 2E 31 34 2D 33 31 2E 33 35 29 00  # "image_clone__1 (/afs/andrew/course/15/122/lib/img.h0: 31.14-31.35)"
69 6D 61 67 65 5F 63 6C 6F 6E 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 33 31 2E 33 39 2D 33 31 2E 35 38 29 00  # "image_clone__1 (/afs/andrew/course/15/122/lib/img.h0: 31.39-31.58)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 33 31 2E 36 2D 33 31 2E 35 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/img.h0: 31.6-31.59: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 33 38 2E 36 2D 33 38 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/img.h0: 38.6-38.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6D 61 67 65 5F 73 75 62 69 6D 61 67 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 33 39 2E 31 34 2D 33 39 2E 33 34 29 00  # "image_subimage__1 (/afs/andrew/course/15/122/lib/img.h0: 39.14-39.34)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 33 39 2E 36 2D 33 39 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/img.h0: 39.6-39.44: @ensures annotation failed"
69 6D 61 67 65 5F 73 75 62 69 6D 61 67 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 34 30 2E 31 34 2D 34 30 2E 33 35 29 00  # "image_subimage__1 (/afs/andrew/course/15/122/lib/img.h0: 40.14-40.35)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 34 30 2E 36 2D 34 30 2E 34 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/img.h0: 40.6-40.46: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 35 30 2E 36 2D 35 30 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/img.h0: 50.6-50.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 35 38 2E 36 2D 35 38 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/img.h0: 58.6-58.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6D 61 67 65 5F 64 61 74 61 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 35 39 2E 33 34 2D 35 39 2E 35 32 29 00  # "image_data__1 (/afs/andrew/course/15/122/lib/img.h0: 59.34-59.52)"
69 6D 61 67 65 5F 64 61 74 61 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 35 39 2E 35 35 2D 35 39 2E 37 34 29 00  # "image_data__1 (/afs/andrew/course/15/122/lib/img.h0: 59.55-59.74)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 20 35 39 2E 36 2D 35 39 2E 37 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/img.h0: 59.6-59.75: @ensures annotation failed"
49 6E 70 75 74 20 69 6D 61 67 65 3A 20 20 00  # "Input image:  "
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 31 33 2E 33 2D 31 33 2E 33 38 29 00  # "rotate_main (rotate-main.c0: 13.3-13.38)"
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 31 33 2E 33 2D 31 33 2E 33 38 29 00  # "rotate_main (rotate-main.c0: 13.3-13.38)"
0A 00  # "\n"
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 31 33 2E 33 2D 31 33 2E 33 38 29 00  # "rotate_main (rotate-main.c0: 13.3-13.38)"
4F 75 74 70 75 74 20 69 6D 61 67 65 3A 20 00  # "Output image: "
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 31 34 2E 33 2D 31 34 2E 33 39 29 00  # "rotate_main (rotate-main.c0: 14.3-14.39)"
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 31 34 2E 33 2D 31 34 2E 33 39 29 00  # "rotate_main (rotate-main.c0: 14.3-14.39)"
0A 00  # "\n"
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 31 34 2E 33 2D 31 34 2E 33 39 29 00  # "rotate_main (rotate-main.c0: 14.3-14.39)"
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 31 37 2E 32 30 2D 31 37 2E 33 37 29 00  # "rotate_main (rotate-main.c0: 17.20-17.37)"
43 6F 75 6C 64 20 6E 6F 74 20 6C 6F 61 64 20 73 6F 75 72 63 65 20 69 6D 61 67 65 00  # "Could not load source image"
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 31 39 2E 31 35 2D 31 39 2E 33 34 29 00  # "rotate_main (rotate-main.c0: 19.15-19.34)"
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 32 30 2E 31 36 2D 32 30 2E 33 36 29 00  # "rotate_main (rotate-main.c0: 20.16-20.36)"
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 32 31 2E 32 34 2D 32 31 2E 34 32 29 00  # "rotate_main (rotate-main.c0: 21.24-21.42)"
4C 6F 61 64 65 64 20 69 6D 61 67 65 2E 20 20 44 69 6D 65 6E 73 69 6F 6E 73 20 61 72 65 20 00  # "Loaded image.  Dimensions are "
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 32 33 2E 33 2D 32 33 2E 36 39 29 00  # "rotate_main (rotate-main.c0: 23.3-23.69)"
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 32 33 2E 33 2D 32 33 2E 36 39 29 00  # "rotate_main (rotate-main.c0: 23.3-23.69)"
20 62 79 20 00  # " by "
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 32 33 2E 33 2D 32 33 2E 36 39 29 00  # "rotate_main (rotate-main.c0: 23.3-23.69)"
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 32 33 2E 33 2D 32 33 2E 36 39 29 00  # "rotate_main (rotate-main.c0: 23.3-23.69)"
2E 0A 00  # ".\n"
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 32 33 2E 33 2D 32 33 2E 36 39 29 00  # "rotate_main (rotate-main.c0: 23.3-23.69)"
49 6D 61 67 65 20 6E 6F 74 20 73 71 75 61 72 65 00  # "Image not square"
52 75 6E 6E 69 6E 67 20 72 6F 74 61 74 69 6F 6E 20 74 72 61 6E 73 66 6F 72 6D 2E 2E 2E 00  # "Running rotation transform..."
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 32 37 2E 33 2D 32 37 2E 34 32 29 00  # "rotate_main (rotate-main.c0: 27.3-27.42)"
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 32 37 2E 34 34 2D 32 37 2E 35 31 29 00  # "rotate_main (rotate-main.c0: 27.44-27.51)"
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 32 38 2E 32 38 2D 32 38 2E 35 39 29 00  # "rotate_main (rotate-main.c0: 28.28-28.59)"
64 6F 6E 65 2E 0A 00  # "done.\n"
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 32 39 2E 33 2D 32 39 2E 32 30 29 00  # "rotate_main (rotate-main.c0: 29.3-29.20)"
72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 33 30 2E 36 2D 33 30 2E 36 35 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "rotate-main.c0: 30.6-30.65: @assert annotation failed"
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 33 33 2E 31 38 2D 33 33 2E 34 39 29 00  # "rotate_main (rotate-main.c0: 33.18-33.49)"
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 33 34 2E 32 35 2D 33 34 2E 34 31 29 00  # "rotate_main (rotate-main.c0: 34.25-34.41)"
72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 33 36 2E 38 2D 33 36 2E 33 30 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "rotate-main.c0: 36.8-36.30: @loop_invariant annotation failed"
53 61 76 69 6E 67 20 6F 75 74 70 75 74 2E 2E 2E 00  # "Saving output..."
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 34 32 2E 33 2D 34 32 2E 32 39 29 00  # "rotate_main (rotate-main.c0: 42.3-42.29)"
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 34 32 2E 33 31 2D 34 32 2E 33 38 29 00  # "rotate_main (rotate-main.c0: 42.31-42.38)"
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 34 33 2E 33 2D 34 33 2E 32 37 29 00  # "rotate_main (rotate-main.c0: 43.3-43.27)"
64 6F 6E 65 2E 0A 00  # "done.\n"
72 6F 74 61 74 65 5F 6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 34 34 2E 33 2D 34 34 2E 32 30 29 00  # "rotate_main (rotate-main.c0: 44.3-44.20)"
64 65 66 61 75 6C 74 5F 6F 75 74 70 75 74 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 34 38 2E 31 33 2D 34 38 2E 33 33 29 00  # "default_output (rotate-main.c0: 48.13-48.33)"
2E 70 6E 67 00  # ".png"
64 65 66 61 75 6C 74 5F 6F 75 74 70 75 74 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 34 39 2E 34 31 2D 34 39 2E 37 30 29 00  # "default_output (rotate-main.c0: 49.41-49.70)"
64 65 66 61 75 6C 74 5F 6F 75 74 70 75 74 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 34 39 2E 32 30 2D 34 39 2E 37 31 29 00  # "default_output (rotate-main.c0: 49.20-49.71)"
49 6E 70 75 74 20 66 69 6C 65 20 64 6F 65 73 20 6E 6F 74 20 65 6E 64 20 77 69 74 68 20 2E 70 6E 67 00  # "Input file does not end with .png"
64 65 66 61 75 6C 74 5F 6F 75 74 70 75 74 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 35 33 2E 31 36 2D 35 33 2E 34 33 29 00  # "default_output (rotate-main.c0: 53.16-53.43)"
5F 00  # "_"
64 65 66 61 75 6C 74 5F 6F 75 74 70 75 74 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 35 34 2E 39 2D 35 34 2E 33 30 29 00  # "default_output (rotate-main.c0: 54.9-54.30)"
64 65 66 61 75 6C 74 5F 6F 75 74 70 75 74 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 35 35 2E 39 2D 35 35 2E 33 31 29 00  # "default_output (rotate-main.c0: 55.9-55.31)"
2E 70 6E 67 00  # ".png"
64 65 66 61 75 6C 74 5F 6F 75 74 70 75 74 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 35 36 2E 39 2D 35 36 2E 33 33 29 00  # "default_output (rotate-main.c0: 56.9-56.33)"
28 70 72 6F 67 72 61 6D 20 73 74 61 72 74 29 00  # "(program start)"
2D 6F 00  # "-o"
6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 36 35 2E 33 2D 36 35 2E 32 38 29 00  # "main (rotate-main.c0: 65.3-65.28)"
2D 69 00  # "-i"
6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 36 36 2E 33 2D 36 36 2E 32 37 29 00  # "main (rotate-main.c0: 66.3-66.27)"
6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 36 37 2E 33 2D 36 37 2E 31 35 29 00  # "main (rotate-main.c0: 67.3-67.15)"
00  # ""
6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 36 39 2E 37 2D 36 39 2E 33 31 29 00  # "main (rotate-main.c0: 69.7-69.31)"
55 73 61 67 65 3A 20 72 6F 74 61 74 65 20 2D 69 20 3C 69 6E 70 75 74 20 69 6D 61 67 65 3E 20 5B 2D 6F 20 3C 6F 75 74 70 75 74 20 69 6D 61 67 65 3E 5D 00  # "Usage: rotate -i <input image> [-o <output image>]"
00  # ""
6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 37 33 2E 37 2D 37 33 2E 33 32 29 00  # "main (rotate-main.c0: 73.7-73.32)"
72 6F 74 61 74 65 00  # "rotate"
6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 37 34 2E 31 35 2D 37 34 2E 34 37 29 00  # "main (rotate-main.c0: 74.15-74.47)"
6D 61 69 6E 20 28 72 6F 74 61 74 65 2D 6D 61 69 6E 2E 63 30 3A 20 37 37 2E 33 2D 37 37 2E 33 31 29 00  # "main (rotate-main.c0: 77.3-77.31)"

00 4C             # function count
# function_pool

#<main>
00                # number of arguments = 0
04                # number of local variables = 4
00 81             # code length = 129 bytes
14 35 A5 # aldc 13733         # s[13733] = "(program start)"
36 00    # vstore 0           # _caller = "(program start)";
BB 08    # new 8              # alloc(string)
36 02    # vstore 2           # output = alloc(string);
BB 08    # new 8              # alloc(string)
36 03    # vstore 3           # input = alloc(string);
14 35 B5 # aldc 13749         # s[13749] = "-o"
15 02    # vload 2            # output
14 35 B8 # aldc 13752         # s[13752] = "main (rotate-main.c0: 65.3-65.28)"
B8 00 3A # invokestatic 58    # args_string__1("-o", output, "main (rotate-main.c0: 65.3-65.28)")
57       # pop                # (ignore result)
14 35 DA # aldc 13786         # s[13786] = "-i"
15 03    # vload 3            # input
14 35 DD # aldc 13789         # s[13789] = "main (rotate-main.c0: 66.3-66.27)"
B8 00 3A # invokestatic 58    # args_string__1("-i", input, "main (rotate-main.c0: 66.3-66.27)")
57       # pop                # (ignore result)
14 35 FF # aldc 13823         # s[13823] = "main (rotate-main.c0: 67.3-67.15)"
B8 00 3B # invokestatic 59    # args_parse__1("main (rotate-main.c0: 67.3-67.15)")
57       # pop                # (ignore result)
14 36 21 # aldc 13857         # s[13857] = ""
15 03    # vload 3            # input
2F       # amload             # *(input)
14 36 22 # aldc 13858         # s[13858] = "main (rotate-main.c0: 69.7-69.31)"
B8 00 12 # invokestatic 18    # string_equal__1("", *(input), "main (rotate-main.c0: 69.7-69.31)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1("", *(input), "main (rotate-main.c0: 69.7-69.31)") == true) goto <468:then>
A7 00 0A # goto +10           # goto <469:else>
# <468:then>
14 36 44 # aldc 13892         # s[13892] = "Usage: rotate -i <input image> [-o <output image>]"
BF       # athrow             # error "Usage: rotate -i <input image> [-o <output image>]"
A7 00 03 # goto +3            # goto <470:endif>
# <469:else>
# <470:endif>
14 36 77 # aldc 13943         # s[13943] = ""
15 02    # vload 2            # output
2F       # amload             # *(output)
14 36 78 # aldc 13944         # s[13944] = "main (rotate-main.c0: 73.7-73.32)"
B8 00 12 # invokestatic 18    # string_equal__1("", *(output), "main (rotate-main.c0: 73.7-73.32)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1("", *(output), "main (rotate-main.c0: 73.7-73.32)") == true) goto <471:then>
A7 00 15 # goto +21           # goto <472:else>
# <471:then>
15 02    # vload 2            # output
15 03    # vload 3            # input
2F       # amload             # *(input)
14 36 9A # aldc 13978         # s[13978] = "rotate"
14 36 A1 # aldc 13985         # s[13985] = "main (rotate-main.c0: 74.15-74.47)"
B8 00 4B # invokestatic 75    # default_output(*(input), "rotate", "main (rotate-main.c0: 74.15-74.47)")
4F       # amstore            # *(output) = default_output(*(input), "rotate", "main (rotate-main.c0: 74.15-74.47)");
A7 00 03 # goto +3            # goto <473:endif>
# <472:else>
# <473:endif>
15 03    # vload 3            # input
2F       # amload             # *(input)
15 02    # vload 2            # output
2F       # amload             # *(output)
14 36 C4 # aldc 14020         # s[14020] = "main (rotate-main.c0: 77.3-77.31)"
B8 00 4A # invokestatic 74    # rotate_main(*(input), *(output), "main (rotate-main.c0: 77.3-77.31)")
57       # pop                # (ignore result)
10 00    # bipush 0           # 0
36 01    # vstore 1           # _result = 0;
15 01    # vload 1            # _result
B0       # return             # 


#<int_size>
01                # number of arguments = 1
02                # number of local variables = 2
00 07             # code length = 7 bytes
10 04    # bipush 4           # 4
36 01    # vstore 1           # _result = 4;
15 01    # vload 1            # _result
B0       # return             # 


#<int_size__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 20             # code length = 32 bytes
14 00 00 # aldc 0             # s[0] = "int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)"
B8 00 01 # invokestatic 1     # int_size("int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)")
36 01    # vstore 1           # _result = int_size("int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)");
15 01    # vload 1            # _result
10 04    # bipush 4           # 4
9F 00 06 # if_cmpeq +6        # if (_result == 4) goto <00:cond_true>
A7 00 08 # goto +8            # goto <01:cond_false>
# <00:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <02:cond_end>
# <01:cond_false>
10 00    # bipush 0           # false
# <02:cond_end>
14 00 3E # aldc 62            # s[62] = "/afs/andrew/course/15/122/lib/util.h0: 9.6-9.27: @ensures annotation failed"
CF       # assert             # assert (_result == 4) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<int_max>
01                # number of arguments = 1
02                # number of local variables = 2
00 08             # code length = 8 bytes
13 00 02 # ildc 2             # c[2] = 2147483647
36 01    # vstore 1           # _result = 2147483647;
15 01    # vload 1            # _result
B0       # return             # 


#<int_max__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 21             # code length = 33 bytes
14 00 8A # aldc 138           # s[138] = "int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)"
B8 00 03 # invokestatic 3     # int_max("int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)")
36 01    # vstore 1           # _result = int_max("int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)");
15 01    # vload 1            # _result
13 00 00 # ildc 0             # c[0] = 2147483647
9F 00 06 # if_cmpeq +6        # if (_result == 2147483647) goto <03:cond_true>
A7 00 08 # goto +8            # goto <04:cond_false>
# <03:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <05:cond_end>
# <04:cond_false>
10 00    # bipush 0           # false
# <05:cond_end>
14 00 C9 # aldc 201           # s[201] = "/afs/andrew/course/15/122/lib/util.h0: 11.6-11.36: @ensures annotation failed"
CF       # assert             # assert (_result == 2147483647) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<int_min>
01                # number of arguments = 1
02                # number of local variables = 2
00 08             # code length = 8 bytes
13 00 03 # ildc 3             # c[3] = -2147483648
36 01    # vstore 1           # _result = -2147483648;
15 01    # vload 1            # _result
B0       # return             # 


#<int_min__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 21             # code length = 33 bytes
14 01 17 # aldc 279           # s[279] = "int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)"
B8 00 05 # invokestatic 5     # int_min("int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)")
36 01    # vstore 1           # _result = int_min("int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)");
15 01    # vload 1            # _result
13 00 01 # ildc 1             # c[1] = -2147483648
9F 00 06 # if_cmpeq +6        # if (_result == -(-2147483648)) goto <06:cond_true>
A7 00 08 # goto +8            # goto <07:cond_false>
# <06:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <08:cond_end>
# <07:cond_false>
10 00    # bipush 0           # false
# <08:cond_end>
14 01 56 # aldc 342           # s[342] = "/afs/andrew/course/15/122/lib/util.h0: 13.6-13.37: @ensures annotation failed"
CF       # assert             # assert (_result == -(-2147483648)) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<abs>
02                # number of arguments = 2
03                # number of local variables = 3
00 52             # code length = 82 bytes
15 00    # vload 0            # x
14 0E E9 # aldc 3817          # s[3817] = "abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)"
B8 00 06 # invokestatic 6     # int_min__1("abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)")
A3 00 06 # if_icmpgt +6       # if (x > int_min__1("abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)")) goto <133:cond_true>
A7 00 08 # goto +8            # goto <134:cond_false>
# <133:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <135:cond_end>
# <134:cond_false>
10 00    # bipush 0           # false
# <135:cond_end>
14 0F 22 # aldc 3874          # s[3874] = "/afs/andrew/course/15/122/lib/util.c0: 29.4-29.27: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 0F 72 # aldc 3954          # s[3954] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/util.c0: 29.4-29.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (x > int_min__1("abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)")) [failure message on stack]
15 00    # vload 0            # x
10 00    # bipush 0           # 0
A1 00 06 # if_icmplt +6       # if (x < 0) goto <136:cond_true>
A7 00 0B # goto +11           # goto <137:cond_false>
# <136:cond_true>
10 00    # bipush 0           # 
15 00    # vload 0            # x
64       # isub               # -(x)
A7 00 05 # goto +5            # goto <138:cond_end>
# <137:cond_false>
15 00    # vload 0            # x
# <138:cond_end>
36 02    # vstore 2           # _result = ((x < 0) ? -(x) : x);
15 02    # vload 2            # _result
10 00    # bipush 0           # 0
A2 00 06 # if_icmpge +6       # if (_result >= 0) goto <139:cond_true>
A7 00 08 # goto +8            # goto <140:cond_false>
# <139:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <141:cond_end>
# <140:cond_false>
10 00    # bipush 0           # false
# <141:cond_end>
14 0F 84 # aldc 3972          # s[3972] = "/afs/andrew/course/15/122/lib/util.c0: 30.4-30.25: @ensures annotation failed"
CF       # assert             # assert (_result >= 0) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<abs__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 6D             # code length = 109 bytes
15 00    # vload 0            # x
14 01 A4 # aldc 420           # s[420] = "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)"
B8 00 06 # invokestatic 6     # int_min__1("abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)")
A3 00 06 # if_icmpgt +6       # if (x > int_min__1("abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)")) goto <09:cond_true>
A7 00 08 # goto +8            # goto <10:cond_false>
# <09:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <11:cond_end>
# <10:cond_false>
10 00    # bipush 0           # false
# <11:cond_end>
14 01 E0 # aldc 480           # s[480] = "/afs/andrew/course/15/122/lib/util.h0: 17.6-17.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 02 30 # aldc 560           # s[560] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/util.h0: 17.6-17.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (x > int_min__1("abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)")) [failure message on stack]
15 00    # vload 0            # x
14 02 42 # aldc 578           # s[578] = "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)"
B8 00 07 # invokestatic 7     # abs(x, "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)")
36 02    # vstore 2           # _result = abs(x, "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)");
15 02    # vload 2            # _result
10 00    # bipush 0           # 0
A2 00 06 # if_icmpge +6       # if (_result >= 0) goto <12:cond_true>
A7 00 08 # goto +8            # goto <13:cond_false>
# <12:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <14:cond_end>
# <13:cond_false>
10 00    # bipush 0           # false
# <14:cond_end>
14 02 7D # aldc 637           # s[637] = "/afs/andrew/course/15/122/lib/util.h0: 18.6-18.27: @ensures annotation failed"
CF       # assert             # assert (_result >= 0) [failure message on stack]
15 02    # vload 2            # _result
15 00    # vload 0            # x
10 00    # bipush 0           # 0
A1 00 06 # if_icmplt +6       # if (x < 0) goto <18:cond_true>
A7 00 0B # goto +11           # goto <19:cond_false>
# <18:cond_true>
10 00    # bipush 0           # 
15 00    # vload 0            # x
64       # isub               # -(x)
A7 00 05 # goto +5            # goto <20:cond_end>
# <19:cond_false>
15 00    # vload 0            # x
# <20:cond_end>
9F 00 06 # if_cmpeq +6        # if (_result == ((x < 0) ? -(x) : x)) goto <15:cond_true>
A7 00 08 # goto +8            # goto <16:cond_false>
# <15:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <17:cond_end>
# <16:cond_false>
10 00    # bipush 0           # false
# <17:cond_end>
14 02 CB # aldc 715           # s[715] = "/afs/andrew/course/15/122/lib/util.h0: 19.6-19.42: @ensures annotation failed"
CF       # assert             # assert (_result == ((x < 0) ? -(x) : x)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<max>
03                # number of arguments = 3
04                # number of local variables = 4
00 5E             # code length = 94 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
A3 00 06 # if_icmpgt +6       # if (x > y) goto <103:cond_true>
A7 00 08 # goto +8            # goto <104:cond_false>
# <103:cond_true>
15 00    # vload 0            # x
A7 00 05 # goto +5            # goto <105:cond_end>
# <104:cond_false>
15 01    # vload 1            # y
# <105:cond_end>
36 03    # vstore 3           # _result = ((x > y) ? x : y);
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <106:cond_true>
A7 00 08 # goto +8            # goto <107:cond_false>
# <106:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <108:cond_end>
# <107:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <109:cond_true>
A7 00 08 # goto +8            # goto <110:cond_false>
# <109:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <111:cond_end>
# <110:cond_false>
10 00    # bipush 0           # false
# <111:cond_end>
# <108:cond_end>
14 0D B1 # aldc 3505          # s[3505] = "/afs/andrew/course/15/122/lib/util.c0: 13.4-13.41: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A2 00 06 # if_icmpge +6       # if (_result >= x) goto <112:cond_true>
A7 00 17 # goto +23           # goto <113:cond_false>
# <112:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A2 00 06 # if_icmpge +6       # if (_result >= y) goto <115:cond_true>
A7 00 08 # goto +8            # goto <116:cond_false>
# <115:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <117:cond_end>
# <116:cond_false>
10 00    # bipush 0           # false
# <117:cond_end>
A7 00 05 # goto +5            # goto <114:cond_end>
# <113:cond_false>
10 00    # bipush 0           # false
# <114:cond_end>
14 0D FF # aldc 3583          # s[3583] = "/afs/andrew/course/15/122/lib/util.c0: 14.4-14.41: @ensures annotation failed"
CF       # assert             # assert ((_result >= x) && (_result >= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<max__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 57             # code length = 87 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
14 03 19 # aldc 793           # s[793] = "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)"
B8 00 09 # invokestatic 9     # max(x, y, "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)")
36 03    # vstore 3           # _result = max(x, y, "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)");
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <21:cond_true>
A7 00 08 # goto +8            # goto <22:cond_false>
# <21:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <23:cond_end>
# <22:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <24:cond_true>
A7 00 08 # goto +8            # goto <25:cond_false>
# <24:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <26:cond_end>
# <25:cond_false>
10 00    # bipush 0           # false
# <26:cond_end>
# <23:cond_end>
14 03 54 # aldc 852           # s[852] = "/afs/andrew/course/15/122/lib/util.h0: 23.6-23.43: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A2 00 06 # if_icmpge +6       # if (_result >= x) goto <27:cond_true>
A7 00 17 # goto +23           # goto <28:cond_false>
# <27:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A2 00 06 # if_icmpge +6       # if (_result >= y) goto <30:cond_true>
A7 00 08 # goto +8            # goto <31:cond_false>
# <30:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <32:cond_end>
# <31:cond_false>
10 00    # bipush 0           # false
# <32:cond_end>
A7 00 05 # goto +5            # goto <29:cond_end>
# <28:cond_false>
10 00    # bipush 0           # false
# <29:cond_end>
14 03 A2 # aldc 930           # s[930] = "/afs/andrew/course/15/122/lib/util.h0: 24.6-24.43: @ensures annotation failed"
CF       # assert             # assert ((_result >= x) && (_result >= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<min>
03                # number of arguments = 3
04                # number of local variables = 4
00 5E             # code length = 94 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
A3 00 06 # if_icmpgt +6       # if (x > y) goto <118:cond_true>
A7 00 08 # goto +8            # goto <119:cond_false>
# <118:cond_true>
15 01    # vload 1            # y
A7 00 05 # goto +5            # goto <120:cond_end>
# <119:cond_false>
15 00    # vload 0            # x
# <120:cond_end>
36 03    # vstore 3           # _result = ((x > y) ? y : x);
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <121:cond_true>
A7 00 08 # goto +8            # goto <122:cond_false>
# <121:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <123:cond_end>
# <122:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <124:cond_true>
A7 00 08 # goto +8            # goto <125:cond_false>
# <124:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <126:cond_end>
# <125:cond_false>
10 00    # bipush 0           # false
# <126:cond_end>
# <123:cond_end>
14 0E 4D # aldc 3661          # s[3661] = "/afs/andrew/course/15/122/lib/util.c0: 21.4-21.41: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A4 00 06 # if_icmple +6       # if (_result <= x) goto <127:cond_true>
A7 00 17 # goto +23           # goto <128:cond_false>
# <127:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A4 00 06 # if_icmple +6       # if (_result <= y) goto <130:cond_true>
A7 00 08 # goto +8            # goto <131:cond_false>
# <130:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <132:cond_end>
# <131:cond_false>
10 00    # bipush 0           # false
# <132:cond_end>
A7 00 05 # goto +5            # goto <129:cond_end>
# <128:cond_false>
10 00    # bipush 0           # false
# <129:cond_end>
14 0E 9B # aldc 3739          # s[3739] = "/afs/andrew/course/15/122/lib/util.c0: 22.4-22.41: @ensures annotation failed"
CF       # assert             # assert ((_result <= x) && (_result <= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<min__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 57             # code length = 87 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
14 03 F0 # aldc 1008          # s[1008] = "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)"
B8 00 0B # invokestatic 11    # min(x, y, "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)")
36 03    # vstore 3           # _result = min(x, y, "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)");
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <33:cond_true>
A7 00 08 # goto +8            # goto <34:cond_false>
# <33:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <35:cond_end>
# <34:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <36:cond_true>
A7 00 08 # goto +8            # goto <37:cond_false>
# <36:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <38:cond_end>
# <37:cond_false>
10 00    # bipush 0           # false
# <38:cond_end>
# <35:cond_end>
14 04 2B # aldc 1067          # s[1067] = "/afs/andrew/course/15/122/lib/util.h0: 28.6-28.43: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A4 00 06 # if_icmple +6       # if (_result <= x) goto <39:cond_true>
A7 00 17 # goto +23           # goto <40:cond_false>
# <39:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A4 00 06 # if_icmple +6       # if (_result <= y) goto <42:cond_true>
A7 00 08 # goto +8            # goto <43:cond_false>
# <42:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <44:cond_end>
# <43:cond_false>
10 00    # bipush 0           # false
# <44:cond_end>
A7 00 05 # goto +5            # goto <41:cond_end>
# <40:cond_false>
10 00    # bipush 0           # false
# <41:cond_end>
14 04 79 # aldc 1145          # s[1145] = "/afs/andrew/course/15/122/lib/util.h0: 29.6-29.43: @ensures annotation failed"
CF       # assert             # assert ((_result <= x) && (_result <= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<int2hex>
02                # number of arguments = 2
06                # number of local variables = 6
00 AE             # code length = 174 bytes
10 02    # bipush 2           # 2
14 11 38 # aldc 4408          # s[4408] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"
B8 00 02 # invokestatic 2     # int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)")
68       # imul               # (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"))
36 03    # vstore 3           # digits = (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"));
15 03    # vload 3            # digits
10 01    # bipush 1           # 1
60       # iadd               # (digits + 1)
BC 01    # newarray 1         # alloc_array(char, (digits + 1))
36 04    # vstore 4           # s = alloc_array(char, (digits + 1));
15 04    # vload 4            # s
15 03    # vload 3            # digits
63       # aadds              # &s[digits]
10 00    # bipush 0           # '\000'
55       # cmstore            # s[digits] = '\0';
10 00    # bipush 0           # 0
36 05    # vstore 5           # i = 0;
# <156:loop>
A7 00 03 # goto +3            # goto <157:body>
# <157:body>
10 00    # bipush 0           # 0
15 05    # vload 5            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <159:cond_true>
A7 00 17 # goto +23           # goto <160:cond_false>
# <159:cond_true>
15 05    # vload 5            # i
15 03    # vload 3            # digits
A4 00 06 # if_icmple +6       # if (i <= digits) goto <162:cond_true>
A7 00 08 # goto +8            # goto <163:cond_false>
# <162:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <164:cond_end>
# <163:cond_false>
10 00    # bipush 0           # false
# <164:cond_end>
A7 00 05 # goto +5            # goto <161:cond_end>
# <160:cond_false>
10 00    # bipush 0           # false
# <161:cond_end>
14 11 75 # aldc 4469          # s[4469] = "/afs/andrew/course/15/122/lib/util.c0: 55.8-55.45: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= i) && (i <= digits)) [failure message on stack]
15 05    # vload 5            # i
15 03    # vload 3            # digits
A1 00 06 # if_icmplt +6       # if (i < digits) goto <165:then>
A7 00 2B # goto +43           # goto <166:else>
# <165:then>
15 04    # vload 4            # s
15 03    # vload 3            # digits
15 05    # vload 5            # i
64       # isub               # (digits - i)
10 01    # bipush 1           # 1
64       # isub               # ((digits - i) - 1)
63       # aadds              # &s[((digits - i) - 1)]
15 00    # vload 0            # x
10 0F    # bipush 15          # 15
7E       # iand               # (x & 15)
14 11 CA # aldc 4554          # s[4554] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)"
B8 00 1D # invokestatic 29    # hexdig2char((x & 15), "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)")
55       # cmstore            # s[((digits - i) - 1)] = hexdig2char((x & 15), "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)");
15 00    # vload 0            # x
10 04    # bipush 4           # 4
7A       # ishr               # (x >> 4)
36 00    # vstore 0           # x = (x >> 4);
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # i += 1;
A7 00 06 # goto +6            # goto <167:endif>
# <166:else>
A7 00 06 # goto +6            # break
# <167:endif>
A7 FF A4 # goto -92           # goto <156:loop>
# <158:exit>
15 04    # vload 4            # s
14 12 07 # aldc 4615          # s[4615] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)"
B8 00 1A # invokestatic 26    # string_from_chararray__1(s, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)")
36 02    # vstore 2           # _result = string_from_chararray__1(s, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)");
15 02    # vload 2            # _result
14 12 44 # aldc 4676          # s[4676] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)"
B8 00 0E # invokestatic 14    # string_length__1(_result, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)")
10 02    # bipush 2           # 2
14 12 81 # aldc 4737          # s[4737] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"
B8 00 02 # invokestatic 2     # int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)")
68       # imul               # (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"))
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)") == (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"))) goto <168:cond_true>
A7 00 08 # goto +8            # goto <169:cond_false>
# <168:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <170:cond_end>
# <169:cond_false>
10 00    # bipush 0           # false
# <170:cond_end>
14 12 BE # aldc 4798          # s[4798] = "/afs/andrew/course/15/122/lib/util.c0: 49.4-49.51: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)") == (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"))) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<string_length__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 01 # invokenative 1     # string_length(s)
36 02    # vstore 2           # _result = string_length(s);
15 02    # vload 2            # _result
B0       # return             # 


#<string_charat__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 41             # code length = 65 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # idx
A4 00 06 # if_icmple +6       # if (0 <= idx) goto <45:cond_true>
A7 00 1D # goto +29           # goto <46:cond_false>
# <45:cond_true>
15 01    # vload 1            # idx
15 00    # vload 0            # s
14 04 C7 # aldc 1223          # s[1223] = "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)"
B8 00 0E # invokestatic 14    # string_length__1(s, "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)")
A1 00 06 # if_icmplt +6       # if (idx < string_length__1(s, "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)")) goto <48:cond_true>
A7 00 08 # goto +8            # goto <49:cond_false>
# <48:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <50:cond_end>
# <49:cond_false>
10 00    # bipush 0           # false
# <50:cond_end>
A7 00 05 # goto +5            # goto <47:cond_end>
# <46:cond_false>
10 00    # bipush 0           # false
# <47:cond_end>
14 05 0F # aldc 1295          # s[1295] = "/afs/andrew/course/15/122/lib/string.h0: 19.6-19.50: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 05 61 # aldc 1377          # s[1377] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/string.h0: 19.6-19.50: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= idx) && (idx < string_length__1(s, "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)"))) [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # idx
B7 00 02 # invokenative 2     # string_charat(s, idx)
36 03    # vstore 3           # _result = string_charat(s, idx);
15 03    # vload 3            # _result
B0       # return             # 


#<string_join__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 36             # code length = 54 bytes
15 00    # vload 0            # a
15 01    # vload 1            # b
B7 00 00 # invokenative 0     # string_join(a, b)
36 03    # vstore 3           # _result = string_join(a, b);
15 03    # vload 3            # _result
14 05 73 # aldc 1395          # s[1395] = "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)"
B8 00 0E # invokestatic 14    # string_length__1(_result, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)")
15 00    # vload 0            # a
14 05 B9 # aldc 1465          # s[1465] = "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)"
B8 00 0E # invokestatic 14    # string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)")
15 01    # vload 1            # b
14 05 FF # aldc 1535          # s[1535] = "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"
B8 00 0E # invokestatic 14    # string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)")
60       # iadd               # (string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)") + string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"))
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)") == (string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)") + string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"))) goto <51:cond_true>
A7 00 08 # goto +8            # goto <52:cond_false>
# <51:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <53:cond_end>
# <52:cond_false>
10 00    # bipush 0           # false
# <53:cond_end>
14 06 45 # aldc 1605          # s[1605] = "/afs/andrew/course/15/122/lib/string.h0: 23.6-24.55: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)") == (string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)") + string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"))) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<string_sub__1>
04                # number of arguments = 4
05                # number of local variables = 5
00 6B             # code length = 107 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # start
A4 00 06 # if_icmple +6       # if (0 <= start) goto <57:and>
A7 00 27 # goto +39           # goto <55:cond_false>
# <57:and>
15 01    # vload 1            # start
15 02    # vload 2            # end
A4 00 06 # if_icmple +6       # if (start <= end) goto <54:cond_true>
A7 00 1D # goto +29           # goto <55:cond_false>
# <54:cond_true>
15 02    # vload 2            # end
15 00    # vload 0            # a
14 06 95 # aldc 1685          # s[1685] = "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)"
B8 00 0E # invokestatic 14    # string_length__1(a, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)")
A4 00 06 # if_icmple +6       # if (end <= string_length__1(a, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)")) goto <58:cond_true>
A7 00 08 # goto +8            # goto <59:cond_false>
# <58:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <60:cond_end>
# <59:cond_false>
10 00    # bipush 0           # false
# <60:cond_end>
A7 00 05 # goto +5            # goto <56:cond_end>
# <55:cond_false>
10 00    # bipush 0           # false
# <56:cond_end>
14 06 DA # aldc 1754          # s[1754] = "/afs/andrew/course/15/122/lib/string.h0: 31.6-31.69: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 07 2C # aldc 1836          # s[1836] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/string.h0: 31.6-31.69: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= start) && (start <= end)) && (end <= string_length__1(a, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)"))) [failure message on stack]
15 00    # vload 0            # a
15 01    # vload 1            # start
15 02    # vload 2            # end
B7 00 03 # invokenative 3     # string_sub(a, start, end)
36 04    # vstore 4           # _result = string_sub(a, start, end);
15 04    # vload 4            # _result
14 07 3E # aldc 1854          # s[1854] = "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)"
B8 00 0E # invokestatic 14    # string_length__1(_result, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)")
15 02    # vload 2            # end
15 01    # vload 1            # start
64       # isub               # (end - start)
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)") == (end - start)) goto <61:cond_true>
A7 00 08 # goto +8            # goto <62:cond_false>
# <61:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <63:cond_end>
# <62:cond_false>
10 00    # bipush 0           # false
# <63:cond_end>
14 07 83 # aldc 1923          # s[1923] = "/afs/andrew/course/15/122/lib/string.h0: 32.6-32.52: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)") == (end - start)) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 


#<string_equal__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 0C             # code length = 12 bytes
15 00    # vload 0            # a
15 01    # vload 1            # b
B7 00 04 # invokenative 4     # string_equal(a, b)
36 03    # vstore 3           # _result = string_equal(a, b);
15 03    # vload 3            # _result
B0       # return             # 


#<string_compare__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 30             # code length = 48 bytes
15 00    # vload 0            # a
15 01    # vload 1            # b
B7 00 05 # invokenative 5     # string_compare(a, b)
36 03    # vstore 3           # _result = string_compare(a, b);
10 FF    # bipush -1          # -1
15 03    # vload 3            # _result
A4 00 06 # if_icmple +6       # if (-(1) <= _result) goto <64:cond_true>
A7 00 17 # goto +23           # goto <65:cond_false>
# <64:cond_true>
15 03    # vload 3            # _result
10 01    # bipush 1           # 1
A4 00 06 # if_icmple +6       # if (_result <= 1) goto <67:cond_true>
A7 00 08 # goto +8            # goto <68:cond_false>
# <67:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <69:cond_end>
# <68:cond_false>
10 00    # bipush 0           # false
# <69:cond_end>
A7 00 05 # goto +5            # goto <66:cond_end>
# <65:cond_false>
10 00    # bipush 0           # false
# <66:cond_end>
14 07 D3 # aldc 2003          # s[2003] = "/afs/andrew/course/15/122/lib/string.h0: 37.6-37.44: @ensures annotation failed"
CF       # assert             # assert ((-(1) <= _result) && (_result <= 1)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<string_fromint__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # i
B7 00 06 # invokenative 6     # string_fromint(i)
36 02    # vstore 2           # _result = string_fromint(i);
15 02    # vload 2            # _result
B0       # return             # 


#<string_frombool__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # b
B7 00 07 # invokenative 7     # string_frombool(b)
36 02    # vstore 2           # _result = string_frombool(b);
15 02    # vload 2            # _result
B0       # return             # 


#<string_fromchar__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 62             # code length = 98 bytes
15 00    # vload 0            # c
10 00    # bipush 0           # '\000'
A0 00 06 # if_cmpne +6        # if (c != '\0') goto <70:cond_true>
A7 00 08 # goto +8            # goto <71:cond_false>
# <70:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <72:cond_end>
# <71:cond_false>
10 00    # bipush 0           # false
# <72:cond_end>
14 08 23 # aldc 2083          # s[2083] = "/afs/andrew/course/15/122/lib/string.h0: 43.6-43.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 08 75 # aldc 2165          # s[2165] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/string.h0: 43.6-43.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (c != '\0') [failure message on stack]
15 00    # vload 0            # c
B7 00 08 # invokenative 8     # string_fromchar(c)
36 02    # vstore 2           # _result = string_fromchar(c);
15 02    # vload 2            # _result
14 08 87 # aldc 2183          # s[2183] = "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)"
B8 00 0E # invokestatic 14    # string_length__1(_result, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)")
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)") == 1) goto <73:cond_true>
A7 00 08 # goto +8            # goto <74:cond_false>
# <73:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <75:cond_end>
# <74:cond_false>
10 00    # bipush 0           # false
# <75:cond_end>
14 08 D1 # aldc 2257          # s[2257] = "/afs/andrew/course/15/122/lib/string.h0: 44.6-44.42: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)") == 1) [failure message on stack]
15 02    # vload 2            # _result
10 00    # bipush 0           # 0
14 09 21 # aldc 2337          # s[2337] = "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)"
B8 00 0F # invokestatic 15    # string_charat__1(_result, 0, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)")
15 00    # vload 0            # c
9F 00 06 # if_cmpeq +6        # if (string_charat__1(_result, 0, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)") == c) goto <76:cond_true>
A7 00 08 # goto +8            # goto <77:cond_false>
# <76:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <78:cond_end>
# <77:cond_false>
10 00    # bipush 0           # false
# <78:cond_end>
14 09 6B # aldc 2411          # s[2411] = "/afs/andrew/course/15/122/lib/string.h0: 45.6-45.45: @ensures annotation failed"
CF       # assert             # assert (string_charat__1(_result, 0, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)") == c) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<string_tolower__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 09 # invokenative 9     # string_tolower(s)
36 02    # vstore 2           # _result = string_tolower(s);
15 02    # vload 2            # _result
B0       # return             # 


#<string_terminated__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 3C             # code length = 60 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # n
A4 00 06 # if_icmple +6       # if (0 <= n) goto <79:cond_true>
A7 00 18 # goto +24           # goto <80:cond_false>
# <79:cond_true>
15 01    # vload 1            # n
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (n <= \length(A)) goto <82:cond_true>
A7 00 08 # goto +8            # goto <83:cond_false>
# <82:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <84:cond_end>
# <83:cond_false>
10 00    # bipush 0           # false
# <84:cond_end>
A7 00 05 # goto +5            # goto <81:cond_end>
# <80:cond_false>
10 00    # bipush 0           # false
# <81:cond_end>
14 09 BB # aldc 2491          # s[2491] = "/afs/andrew/course/15/122/lib/string.h0: 52.6-52.41: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 0A 0D # aldc 2573          # s[2573] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/string.h0: 52.6-52.41: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= n) && (n <= \length(A))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # n
B7 00 0A # invokenative 10    # string_terminated(A, n)
36 03    # vstore 3           # _result = string_terminated(A, n);
15 03    # vload 3            # _result
B0       # return             # 


#<string_to_chararray__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 40             # code length = 64 bytes
15 00    # vload 0            # s
B7 00 0B # invokenative 11    # string_to_chararray(s)
36 02    # vstore 2           # _result = string_to_chararray(s);
15 02    # vload 2            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # s
14 0A 1F # aldc 2591          # s[2591] = "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)"
B8 00 0E # invokestatic 14    # string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)")
10 01    # bipush 1           # 1
60       # iadd               # (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)") + 1)
A2 00 06 # if_icmpge +6       # if (\length(_result) >= (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)") + 1)) goto <85:cond_true>
A7 00 08 # goto +8            # goto <86:cond_false>
# <85:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <87:cond_end>
# <86:cond_false>
10 00    # bipush 0           # false
# <87:cond_end>
14 0A 6D # aldc 2669          # s[2669] = "/afs/andrew/course/15/122/lib/string.h0: 56.6-56.55: @ensures annotation failed"
CF       # assert             # assert (\length(_result) >= (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)") + 1)) [failure message on stack]
15 02    # vload 2            # _result
15 00    # vload 0            # s
14 0A BD # aldc 2749          # s[2749] = "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)"
B8 00 0E # invokestatic 14    # string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)")
10 01    # bipush 1           # 1
60       # iadd               # (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)") + 1)
14 0B 0B # aldc 2827          # s[2827] = "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)"
B8 00 18 # invokestatic 24    # string_terminated__1(_result, (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)") + 1), "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)")
14 0B 59 # aldc 2905          # s[2905] = "/afs/andrew/course/15/122/lib/string.h0: 57.6-57.63: @ensures annotation failed"
CF       # assert             # assert string_terminated__1(_result, (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)") + 1), "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<string_from_chararray__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 43             # code length = 67 bytes
15 00    # vload 0            # A
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
14 0B A9 # aldc 2985          # s[2985] = "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)"
B8 00 18 # invokestatic 24    # string_terminated__1(A, \length(A), "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)")
14 0B F9 # aldc 3065          # s[3065] = "/afs/andrew/course/15/122/lib/string.h0: 62.6-62.48: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 0C 4B # aldc 3147          # s[3147] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/string.h0: 62.6-62.48: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert string_terminated__1(A, \length(A), "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)") [failure message on stack]
15 00    # vload 0            # A
B7 00 0C # invokenative 12    # string_from_chararray(A)
36 02    # vstore 2           # _result = string_from_chararray(A);
15 02    # vload 2            # _result
14 0C 5D # aldc 3165          # s[3165] = "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)"
B8 00 0E # invokestatic 14    # string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)")
10 01    # bipush 1           # 1
60       # iadd               # (string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)") + 1)
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if ((string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)") + 1) <= \length(A)) goto <88:cond_true>
A7 00 08 # goto +8            # goto <89:cond_false>
# <88:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <90:cond_end>
# <89:cond_false>
10 00    # bipush 0           # false
# <90:cond_end>
14 0C AD # aldc 3245          # s[3245] = "/afs/andrew/course/15/122/lib/string.h0: 63.6-63.55: @ensures annotation failed"
CF       # assert             # assert ((string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)") + 1) <= \length(A)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<char_ord__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 2E             # code length = 46 bytes
15 00    # vload 0            # c
B7 00 0D # invokenative 13    # char_ord(c)
36 02    # vstore 2           # _result = char_ord(c);
10 00    # bipush 0           # 0
15 02    # vload 2            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <91:cond_true>
A7 00 17 # goto +23           # goto <92:cond_false>
# <91:cond_true>
15 02    # vload 2            # _result
10 7F    # bipush 127         # 127
A4 00 06 # if_icmple +6       # if (_result <= 127) goto <94:cond_true>
A7 00 08 # goto +8            # goto <95:cond_false>
# <94:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <96:cond_end>
# <95:cond_false>
10 00    # bipush 0           # false
# <96:cond_end>
A7 00 05 # goto +5            # goto <93:cond_end>
# <92:cond_false>
10 00    # bipush 0           # false
# <93:cond_end>
14 0C FD # aldc 3325          # s[3325] = "/afs/andrew/course/15/122/lib/string.h0: 67.6-67.45: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result <= 127)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<char_chr__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 39             # code length = 57 bytes
10 00    # bipush 0           # 0
15 00    # vload 0            # n
A4 00 06 # if_icmple +6       # if (0 <= n) goto <97:cond_true>
A7 00 17 # goto +23           # goto <98:cond_false>
# <97:cond_true>
15 00    # vload 0            # n
10 7F    # bipush 127         # 127
A4 00 06 # if_icmple +6       # if (n <= 127) goto <100:cond_true>
A7 00 08 # goto +8            # goto <101:cond_false>
# <100:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <102:cond_end>
# <101:cond_false>
10 00    # bipush 0           # false
# <102:cond_end>
A7 00 05 # goto +5            # goto <99:cond_end>
# <98:cond_false>
10 00    # bipush 0           # false
# <99:cond_end>
14 0D 4D # aldc 3405          # s[3405] = "/afs/andrew/course/15/122/lib/string.h0: 69.6-69.34: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 0D 9F # aldc 3487          # s[3487] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/string.h0: 69.6-69.34: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= n) && (n <= 127)) [failure message on stack]
15 00    # vload 0            # n
B7 00 0E # invokenative 14    # char_chr(n)
36 02    # vstore 2           # _result = char_chr(n);
15 02    # vload 2            # _result
B0       # return             # 


#<hexdig2char>
02                # number of arguments = 2
03                # number of local variables = 3
00 93             # code length = 147 bytes
10 00    # bipush 0           # 0
15 00    # vload 0            # d
A4 00 06 # if_icmple +6       # if (0 <= d) goto <142:cond_true>
A7 00 17 # goto +23           # goto <143:cond_false>
# <142:cond_true>
15 00    # vload 0            # d
10 10    # bipush 16          # 16
A1 00 06 # if_icmplt +6       # if (d < 16) goto <145:cond_true>
A7 00 08 # goto +8            # goto <146:cond_false>
# <145:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <147:cond_end>
# <146:cond_false>
10 00    # bipush 0           # false
# <147:cond_end>
A7 00 05 # goto +5            # goto <144:cond_end>
# <143:cond_false>
10 00    # bipush 0           # false
# <144:cond_end>
14 0F D2 # aldc 4050          # s[4050] = "/afs/andrew/course/15/122/lib/util.c0: 37.4-37.30: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 10 22 # aldc 4130          # s[4130] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/util.c0: 37.4-37.30: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= d) && (d < 16)) [failure message on stack]
10 00    # bipush 0           # 0
15 00    # vload 0            # d
A4 00 06 # if_icmple +6       # if (0 <= d) goto <151:and>
A7 00 26 # goto +38           # goto <149:else>
# <151:and>
15 00    # vload 0            # d
10 0A    # bipush 10          # 10
A1 00 06 # if_icmplt +6       # if (d < 10) goto <148:then>
A7 00 1C # goto +28           # goto <149:else>
# <148:then>
10 30    # bipush 48          # '0'
14 10 34 # aldc 4148          # s[4148] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)"
B8 00 1B # invokestatic 27    # char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)")
15 00    # vload 0            # d
60       # iadd               # (char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)") + d)
14 10 75 # aldc 4213          # s[4213] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)"
B8 00 1C # invokestatic 28    # char_chr__1((char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)") + d), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)")
36 02    # vstore 2           # _result = char_chr__1((char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)") + d), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)");
15 02    # vload 2            # _result
B0       # return             # 
A7 00 3A # goto +58           # goto <150:endif>
# <149:else>
10 0A    # bipush 10          # 10
15 00    # vload 0            # d
A4 00 06 # if_icmple +6       # if (10 <= d) goto <155:and>
A7 00 29 # goto +41           # goto <153:else>
# <155:and>
15 00    # vload 0            # d
10 10    # bipush 16          # 16
A1 00 06 # if_icmplt +6       # if (d < 16) goto <152:then>
A7 00 1F # goto +31           # goto <153:else>
# <152:then>
10 41    # bipush 65          # 'A'
14 10 B6 # aldc 4278          # s[4278] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)"
B8 00 1B # invokestatic 27    # char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)")
15 00    # vload 0            # d
10 0A    # bipush 10          # 10
64       # isub               # (d - 10)
60       # iadd               # (char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)") + (d - 10))
14 10 F7 # aldc 4343          # s[4343] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)"
B8 00 1C # invokestatic 28    # char_chr__1((char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)") + (d - 10)), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)")
36 02    # vstore 2           # _result = char_chr__1((char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)") + (d - 10)), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)");
15 02    # vload 2            # _result
B0       # return             # 
A7 00 0A # goto +10           # goto <154:endif>
# <153:else>
10 3F    # bipush 63          # '\?'
36 02    # vstore 2           # _result = '?';
15 02    # vload 2            # _result
B0       # return             # 
# <154:endif>
# <150:endif>


#<print__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # s
B7 00 0F # invokenative 15    # print(s)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<println__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # s
B7 00 10 # invokenative 16    # println(s)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printint__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # i
B7 00 11 # invokenative 17    # printint(i)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printbool__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # b
B7 00 12 # invokenative 18    # printbool(b)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printchar__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # c
B7 00 13 # invokenative 19    # printchar(c)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<flush__1>
01                # number of arguments = 1
01                # number of local variables = 1
00 0A             # code length = 10 bytes
B7 00 14 # invokenative 20    # flush()
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<eof__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 08             # code length = 8 bytes
B7 00 15 # invokenative 21    # eof()
36 01    # vstore 1           # _result = eof();
15 01    # vload 1            # _result
B0       # return             # 


#<readline__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 20             # code length = 32 bytes
14 13 0C # aldc 4876          # s[4876] = "readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)"
B8 00 24 # invokestatic 36    # eof__1("readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)")
10 01    # bipush 1           # 
82       # ixor               # !(eof__1("readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)"))
14 13 4E # aldc 4942          # s[4942] = "/afs/andrew/course/15/122/lib/conio.h0: 14.6-14.22: @requires annotation failed\n"
15 00    # vload 0            # _caller
14 13 9F # aldc 5023          # s[5023] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/conio.h0: 14.6-14.22: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(eof__1("readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)")) [failure message on stack]
B7 00 16 # invokenative 22    # readline()
36 01    # vstore 1           # _result = readline();
15 01    # vload 1            # _result
B0       # return             # 


#<get_red>
02                # number of arguments = 2
03                # number of local variables = 3
00 33             # code length = 51 bytes
13 00 04 # ildc 4             # c[4] = 255
15 00    # vload 0            # p
10 10    # bipush 16          # 16
7A       # ishr               # (p >> 16)
7E       # iand               # (255 & (p >> 16))
36 02    # vstore 2           # _result = (255 & (p >> 16));
10 00    # bipush 0           # 0
15 02    # vload 2            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <171:cond_true>
A7 00 18 # goto +24           # goto <172:cond_false>
# <171:cond_true>
15 02    # vload 2            # _result
13 00 05 # ildc 5             # c[5] = 256
A1 00 06 # if_icmplt +6       # if (_result < 256) goto <174:cond_true>
A7 00 08 # goto +8            # goto <175:cond_false>
# <174:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <176:cond_end>
# <175:cond_false>
10 00    # bipush 0           # false
# <176:cond_end>
A7 00 05 # goto +5            # goto <173:cond_end>
# <172:cond_false>
10 00    # bipush 0           # false
# <173:cond_end>
14 13 B1 # aldc 5041          # s[5041] = ".tmp0/pixel-int.c0: 13.4-13.42: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result < 256)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<get_green>
02                # number of arguments = 2
03                # number of local variables = 3
00 33             # code length = 51 bytes
13 00 06 # ildc 6             # c[6] = 255
15 00    # vload 0            # p
10 08    # bipush 8           # 8
7A       # ishr               # (p >> 8)
7E       # iand               # (255 & (p >> 8))
36 02    # vstore 2           # _result = (255 & (p >> 8));
10 00    # bipush 0           # 0
15 02    # vload 2            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <177:cond_true>
A7 00 18 # goto +24           # goto <178:cond_false>
# <177:cond_true>
15 02    # vload 2            # _result
13 00 07 # ildc 7             # c[7] = 256
A1 00 06 # if_icmplt +6       # if (_result < 256) goto <180:cond_true>
A7 00 08 # goto +8            # goto <181:cond_false>
# <180:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <182:cond_end>
# <181:cond_false>
10 00    # bipush 0           # false
# <182:cond_end>
A7 00 05 # goto +5            # goto <179:cond_end>
# <178:cond_false>
10 00    # bipush 0           # false
# <179:cond_end>
14 13 EC # aldc 5100          # s[5100] = ".tmp0/pixel-int.c0: 21.4-21.42: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result < 256)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<get_blue>
02                # number of arguments = 2
03                # number of local variables = 3
00 30             # code length = 48 bytes
13 00 08 # ildc 8             # c[8] = 255
15 00    # vload 0            # p
7E       # iand               # (255 & p)
36 02    # vstore 2           # _result = (255 & p);
10 00    # bipush 0           # 0
15 02    # vload 2            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <183:cond_true>
A7 00 18 # goto +24           # goto <184:cond_false>
# <183:cond_true>
15 02    # vload 2            # _result
13 00 09 # ildc 9             # c[9] = 256
A1 00 06 # if_icmplt +6       # if (_result < 256) goto <186:cond_true>
A7 00 08 # goto +8            # goto <187:cond_false>
# <186:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <188:cond_end>
# <187:cond_false>
10 00    # bipush 0           # false
# <188:cond_end>
A7 00 05 # goto +5            # goto <185:cond_end>
# <184:cond_false>
10 00    # bipush 0           # false
# <185:cond_end>
14 14 27 # aldc 5159          # s[5159] = ".tmp0/pixel-int.c0: 29.4-29.42: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result < 256)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<get_alpha>
02                # number of arguments = 2
03                # number of local variables = 3
00 33             # code length = 51 bytes
13 00 0A # ildc 10            # c[10] = 255
15 00    # vload 0            # p
10 18    # bipush 24          # 24
7A       # ishr               # (p >> 24)
7E       # iand               # (255 & (p >> 24))
36 02    # vstore 2           # _result = (255 & (p >> 24));
10 00    # bipush 0           # 0
15 02    # vload 2            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <189:cond_true>
A7 00 18 # goto +24           # goto <190:cond_false>
# <189:cond_true>
15 02    # vload 2            # _result
13 00 0B # ildc 11            # c[11] = 256
A1 00 06 # if_icmplt +6       # if (_result < 256) goto <192:cond_true>
A7 00 08 # goto +8            # goto <193:cond_false>
# <192:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <194:cond_end>
# <193:cond_false>
10 00    # bipush 0           # false
# <194:cond_end>
A7 00 05 # goto +5            # goto <191:cond_end>
# <190:cond_false>
10 00    # bipush 0           # false
# <191:cond_end>
14 14 62 # aldc 5218          # s[5218] = ".tmp0/pixel-int.c0: 37.4-37.42: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result < 256)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<make_pixel>
05                # number of arguments = 5
06                # number of local variables = 6
00 D9             # code length = 217 bytes
10 00    # bipush 0           # 0
15 00    # vload 0            # alpha
A4 00 06 # if_icmple +6       # if (0 <= alpha) goto <195:cond_true>
A7 00 18 # goto +24           # goto <196:cond_false>
# <195:cond_true>
15 00    # vload 0            # alpha
13 00 0C # ildc 12            # c[12] = 256
A1 00 06 # if_icmplt +6       # if (alpha < 256) goto <198:cond_true>
A7 00 08 # goto +8            # goto <199:cond_false>
# <198:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <200:cond_end>
# <199:cond_false>
10 00    # bipush 0           # false
# <200:cond_end>
A7 00 05 # goto +5            # goto <197:cond_end>
# <196:cond_false>
10 00    # bipush 0           # false
# <197:cond_end>
14 14 9D # aldc 5277          # s[5277] = ".tmp0/pixel-int.c0: 47.4-47.39: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 14 DA # aldc 5338          # s[5338] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join(".tmp0/pixel-int.c0: 47.4-47.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= alpha) && (alpha < 256)) [failure message on stack]
10 00    # bipush 0           # 0
15 01    # vload 1            # red
A4 00 06 # if_icmple +6       # if (0 <= red) goto <201:cond_true>
A7 00 18 # goto +24           # goto <202:cond_false>
# <201:cond_true>
15 01    # vload 1            # red
13 00 0D # ildc 13            # c[13] = 256
A1 00 06 # if_icmplt +6       # if (red < 256) goto <204:cond_true>
A7 00 08 # goto +8            # goto <205:cond_false>
# <204:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <206:cond_end>
# <205:cond_false>
10 00    # bipush 0           # false
# <206:cond_end>
A7 00 05 # goto +5            # goto <203:cond_end>
# <202:cond_false>
10 00    # bipush 0           # false
# <203:cond_end>
14 14 EC # aldc 5356          # s[5356] = ".tmp0/pixel-int.c0: 48.4-48.37: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 15 29 # aldc 5417          # s[5417] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join(".tmp0/pixel-int.c0: 48.4-48.37: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= red) && (red < 256)) [failure message on stack]
10 00    # bipush 0           # 0
15 02    # vload 2            # green
A4 00 06 # if_icmple +6       # if (0 <= green) goto <207:cond_true>
A7 00 18 # goto +24           # goto <208:cond_false>
# <207:cond_true>
15 02    # vload 2            # green
13 00 0E # ildc 14            # c[14] = 256
A1 00 06 # if_icmplt +6       # if (green < 256) goto <210:cond_true>
A7 00 08 # goto +8            # goto <211:cond_false>
# <210:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <212:cond_end>
# <211:cond_false>
10 00    # bipush 0           # false
# <212:cond_end>
A7 00 05 # goto +5            # goto <209:cond_end>
# <208:cond_false>
10 00    # bipush 0           # false
# <209:cond_end>
14 15 3B # aldc 5435          # s[5435] = ".tmp0/pixel-int.c0: 49.4-49.39: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 15 78 # aldc 5496          # s[5496] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join(".tmp0/pixel-int.c0: 49.4-49.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= green) && (green < 256)) [failure message on stack]
10 00    # bipush 0           # 0
15 03    # vload 3            # blue
A4 00 06 # if_icmple +6       # if (0 <= blue) goto <213:cond_true>
A7 00 18 # goto +24           # goto <214:cond_false>
# <213:cond_true>
15 03    # vload 3            # blue
13 00 0F # ildc 15            # c[15] = 256
A1 00 06 # if_icmplt +6       # if (blue < 256) goto <216:cond_true>
A7 00 08 # goto +8            # goto <217:cond_false>
# <216:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <218:cond_end>
# <217:cond_false>
10 00    # bipush 0           # false
# <218:cond_end>
A7 00 05 # goto +5            # goto <215:cond_end>
# <214:cond_false>
10 00    # bipush 0           # false
# <215:cond_end>
14 15 8A # aldc 5514          # s[5514] = ".tmp0/pixel-int.c0: 50.4-50.38: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 15 C7 # aldc 5575          # s[5575] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join(".tmp0/pixel-int.c0: 50.4-50.38: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= blue) && (blue < 256)) [failure message on stack]
15 00    # vload 0            # alpha
10 18    # bipush 24          # 24
78       # ishl               # (alpha << 24)
15 01    # vload 1            # red
10 10    # bipush 16          # 16
78       # ishl               # (red << 16)
80       # ior                # ((alpha << 24) | (red << 16))
15 02    # vload 2            # green
10 08    # bipush 8           # 8
78       # ishl               # (green << 8)
80       # ior                # (((alpha << 24) | (red << 16)) | (green << 8))
15 03    # vload 3            # blue
80       # ior                # ((((alpha << 24) | (red << 16)) | (green << 8)) | blue)
36 05    # vstore 5           # _result = ((((alpha << 24) | (red << 16)) | (green << 8)) | blue);
15 05    # vload 5            # _result
B0       # return             # 


#<pixel_print>
02                # number of arguments = 2
02                # number of local variables = 2
00 26             # code length = 38 bytes
14 15 D9 # aldc 5593          # s[5593] = ""
14 15 DA # aldc 5594          # s[5594] = "pixel_print (.tmp0/pixel-int.c0: 60.3-60.27)"
B8 00 1E # invokestatic 30    # print__1("", "pixel_print (.tmp0/pixel-int.c0: 60.3-60.27)")
57       # pop                # (ignore result)
15 00    # vload 0            # p
14 16 07 # aldc 5639          # s[5639] = "pixel_print (.tmp0/pixel-int.c0: 60.16-60.26)"
B8 00 0D # invokestatic 13    # int2hex(p, "pixel_print (.tmp0/pixel-int.c0: 60.16-60.26)")
14 16 35 # aldc 5685          # s[5685] = "pixel_print (.tmp0/pixel-int.c0: 60.3-60.27)"
B8 00 1E # invokestatic 30    # print__1(int2hex(p, "pixel_print (.tmp0/pixel-int.c0: 60.16-60.26)"), "pixel_print (.tmp0/pixel-int.c0: 60.3-60.27)")
57       # pop                # (ignore result)
14 16 62 # aldc 5730          # s[5730] = ""
14 16 63 # aldc 5731          # s[5731] = "pixel_print (.tmp0/pixel-int.c0: 60.3-60.27)"
B8 00 1E # invokestatic 30    # print__1("", "pixel_print (.tmp0/pixel-int.c0: 60.3-60.27)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<get_red__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 32             # code length = 50 bytes
15 00    # vload 0            # p
14 16 90 # aldc 5776          # s[5776] = "get_red__1 (.tmp0/pixel-int.c0: 69.1-70.48)"
B8 00 26 # invokestatic 38    # get_red(p, "get_red__1 (.tmp0/pixel-int.c0: 69.1-70.48)")
36 02    # vstore 2           # _result = get_red(p, "get_red__1 (.tmp0/pixel-int.c0: 69.1-70.48)");
10 00    # bipush 0           # 0
15 02    # vload 2            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <219:cond_true>
A7 00 18 # goto +24           # goto <220:cond_false>
# <219:cond_true>
15 02    # vload 2            # _result
13 00 10 # ildc 16            # c[16] = 256
A1 00 06 # if_icmplt +6       # if (_result < 256) goto <222:cond_true>
A7 00 08 # goto +8            # goto <223:cond_false>
# <222:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <224:cond_end>
# <223:cond_false>
10 00    # bipush 0           # false
# <224:cond_end>
A7 00 05 # goto +5            # goto <221:cond_end>
# <220:cond_false>
10 00    # bipush 0           # false
# <221:cond_end>
14 16 BC # aldc 5820          # s[5820] = ".tmp0/pixel-int.c0: 70.4-70.42: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result < 256)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<get_green__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 32             # code length = 50 bytes
15 00    # vload 0            # p
14 16 F7 # aldc 5879          # s[5879] = "get_green__1 (.tmp0/pixel-int.c0: 72.1-73.48)"
B8 00 27 # invokestatic 39    # get_green(p, "get_green__1 (.tmp0/pixel-int.c0: 72.1-73.48)")
36 02    # vstore 2           # _result = get_green(p, "get_green__1 (.tmp0/pixel-int.c0: 72.1-73.48)");
10 00    # bipush 0           # 0
15 02    # vload 2            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <225:cond_true>
A7 00 18 # goto +24           # goto <226:cond_false>
# <225:cond_true>
15 02    # vload 2            # _result
13 00 11 # ildc 17            # c[17] = 256
A1 00 06 # if_icmplt +6       # if (_result < 256) goto <228:cond_true>
A7 00 08 # goto +8            # goto <229:cond_false>
# <228:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <230:cond_end>
# <229:cond_false>
10 00    # bipush 0           # false
# <230:cond_end>
A7 00 05 # goto +5            # goto <227:cond_end>
# <226:cond_false>
10 00    # bipush 0           # false
# <227:cond_end>
14 17 25 # aldc 5925          # s[5925] = ".tmp0/pixel-int.c0: 73.4-73.42: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result < 256)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<get_blue__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 32             # code length = 50 bytes
15 00    # vload 0            # p
14 17 60 # aldc 5984          # s[5984] = "get_blue__1 (.tmp0/pixel-int.c0: 75.1-76.48)"
B8 00 28 # invokestatic 40    # get_blue(p, "get_blue__1 (.tmp0/pixel-int.c0: 75.1-76.48)")
36 02    # vstore 2           # _result = get_blue(p, "get_blue__1 (.tmp0/pixel-int.c0: 75.1-76.48)");
10 00    # bipush 0           # 0
15 02    # vload 2            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <231:cond_true>
A7 00 18 # goto +24           # goto <232:cond_false>
# <231:cond_true>
15 02    # vload 2            # _result
13 00 12 # ildc 18            # c[18] = 256
A1 00 06 # if_icmplt +6       # if (_result < 256) goto <234:cond_true>
A7 00 08 # goto +8            # goto <235:cond_false>
# <234:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <236:cond_end>
# <235:cond_false>
10 00    # bipush 0           # false
# <236:cond_end>
A7 00 05 # goto +5            # goto <233:cond_end>
# <232:cond_false>
10 00    # bipush 0           # false
# <233:cond_end>
14 17 8D # aldc 6029          # s[6029] = ".tmp0/pixel-int.c0: 76.4-76.42: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result < 256)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<get_alpha__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 32             # code length = 50 bytes
15 00    # vload 0            # p
14 17 C8 # aldc 6088          # s[6088] = "get_alpha__1 (.tmp0/pixel-int.c0: 78.1-79.48)"
B8 00 29 # invokestatic 41    # get_alpha(p, "get_alpha__1 (.tmp0/pixel-int.c0: 78.1-79.48)")
36 02    # vstore 2           # _result = get_alpha(p, "get_alpha__1 (.tmp0/pixel-int.c0: 78.1-79.48)");
10 00    # bipush 0           # 0
15 02    # vload 2            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <237:cond_true>
A7 00 18 # goto +24           # goto <238:cond_false>
# <237:cond_true>
15 02    # vload 2            # _result
13 00 13 # ildc 19            # c[19] = 256
A1 00 06 # if_icmplt +6       # if (_result < 256) goto <240:cond_true>
A7 00 08 # goto +8            # goto <241:cond_false>
# <240:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <242:cond_end>
# <241:cond_false>
10 00    # bipush 0           # false
# <242:cond_end>
A7 00 05 # goto +5            # goto <239:cond_end>
# <238:cond_false>
10 00    # bipush 0           # false
# <239:cond_end>
14 17 F6 # aldc 6134          # s[6134] = ".tmp0/pixel-int.c0: 79.4-79.42: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result < 256)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<make_pixel__1>
05                # number of arguments = 5
06                # number of local variables = 6
00 D3             # code length = 211 bytes
10 00    # bipush 0           # 0
15 00    # vload 0            # alpha
A4 00 06 # if_icmple +6       # if (0 <= alpha) goto <243:cond_true>
A7 00 18 # goto +24           # goto <244:cond_false>
# <243:cond_true>
15 00    # vload 0            # alpha
13 00 14 # ildc 20            # c[20] = 256
A1 00 06 # if_icmplt +6       # if (alpha < 256) goto <246:cond_true>
A7 00 08 # goto +8            # goto <247:cond_false>
# <246:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <248:cond_end>
# <247:cond_false>
10 00    # bipush 0           # false
# <248:cond_end>
A7 00 05 # goto +5            # goto <245:cond_end>
# <244:cond_false>
10 00    # bipush 0           # false
# <245:cond_end>
14 18 31 # aldc 6193          # s[6193] = ".tmp0/pixel-int.c0: 82.4-82.39: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 18 6E # aldc 6254          # s[6254] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join(".tmp0/pixel-int.c0: 82.4-82.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= alpha) && (alpha < 256)) [failure message on stack]
10 00    # bipush 0           # 0
15 01    # vload 1            # red
A4 00 06 # if_icmple +6       # if (0 <= red) goto <249:cond_true>
A7 00 18 # goto +24           # goto <250:cond_false>
# <249:cond_true>
15 01    # vload 1            # red
13 00 15 # ildc 21            # c[21] = 256
A1 00 06 # if_icmplt +6       # if (red < 256) goto <252:cond_true>
A7 00 08 # goto +8            # goto <253:cond_false>
# <252:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <254:cond_end>
# <253:cond_false>
10 00    # bipush 0           # false
# <254:cond_end>
A7 00 05 # goto +5            # goto <251:cond_end>
# <250:cond_false>
10 00    # bipush 0           # false
# <251:cond_end>
14 18 80 # aldc 6272          # s[6272] = ".tmp0/pixel-int.c0: 83.4-83.39: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 18 BD # aldc 6333          # s[6333] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join(".tmp0/pixel-int.c0: 83.4-83.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= red) && (red < 256)) [failure message on stack]
10 00    # bipush 0           # 0
15 02    # vload 2            # green
A4 00 06 # if_icmple +6       # if (0 <= green) goto <255:cond_true>
A7 00 18 # goto +24           # goto <256:cond_false>
# <255:cond_true>
15 02    # vload 2            # green
13 00 16 # ildc 22            # c[22] = 256
A1 00 06 # if_icmplt +6       # if (green < 256) goto <258:cond_true>
A7 00 08 # goto +8            # goto <259:cond_false>
# <258:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <260:cond_end>
# <259:cond_false>
10 00    # bipush 0           # false
# <260:cond_end>
A7 00 05 # goto +5            # goto <257:cond_end>
# <256:cond_false>
10 00    # bipush 0           # false
# <257:cond_end>
14 18 CF # aldc 6351          # s[6351] = ".tmp0/pixel-int.c0: 84.4-84.39: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 19 0C # aldc 6412          # s[6412] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join(".tmp0/pixel-int.c0: 84.4-84.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= green) && (green < 256)) [failure message on stack]
10 00    # bipush 0           # 0
15 03    # vload 3            # blue
A4 00 06 # if_icmple +6       # if (0 <= blue) goto <261:cond_true>
A7 00 18 # goto +24           # goto <262:cond_false>
# <261:cond_true>
15 03    # vload 3            # blue
13 00 17 # ildc 23            # c[23] = 256
A1 00 06 # if_icmplt +6       # if (blue < 256) goto <264:cond_true>
A7 00 08 # goto +8            # goto <265:cond_false>
# <264:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <266:cond_end>
# <265:cond_false>
10 00    # bipush 0           # false
# <266:cond_end>
A7 00 05 # goto +5            # goto <263:cond_end>
# <262:cond_false>
10 00    # bipush 0           # false
# <263:cond_end>
14 19 1E # aldc 6430          # s[6430] = ".tmp0/pixel-int.c0: 85.4-85.39: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 19 5B # aldc 6491          # s[6491] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join(".tmp0/pixel-int.c0: 85.4-85.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= blue) && (blue < 256)) [failure message on stack]
15 00    # vload 0            # alpha
15 01    # vload 1            # red
15 02    # vload 2            # green
15 03    # vload 3            # blue
14 19 6D # aldc 6509          # s[6509] = "make_pixel__1 (.tmp0/pixel-int.c0: 81.1-85.45)"
B8 00 2A # invokestatic 42    # make_pixel(alpha, red, green, blue, "make_pixel__1 (.tmp0/pixel-int.c0: 81.1-85.45)")
36 05    # vstore 5           # _result = make_pixel(alpha, red, green, blue, "make_pixel__1 (.tmp0/pixel-int.c0: 81.1-85.45)");
15 05    # vload 5            # _result
B0       # return             # 


#<is_valid_imagesize>
03                # number of arguments = 3
04                # number of local variables = 4
00 36             # code length = 54 bytes
15 00    # vload 0            # width
10 00    # bipush 0           # 0
A3 00 06 # if_icmpgt +6       # if (width > 0) goto <270:and>
A7 00 28 # goto +40           # goto <268:cond_false>
# <270:and>
15 01    # vload 1            # height
10 00    # bipush 0           # 0
A3 00 06 # if_icmpgt +6       # if (height > 0) goto <267:cond_true>
A7 00 1E # goto +30           # goto <268:cond_false>
# <267:cond_true>
15 00    # vload 0            # width
14 19 9C # aldc 6556          # s[6556] = "is_valid_imagesize (imageutil.c0: 16.17-16.26)"
B8 00 04 # invokestatic 4     # int_max__1("is_valid_imagesize (imageutil.c0: 16.17-16.26)")
15 01    # vload 1            # height
6C       # idiv               # (int_max__1("is_valid_imagesize (imageutil.c0: 16.17-16.26)") / height)
A4 00 06 # if_icmple +6       # if (width <= (int_max__1("is_valid_imagesize (imageutil.c0: 16.17-16.26)") / height)) goto <271:cond_true>
A7 00 08 # goto +8            # goto <272:cond_false>
# <271:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <273:cond_end>
# <272:cond_false>
10 00    # bipush 0           # false
# <273:cond_end>
A7 00 05 # goto +5            # goto <269:cond_end>
# <268:cond_false>
10 00    # bipush 0           # false
# <269:cond_end>
36 03    # vstore 3           # _result = (((width > 0) && (height > 0)) && (width <= (int_max__1("is_valid_imagesize (imageutil.c0: 16.17-16.26)") / height)));
15 03    # vload 3            # _result
B0       # return             # 


#<get_row>
04                # number of arguments = 4
05                # number of local variables = 5
00 79             # code length = 121 bytes
15 01    # vload 1            # width
15 02    # vload 2            # height
14 19 CB # aldc 6603          # s[6603] = "get_row (imageutil.c0: 27.13-27.46)"
B8 00 31 # invokestatic 49    # is_valid_imagesize(width, height, "get_row (imageutil.c0: 27.13-27.46)")
14 19 EF # aldc 6639          # s[6639] = "imageutil.c0: 27.4-27.47: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 1A 26 # aldc 6694          # s[6694] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("imageutil.c0: 27.4-27.47: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_valid_imagesize(width, height, "get_row (imageutil.c0: 27.13-27.46)") [failure message on stack]
10 00    # bipush 0           # 0
15 00    # vload 0            # index
A4 00 06 # if_icmple +6       # if (0 <= index) goto <274:cond_true>
A7 00 1A # goto +26           # goto <275:cond_false>
# <274:cond_true>
15 00    # vload 0            # index
15 01    # vload 1            # width
15 02    # vload 2            # height
68       # imul               # (width * height)
A1 00 06 # if_icmplt +6       # if (index < (width * height)) goto <277:cond_true>
A7 00 08 # goto +8            # goto <278:cond_false>
# <277:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <279:cond_end>
# <278:cond_false>
10 00    # bipush 0           # false
# <279:cond_end>
A7 00 05 # goto +5            # goto <276:cond_end>
# <275:cond_false>
10 00    # bipush 0           # false
# <276:cond_end>
14 1A 38 # aldc 6712          # s[6712] = "imageutil.c0: 28.4-28.50: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 1A 6F # aldc 6767          # s[6767] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("imageutil.c0: 28.4-28.50: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= index) && (index < (width * height))) [failure message on stack]
15 00    # vload 0            # index
15 01    # vload 1            # width
6C       # idiv               # (index / width)
36 04    # vstore 4           # _result = (index / width);
10 00    # bipush 0           # 0
15 04    # vload 4            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <280:cond_true>
A7 00 17 # goto +23           # goto <281:cond_false>
# <280:cond_true>
15 04    # vload 4            # _result
15 02    # vload 2            # height
A1 00 06 # if_icmplt +6       # if (_result < height) goto <283:cond_true>
A7 00 08 # goto +8            # goto <284:cond_false>
# <283:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <285:cond_end>
# <284:cond_false>
10 00    # bipush 0           # false
# <285:cond_end>
A7 00 05 # goto +5            # goto <282:cond_end>
# <281:cond_false>
10 00    # bipush 0           # false
# <282:cond_end>
14 1A 81 # aldc 6785          # s[6785] = "imageutil.c0: 29.4-29.45: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result < height)) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 


#<get_column>
04                # number of arguments = 4
06                # number of local variables = 6
00 8A             # code length = 138 bytes
15 01    # vload 1            # width
15 02    # vload 2            # height
14 1A B6 # aldc 6838          # s[6838] = "get_column (imageutil.c0: 42.13-42.46)"
B8 00 31 # invokestatic 49    # is_valid_imagesize(width, height, "get_column (imageutil.c0: 42.13-42.46)")
14 1A DD # aldc 6877          # s[6877] = "imageutil.c0: 42.4-42.47: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 1B 14 # aldc 6932          # s[6932] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("imageutil.c0: 42.4-42.47: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_valid_imagesize(width, height, "get_column (imageutil.c0: 42.13-42.46)") [failure message on stack]
10 00    # bipush 0           # 0
15 00    # vload 0            # index
A4 00 06 # if_icmple +6       # if (0 <= index) goto <286:cond_true>
A7 00 1A # goto +26           # goto <287:cond_false>
# <286:cond_true>
15 00    # vload 0            # index
15 01    # vload 1            # width
15 02    # vload 2            # height
68       # imul               # (width * height)
A1 00 06 # if_icmplt +6       # if (index < (width * height)) goto <289:cond_true>
A7 00 08 # goto +8            # goto <290:cond_false>
# <289:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <291:cond_end>
# <290:cond_false>
10 00    # bipush 0           # false
# <291:cond_end>
A7 00 05 # goto +5            # goto <288:cond_end>
# <287:cond_false>
10 00    # bipush 0           # false
# <288:cond_end>
14 1B 26 # aldc 6950          # s[6950] = "imageutil.c0: 43.4-43.50: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 1B 5D # aldc 7005          # s[7005] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("imageutil.c0: 43.4-43.50: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= index) && (index < (width * height))) [failure message on stack]
15 00    # vload 0            # index
15 01    # vload 1            # width
15 02    # vload 2            # height
14 1B 6F # aldc 7023          # s[7023] = "get_column (imageutil.c0: 46.13-46.42)"
B8 00 32 # invokestatic 50    # get_row(index, width, height, "get_column (imageutil.c0: 46.13-46.42)")
36 05    # vstore 5           # row = get_row(index, width, height, "get_column (imageutil.c0: 46.13-46.42)");
15 00    # vload 0            # index
15 05    # vload 5            # row
15 01    # vload 1            # width
68       # imul               # (row * width)
64       # isub               # (index - (row * width))
36 04    # vstore 4           # _result = (index - (row * width));
10 00    # bipush 0           # 0
15 04    # vload 4            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <292:cond_true>
A7 00 17 # goto +23           # goto <293:cond_false>
# <292:cond_true>
15 04    # vload 4            # _result
15 01    # vload 1            # width
A1 00 06 # if_icmplt +6       # if (_result < width) goto <295:cond_true>
A7 00 08 # goto +8            # goto <296:cond_false>
# <295:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <297:cond_end>
# <296:cond_false>
10 00    # bipush 0           # false
# <297:cond_end>
A7 00 05 # goto +5            # goto <294:cond_end>
# <293:cond_false>
10 00    # bipush 0           # false
# <294:cond_end>
14 1B 96 # aldc 7062          # s[7062] = "imageutil.c0: 44.4-44.44: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result < width)) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 


#<is_valid_pixel>
05                # number of arguments = 5
06                # number of local variables = 6
00 89             # code length = 137 bytes
15 02    # vload 2            # width
15 03    # vload 3            # height
14 1B CB # aldc 7115          # s[7115] = "is_valid_pixel (imageutil.c0: 55.13-55.46)"
B8 00 31 # invokestatic 49    # is_valid_imagesize(width, height, "is_valid_pixel (imageutil.c0: 55.13-55.46)")
14 1B F6 # aldc 7158          # s[7158] = "imageutil.c0: 55.4-55.47: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 1C 2D # aldc 7213          # s[7213] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("imageutil.c0: 55.4-55.47: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_valid_imagesize(width, height, "is_valid_pixel (imageutil.c0: 55.13-55.46)") [failure message on stack]
10 00    # bipush 0           # 0
15 00    # vload 0            # row
A4 00 06 # if_icmple +6       # if (0 <= row) goto <305:and>
A7 00 62 # goto +98           # goto <299:cond_false>
# <305:and>
15 00    # vload 0            # row
15 03    # vload 3            # height
A1 00 06 # if_icmplt +6       # if (row < height) goto <304:and>
A7 00 58 # goto +88           # goto <299:cond_false>
# <304:and>
10 00    # bipush 0           # 0
15 01    # vload 1            # col
A4 00 06 # if_icmple +6       # if (0 <= col) goto <303:and>
A7 00 4E # goto +78           # goto <299:cond_false>
# <303:and>
15 01    # vload 1            # col
15 02    # vload 2            # width
A1 00 06 # if_icmplt +6       # if (col < width) goto <302:and>
A7 00 44 # goto +68           # goto <299:cond_false>
# <302:and>
15 00    # vload 0            # row
14 1C 3F # aldc 7231          # s[7231] = "is_valid_pixel (imageutil.c0: 59.16-59.25)"
B8 00 04 # invokestatic 4     # int_max__1("is_valid_pixel (imageutil.c0: 59.16-59.25)")
15 01    # vload 1            # col
64       # isub               # (int_max__1("is_valid_pixel (imageutil.c0: 59.16-59.25)") - col)
15 02    # vload 2            # width
6C       # idiv               # ((int_max__1("is_valid_pixel (imageutil.c0: 59.16-59.25)") - col) / width)
A4 00 06 # if_icmple +6       # if (row <= ((int_max__1("is_valid_pixel (imageutil.c0: 59.16-59.25)") - col) / width)) goto <301:and>
A7 00 30 # goto +48           # goto <299:cond_false>
# <301:and>
10 00    # bipush 0           # 0
15 00    # vload 0            # row
15 02    # vload 2            # width
68       # imul               # (row * width)
15 01    # vload 1            # col
60       # iadd               # ((row * width) + col)
A4 00 06 # if_icmple +6       # if (0 <= ((row * width) + col)) goto <298:cond_true>
A7 00 20 # goto +32           # goto <299:cond_false>
# <298:cond_true>
15 00    # vload 0            # row
15 02    # vload 2            # width
68       # imul               # (row * width)
15 01    # vload 1            # col
60       # iadd               # ((row * width) + col)
15 02    # vload 2            # width
15 03    # vload 3            # height
68       # imul               # (width * height)
A1 00 06 # if_icmplt +6       # if (((row * width) + col) < (width * height)) goto <306:cond_true>
A7 00 08 # goto +8            # goto <307:cond_false>
# <306:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <308:cond_end>
# <307:cond_false>
10 00    # bipush 0           # false
# <308:cond_end>
A7 00 05 # goto +5            # goto <300:cond_end>
# <299:cond_false>
10 00    # bipush 0           # false
# <300:cond_end>
36 05    # vstore 5           # _result = (((((((0 <= row) && (row < height)) && (0 <= col)) && (col < width)) && (row <= ((int_max__1("is_valid_pixel (imageutil.c0: 59.16-59.25)") - col) / width))) && (0 <= ((row * width) + col))) && (((row * width) + col) < (width * height)));
15 05    # vload 5            # _result
B0       # return             # 


#<get_index>
05                # number of arguments = 5
06                # number of local variables = 6
00 6A             # code length = 106 bytes
15 02    # vload 2            # width
15 03    # vload 3            # height
14 1C 6A # aldc 7274          # s[7274] = "get_index (imageutil.c0: 72.13-72.46)"
B8 00 31 # invokestatic 49    # is_valid_imagesize(width, height, "get_index (imageutil.c0: 72.13-72.46)")
14 1C 90 # aldc 7312          # s[7312] = "imageutil.c0: 72.4-72.47: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 1C C7 # aldc 7367          # s[7367] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("imageutil.c0: 72.4-72.47: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_valid_imagesize(width, height, "get_index (imageutil.c0: 72.13-72.46)") [failure message on stack]
15 00    # vload 0            # row
15 01    # vload 1            # col
15 02    # vload 2            # width
15 03    # vload 3            # height
14 1C D9 # aldc 7385          # s[7385] = "get_index (imageutil.c0: 73.13-73.52)"
B8 00 34 # invokestatic 52    # is_valid_pixel(row, col, width, height, "get_index (imageutil.c0: 73.13-73.52)")
14 1C FF # aldc 7423          # s[7423] = "imageutil.c0: 73.4-73.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 1D 36 # aldc 7478          # s[7478] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("imageutil.c0: 73.4-73.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_valid_pixel(row, col, width, height, "get_index (imageutil.c0: 73.13-73.52)") [failure message on stack]
15 00    # vload 0            # row
15 02    # vload 2            # width
68       # imul               # (row * width)
15 01    # vload 1            # col
60       # iadd               # ((row * width) + col)
36 05    # vstore 5           # _result = ((row * width) + col);
10 00    # bipush 0           # 0
15 05    # vload 5            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <309:cond_true>
A7 00 1A # goto +26           # goto <310:cond_false>
# <309:cond_true>
15 05    # vload 5            # _result
15 02    # vload 2            # width
15 03    # vload 3            # height
68       # imul               # (width * height)
A1 00 06 # if_icmplt +6       # if (_result < (width * height)) goto <312:cond_true>
A7 00 08 # goto +8            # goto <313:cond_false>
# <312:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <314:cond_end>
# <313:cond_false>
10 00    # bipush 0           # false
# <314:cond_end>
A7 00 05 # goto +5            # goto <311:cond_end>
# <310:cond_false>
10 00    # bipush 0           # false
# <311:cond_end>
14 1D 48 # aldc 7496          # s[7496] = "imageutil.c0: 74.4-74.53: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result < (width * height))) [failure message on stack]
15 05    # vload 5            # _result
B0       # return             # 


#<image_print>
04                # number of arguments = 4
06                # number of local variables = 6
00 DB             # code length = 219 bytes
15 01    # vload 1            # width
10 0A    # bipush 10          # 10
A3 00 10 # if_icmpgt +16      # if (width > 10) goto <315:then>
A7 00 03 # goto +3            # goto <318:or>
# <318:or>
15 02    # vload 2            # height
10 0A    # bipush 10          # 10
A3 00 06 # if_icmpgt +6       # if (height > 10) goto <315:then>
A7 00 58 # goto +88           # goto <316:else>
# <315:then>
14 1D 7D # aldc 7549          # s[7549] = "print_image is not a useful debugging tool for large images\n"
14 1D BA # aldc 7610          # s[7610] = "image_print (imageutil.c0: 88.5-88.76)"
B8 00 1E # invokestatic 30    # print__1("print_image is not a useful debugging tool for large images\n", "image_print (imageutil.c0: 88.5-88.76)")
57       # pop                # (ignore result)
14 1D E1 # aldc 7649          # s[7649] = "type \'y\' to proceed nonetheless, "
14 1E 03 # aldc 7683          # s[7683] = "image_print (imageutil.c0: 89.5-89.48)"
B8 00 1E # invokestatic 30    # print__1("type \'y\' to proceed nonetheless, ", "image_print (imageutil.c0: 89.5-89.48)")
57       # pop                # (ignore result)
14 1E 2A # aldc 7722          # s[7722] = "and anything else to skip printing: "
14 1E 4F # aldc 7759          # s[7759] = "image_print (imageutil.c0: 90.5-90.51)"
B8 00 1E # invokestatic 30    # print__1("and anything else to skip printing: ", "image_print (imageutil.c0: 90.5-90.51)")
57       # pop                # (ignore result)
14 1E 76 # aldc 7798          # s[7798] = "image_print (imageutil.c0: 91.16-91.26)"
B8 00 25 # invokestatic 37    # readline__1("image_print (imageutil.c0: 91.16-91.26)")
36 04    # vstore 4           # s = readline__1("image_print (imageutil.c0: 91.16-91.26)");
15 04    # vload 4            # s
14 1E 9E # aldc 7838          # s[7838] = "y"
14 1E A0 # aldc 7840          # s[7840] = "image_print (imageutil.c0: 92.11-92.31)"
B8 00 12 # invokestatic 18    # string_equal__1(s, "y", "image_print (imageutil.c0: 92.11-92.31)")
10 01    # bipush 1           # true
9F 00 1F # if_cmpeq +31       # if (string_equal__1(s, "y", "image_print (imageutil.c0: 92.11-92.31)") == true) goto <320:else>
A7 00 03 # goto +3            # goto <322:or>
# <322:or>
15 04    # vload 4            # s
14 1E C8 # aldc 7880          # s[7880] = "Y"
14 1E CA # aldc 7882          # s[7882] = "image_print (imageutil.c0: 92.35-92.55)"
B8 00 12 # invokestatic 18    # string_equal__1(s, "Y", "image_print (imageutil.c0: 92.35-92.55)")
10 01    # bipush 1           # true
9F 00 0C # if_cmpeq +12       # if (string_equal__1(s, "Y", "image_print (imageutil.c0: 92.35-92.55)") == true) goto <320:else>
A7 00 03 # goto +3            # goto <319:then>
# <319:then>
10 00    # bipush 0           # dummy return value
B0       # return             # 
A7 00 03 # goto +3            # goto <321:endif>
# <320:else>
# <321:endif>
A7 00 03 # goto +3            # goto <317:endif>
# <316:else>
# <317:endif>
10 00    # bipush 0           # 0
36 04    # vstore 4           # row = 0;
# <323:loop>
A7 00 03 # goto +3            # goto <324:body>
# <324:body>
15 04    # vload 4            # row
15 02    # vload 2            # height
A1 00 06 # if_icmplt +6       # if (row < height) goto <326:then>
A7 00 5B # goto +91           # goto <327:else>
# <326:then>
10 00    # bipush 0           # 0
36 05    # vstore 5           # col = 0;
# <329:loop>
A7 00 03 # goto +3            # goto <330:body>
# <330:body>
15 05    # vload 5            # col
15 01    # vload 1            # width
A1 00 06 # if_icmplt +6       # if (col < width) goto <332:then>
A7 00 30 # goto +48           # goto <333:else>
# <332:then>
15 00    # vload 0            # A
15 04    # vload 4            # row
15 05    # vload 5            # col
15 01    # vload 1            # width
15 02    # vload 2            # height
14 1E F2 # aldc 7922          # s[7922] = "image_print (imageutil.c0: 99.25-99.59)"
B8 00 35 # invokestatic 53    # get_index(row, col, width, height, "image_print (imageutil.c0: 99.25-99.59)")
63       # aadds              # &A[get_index(row, col, width, height, "image_print (imageutil.c0: 99.25-99.59)")]
2E       # imload             # A[get_index(row, col, width, height, "image_print (imageutil.c0: 99.25-99.59)")]
14 1F 1A # aldc 7962          # s[7962] = "image_print (imageutil.c0: 99.11-99.61)"
B8 00 2B # invokestatic 43    # pixel_print(A[get_index(row, col, width, height, "image_print (imageutil.c0: 99.25-99.59)")], "image_print (imageutil.c0: 99.11-99.61)")
57       # pop                # (ignore result)
14 1F 42 # aldc 8002          # s[8002] = " "
14 1F 44 # aldc 8004          # s[8004] = "image_print (imageutil.c0: 100.11-100.22)"
B8 00 1E # invokestatic 30    # print__1(" ", "image_print (imageutil.c0: 100.11-100.22)")
57       # pop                # (ignore result)
15 05    # vload 5            # col
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # col += 1;
A7 00 06 # goto +6            # goto <334:endif>
# <333:else>
A7 00 06 # goto +6            # break
# <334:endif>
A7 FF C3 # goto -61           # goto <329:loop>
# <331:exit>
14 1F 6E # aldc 8046          # s[8046] = "\n"
14 1F 70 # aldc 8048          # s[8048] = "image_print (imageutil.c0: 102.7-102.19)"
B8 00 1E # invokestatic 30    # print__1("\n", "image_print (imageutil.c0: 102.7-102.19)")
57       # pop                # (ignore result)
15 04    # vload 4            # row
10 01    # bipush 1           # 1
60       # iadd               # 
36 04    # vstore 4           # row += 1;
A7 00 06 # goto +6            # goto <328:endif>
# <327:else>
A7 00 06 # goto +6            # break
# <328:endif>
A7 FF 98 # goto -104          # goto <323:loop>
# <325:exit>
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<rotate>
04                # number of arguments = 4
0B                # number of local variables = 11
02 11             # code length = 529 bytes
15 01    # vload 1            # width
15 02    # vload 2            # height
9F 00 06 # if_cmpeq +6        # if (width == height) goto <335:cond_true>
A7 00 10 # goto +16           # goto <336:cond_false>
# <335:cond_true>
15 01    # vload 1            # width
15 02    # vload 2            # height
14 1F 99 # aldc 8089          # s[8089] = "rotate (rotate.c0: 2.32-2.65)"
B8 00 31 # invokestatic 49    # is_valid_imagesize(width, height, "rotate (rotate.c0: 2.32-2.65)")
A7 00 05 # goto +5            # goto <337:cond_end>
# <336:cond_false>
10 00    # bipush 0           # false
# <337:cond_end>
14 1F B7 # aldc 8119          # s[8119] = "rotate.c0: 2.4-2.66: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 1F E9 # aldc 8169          # s[8169] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("rotate.c0: 2.4-2.66: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((width == height) && is_valid_imagesize(width, height, "rotate (rotate.c0: 2.32-2.65)")) [failure message on stack]
15 01    # vload 1            # width
15 02    # vload 2            # height
60       # iadd               # (width + height)
15 01    # vload 1            # width
15 02    # vload 2            # height
60       # iadd               # (width + height)
14 1F FB # aldc 8187          # s[8187] = "rotate (rotate.c0: 3.13-3.63)"
B8 00 31 # invokestatic 49    # is_valid_imagesize((width + height), (width + height), "rotate (rotate.c0: 3.13-3.63)")
14 20 19 # aldc 8217          # s[8217] = "rotate.c0: 3.4-3.64: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 20 4B # aldc 8267          # s[8267] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("rotate.c0: 3.4-3.64: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_valid_imagesize((width + height), (width + height), "rotate (rotate.c0: 3.13-3.63)") [failure message on stack]
15 00    # vload 0            # originalPixels
BE       # arraylength        # \length(originalPixels)
15 01    # vload 1            # width
15 02    # vload 2            # height
68       # imul               # (width * height)
9F 00 06 # if_cmpeq +6        # if (\length(originalPixels) == (width * height)) goto <338:cond_true>
A7 00 08 # goto +8            # goto <339:cond_false>
# <338:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <340:cond_end>
# <339:cond_false>
10 00    # bipush 0           # false
# <340:cond_end>
14 20 5D # aldc 8285          # s[8285] = "rotate.c0: 5.4-5.55: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 20 8F # aldc 8335          # s[8335] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("rotate.c0: 5.4-5.55: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(originalPixels) == (width * height)) [failure message on stack]
15 01    # vload 1            # width
15 02    # vload 2            # height
60       # iadd               # (width + height)
15 01    # vload 1            # width
15 02    # vload 2            # height
60       # iadd               # (width + height)
68       # imul               # ((width + height) * (width + height))
BC 04    # newarray 4         # alloc_array(pixel_t, ((width + height) * (width + height)))
36 05    # vstore 5           # rotatedPixels = alloc_array(pixel_t, ((width + height) * (width + height)));
15 01    # vload 1            # width
15 02    # vload 2            # height
60       # iadd               # (width + height)
36 06    # vstore 6           # newSideLength = (width + height);
10 FF    # bipush -1          # -1
36 07    # vstore 7           # newRow = -(1);
10 FF    # bipush -1          # -1
36 08    # vstore 8           # newCol = -(1);
10 FF    # bipush -1          # -1
36 09    # vstore 9           # newIndex = -(1);
10 00    # bipush 0           # 0
36 0A    # vstore 10          # oldIndex = 0;
# <341:loop>
A7 00 03 # goto +3            # goto <342:body>
# <342:body>
10 00    # bipush 0           # 0
15 0A    # vload 10           # oldIndex
A4 00 06 # if_icmple +6       # if (0 <= oldIndex) goto <344:cond_true>
A7 00 1A # goto +26           # goto <345:cond_false>
# <344:cond_true>
15 0A    # vload 10           # oldIndex
15 01    # vload 1            # width
15 02    # vload 2            # height
68       # imul               # (width * height)
A4 00 06 # if_icmple +6       # if (oldIndex <= (width * height)) goto <347:cond_true>
A7 00 08 # goto +8            # goto <348:cond_false>
# <347:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <349:cond_end>
# <348:cond_false>
10 00    # bipush 0           # false
# <349:cond_end>
A7 00 05 # goto +5            # goto <346:cond_end>
# <345:cond_false>
10 00    # bipush 0           # false
# <346:cond_end>
14 20 A1 # aldc 8353          # s[8353] = "rotate.c0: 18.6-18.67: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= oldIndex) && (oldIndex <= (width * height))) [failure message on stack]
15 0A    # vload 10           # oldIndex
15 01    # vload 1            # width
15 02    # vload 2            # height
68       # imul               # (width * height)
A1 00 06 # if_icmplt +6       # if (oldIndex < (width * height)) goto <350:then>
A7 01 0B # goto +267          # goto <351:else>
# <350:then>
15 02    # vload 2            # height
15 0A    # vload 10           # oldIndex
15 01    # vload 1            # width
15 02    # vload 2            # height
14 20 DA # aldc 8410          # s[8410] = "rotate (rotate.c0: 21.23-21.58)"
B8 00 33 # invokestatic 51    # get_column(oldIndex, width, height, "rotate (rotate.c0: 21.23-21.58)")
64       # isub               # (height - get_column(oldIndex, width, height, "rotate (rotate.c0: 21.23-21.58)"))
10 01    # bipush 1           # 1
64       # isub               # ((height - get_column(oldIndex, width, height, "rotate (rotate.c0: 21.23-21.58)")) - 1)
36 07    # vstore 7           # newRow = ((height - get_column(oldIndex, width, height, "rotate (rotate.c0: 21.23-21.58)")) - 1);
15 0A    # vload 10           # oldIndex
15 01    # vload 1            # width
15 02    # vload 2            # height
14 20 FA # aldc 8442          # s[8442] = "rotate (rotate.c0: 22.14-22.46)"
B8 00 32 # invokestatic 50    # get_row(oldIndex, width, height, "rotate (rotate.c0: 22.14-22.46)")
36 08    # vstore 8           # newCol = get_row(oldIndex, width, height, "rotate (rotate.c0: 22.14-22.46)");
15 07    # vload 7            # newRow
15 08    # vload 8            # newCol
15 06    # vload 6            # newSideLength
15 06    # vload 6            # newSideLength
14 21 1A # aldc 8474          # s[8474] = "rotate (rotate.c0: 23.16-23.71)"
B8 00 35 # invokestatic 53    # get_index(newRow, newCol, newSideLength, newSideLength, "rotate (rotate.c0: 23.16-23.71)")
36 09    # vstore 9           # newIndex = get_index(newRow, newCol, newSideLength, newSideLength, "rotate (rotate.c0: 23.16-23.71)");
15 05    # vload 5            # rotatedPixels
15 09    # vload 9            # newIndex
63       # aadds              # &rotatedPixels[newIndex]
15 00    # vload 0            # originalPixels
15 0A    # vload 10           # oldIndex
63       # aadds              # &originalPixels[oldIndex]
2E       # imload             # originalPixels[oldIndex]
4E       # imstore            # rotatedPixels[newIndex] = originalPixels[oldIndex];
15 0A    # vload 10           # oldIndex
15 01    # vload 1            # width
15 02    # vload 2            # height
14 21 3A # aldc 8506          # s[8506] = "rotate (rotate.c0: 27.14-27.46)"
B8 00 32 # invokestatic 50    # get_row(oldIndex, width, height, "rotate (rotate.c0: 27.14-27.46)")
36 07    # vstore 7           # newRow = get_row(oldIndex, width, height, "rotate (rotate.c0: 27.14-27.46)");
15 0A    # vload 10           # oldIndex
15 01    # vload 1            # width
15 02    # vload 2            # height
14 21 5A # aldc 8538          # s[8538] = "rotate (rotate.c0: 28.14-28.49)"
B8 00 33 # invokestatic 51    # get_column(oldIndex, width, height, "rotate (rotate.c0: 28.14-28.49)")
15 01    # vload 1            # width
60       # iadd               # (get_column(oldIndex, width, height, "rotate (rotate.c0: 28.14-28.49)") + width)
36 08    # vstore 8           # newCol = (get_column(oldIndex, width, height, "rotate (rotate.c0: 28.14-28.49)") + width);
15 07    # vload 7            # newRow
15 08    # vload 8            # newCol
15 06    # vload 6            # newSideLength
15 06    # vload 6            # newSideLength
14 21 7A # aldc 8570          # s[8570] = "rotate (rotate.c0: 29.16-29.71)"
B8 00 35 # invokestatic 53    # get_index(newRow, newCol, newSideLength, newSideLength, "rotate (rotate.c0: 29.16-29.71)")
36 09    # vstore 9           # newIndex = get_index(newRow, newCol, newSideLength, newSideLength, "rotate (rotate.c0: 29.16-29.71)");
15 05    # vload 5            # rotatedPixels
15 09    # vload 9            # newIndex
63       # aadds              # &rotatedPixels[newIndex]
15 00    # vload 0            # originalPixels
15 0A    # vload 10           # oldIndex
63       # aadds              # &originalPixels[oldIndex]
2E       # imload             # originalPixels[oldIndex]
4E       # imstore            # rotatedPixels[newIndex] = originalPixels[oldIndex];
15 06    # vload 6            # newSideLength
15 0A    # vload 10           # oldIndex
15 01    # vload 1            # width
15 02    # vload 2            # height
14 21 9A # aldc 8602          # s[8602] = "rotate (rotate.c0: 33.30-33.62)"
B8 00 32 # invokestatic 50    # get_row(oldIndex, width, height, "rotate (rotate.c0: 33.30-33.62)")
64       # isub               # (newSideLength - get_row(oldIndex, width, height, "rotate (rotate.c0: 33.30-33.62)"))
10 01    # bipush 1           # 1
64       # isub               # ((newSideLength - get_row(oldIndex, width, height, "rotate (rotate.c0: 33.30-33.62)")) - 1)
36 07    # vstore 7           # newRow = ((newSideLength - get_row(oldIndex, width, height, "rotate (rotate.c0: 33.30-33.62)")) - 1);
15 01    # vload 1            # width
15 0A    # vload 10           # oldIndex
15 01    # vload 1            # width
15 02    # vload 2            # height
14 21 BA # aldc 8634          # s[8634] = "rotate (rotate.c0: 34.22-34.57)"
B8 00 33 # invokestatic 51    # get_column(oldIndex, width, height, "rotate (rotate.c0: 34.22-34.57)")
64       # isub               # (width - get_column(oldIndex, width, height, "rotate (rotate.c0: 34.22-34.57)"))
10 01    # bipush 1           # 1
64       # isub               # ((width - get_column(oldIndex, width, height, "rotate (rotate.c0: 34.22-34.57)")) - 1)
36 08    # vstore 8           # newCol = ((width - get_column(oldIndex, width, height, "rotate (rotate.c0: 34.22-34.57)")) - 1);
15 07    # vload 7            # newRow
15 08    # vload 8            # newCol
15 06    # vload 6            # newSideLength
15 06    # vload 6            # newSideLength
14 21 DA # aldc 8666          # s[8666] = "rotate (rotate.c0: 35.16-35.71)"
B8 00 35 # invokestatic 53    # get_index(newRow, newCol, newSideLength, newSideLength, "rotate (rotate.c0: 35.16-35.71)")
36 09    # vstore 9           # newIndex = get_index(newRow, newCol, newSideLength, newSideLength, "rotate (rotate.c0: 35.16-35.71)");
15 05    # vload 5            # rotatedPixels
15 09    # vload 9            # newIndex
63       # aadds              # &rotatedPixels[newIndex]
15 00    # vload 0            # originalPixels
15 0A    # vload 10           # oldIndex
63       # aadds              # &originalPixels[oldIndex]
2E       # imload             # originalPixels[oldIndex]
4E       # imstore            # rotatedPixels[newIndex] = originalPixels[oldIndex];
15 0A    # vload 10           # oldIndex
15 01    # vload 1            # width
15 02    # vload 2            # height
14 21 FA # aldc 8698          # s[8698] = "rotate (rotate.c0: 39.14-39.49)"
B8 00 33 # invokestatic 51    # get_column(oldIndex, width, height, "rotate (rotate.c0: 39.14-39.49)")
15 02    # vload 2            # height
60       # iadd               # (get_column(oldIndex, width, height, "rotate (rotate.c0: 39.14-39.49)") + height)
36 07    # vstore 7           # newRow = (get_column(oldIndex, width, height, "rotate (rotate.c0: 39.14-39.49)") + height);
15 06    # vload 6            # newSideLength
15 0A    # vload 10           # oldIndex
15 01    # vload 1            # width
15 02    # vload 2            # height
14 22 1A # aldc 8730          # s[8730] = "rotate (rotate.c0: 40.30-40.62)"
B8 00 32 # invokestatic 50    # get_row(oldIndex, width, height, "rotate (rotate.c0: 40.30-40.62)")
64       # isub               # (newSideLength - get_row(oldIndex, width, height, "rotate (rotate.c0: 40.30-40.62)"))
10 01    # bipush 1           # 1
64       # isub               # ((newSideLength - get_row(oldIndex, width, height, "rotate (rotate.c0: 40.30-40.62)")) - 1)
36 08    # vstore 8           # newCol = ((newSideLength - get_row(oldIndex, width, height, "rotate (rotate.c0: 40.30-40.62)")) - 1);
15 07    # vload 7            # newRow
15 08    # vload 8            # newCol
15 06    # vload 6            # newSideLength
15 06    # vload 6            # newSideLength
14 22 3A # aldc 8762          # s[8762] = "rotate (rotate.c0: 41.16-41.71)"
B8 00 35 # invokestatic 53    # get_index(newRow, newCol, newSideLength, newSideLength, "rotate (rotate.c0: 41.16-41.71)")
36 09    # vstore 9           # newIndex = get_index(newRow, newCol, newSideLength, newSideLength, "rotate (rotate.c0: 41.16-41.71)");
15 05    # vload 5            # rotatedPixels
15 09    # vload 9            # newIndex
63       # aadds              # &rotatedPixels[newIndex]
15 00    # vload 0            # originalPixels
15 0A    # vload 10           # oldIndex
63       # aadds              # &originalPixels[oldIndex]
2E       # imload             # originalPixels[oldIndex]
4E       # imstore            # rotatedPixels[newIndex] = originalPixels[oldIndex];
15 0A    # vload 10           # oldIndex
10 01    # bipush 1           # 1
60       # iadd               # 
36 0A    # vstore 10          # oldIndex += 1;
A7 00 06 # goto +6            # goto <352:endif>
# <351:else>
A7 00 06 # goto +6            # break
# <352:endif>
A7 FE BE # goto -322          # goto <341:loop>
# <343:exit>
15 05    # vload 5            # rotatedPixels
36 04    # vstore 4           # _result = rotatedPixels;
15 04    # vload 4            # _result
15 00    # vload 0            # originalPixels
A0 00 06 # if_cmpne +6        # if (_result != originalPixels) goto <353:cond_true>
A7 00 08 # goto +8            # goto <354:cond_false>
# <353:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <355:cond_end>
# <354:cond_false>
10 00    # bipush 0           # false
# <355:cond_end>
14 22 5A # aldc 8794          # s[8794] = "rotate.c0: 6.4-6.38: @ensures annotation failed"
CF       # assert             # assert (_result != originalPixels) [failure message on stack]
15 04    # vload 4            # _result
BE       # arraylength        # \length(_result)
15 01    # vload 1            # width
15 02    # vload 2            # height
60       # iadd               # (width + height)
15 01    # vload 1            # width
15 02    # vload 2            # height
60       # iadd               # (width + height)
68       # imul               # ((width + height) * (width + height))
9F 00 06 # if_cmpeq +6        # if (\length(_result) == ((width + height) * (width + height))) goto <356:cond_true>
A7 00 08 # goto +8            # goto <357:cond_false>
# <356:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <358:cond_end>
# <357:cond_false>
10 00    # bipush 0           # false
# <358:cond_end>
14 22 8A # aldc 8842          # s[8842] = "rotate.c0: 7.4-7.68: @ensures annotation failed"
CF       # assert             # assert (\length(_result) == ((width + height) * (width + height))) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 


#<args_flag__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 2D             # code length = 45 bytes
15 01    # vload 1            # ptr
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (ptr != NULL) goto <359:cond_true>
A7 00 08 # goto +8            # goto <360:cond_false>
# <359:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <361:cond_end>
# <360:cond_false>
10 00    # bipush 0           # false
# <361:cond_end>
14 22 BA # aldc 8890          # s[8890] = "/afs/andrew/course/15/122/lib/args.h0: 8.6-8.27: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 23 08 # aldc 8968          # s[8968] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/args.h0: 8.6-8.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (ptr != NULL) [failure message on stack]
15 00    # vload 0            # name
15 01    # vload 1            # ptr
B7 00 17 # invokenative 23    # args_flag(name, ptr)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<args_int__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 2D             # code length = 45 bytes
15 01    # vload 1            # ptr
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (ptr != NULL) goto <362:cond_true>
A7 00 08 # goto +8            # goto <363:cond_false>
# <362:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <364:cond_end>
# <363:cond_false>
10 00    # bipush 0           # false
# <364:cond_end>
14 23 1A # aldc 8986          # s[8986] = "/afs/andrew/course/15/122/lib/args.h0: 14.6-14.27: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 23 6A # aldc 9066          # s[9066] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/args.h0: 14.6-14.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (ptr != NULL) [failure message on stack]
15 00    # vload 0            # name
15 01    # vload 1            # ptr
B7 00 18 # invokenative 24    # args_int(name, ptr)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<args_string__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 2D             # code length = 45 bytes
15 01    # vload 1            # ptr
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (ptr != NULL) goto <365:cond_true>
A7 00 08 # goto +8            # goto <366:cond_false>
# <365:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <367:cond_end>
# <366:cond_false>
10 00    # bipush 0           # false
# <367:cond_end>
14 23 7C # aldc 9084          # s[9084] = "/afs/andrew/course/15/122/lib/args.h0: 20.6-20.27: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 23 CC # aldc 9164          # s[9164] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/args.h0: 20.6-20.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (ptr != NULL) [failure message on stack]
15 00    # vload 0            # name
15 01    # vload 1            # ptr
B7 00 19 # invokenative 25    # args_string(name, ptr)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<args_parse__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 32             # code length = 50 bytes
B7 00 1A # invokenative 26    # args_parse()
36 01    # vstore 1           # _result = args_parse();
15 01    # vload 1            # _result
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (_result == NULL) goto <368:cond_true>
A7 00 08 # goto +8            # goto <369:cond_false>
# <368:cond_true>
10 01    # bipush 1           # true
A7 00 1B # goto +27           # goto <370:cond_end>
# <369:cond_false>
15 01    # vload 1            # _result
62 00    # aaddf 0            # &_result->argc
2E       # imload             # _result->argc
15 01    # vload 1            # _result
62 08    # aaddf 8            # &_result->argv
2F       # amload             # _result->argv
BE       # arraylength        # \length(_result->argv)
9F 00 06 # if_cmpeq +6        # if (_result->argc == \length(_result->argv)) goto <371:cond_true>
A7 00 08 # goto +8            # goto <372:cond_false>
# <371:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <373:cond_end>
# <372:cond_false>
10 00    # bipush 0           # false
# <373:cond_end>
# <370:cond_end>
14 23 DE # aldc 9182          # s[9182] = "/afs/andrew/course/15/122/lib/args.h0: 34.6-34.73: @ensures annotation failed"
CF       # assert             # assert ((_result == NULL) || (_result->argc == \length(_result->argv))) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<parse_bool__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 1B # invokenative 27    # parse_bool(s)
36 02    # vstore 2           # _result = parse_bool(s);
15 02    # vload 2            # _result
B0       # return             # 


#<parse_int__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 3B             # code length = 59 bytes
10 02    # bipush 2           # 2
15 01    # vload 1            # base
A4 00 06 # if_icmple +6       # if (2 <= base) goto <374:cond_true>
A7 00 17 # goto +23           # goto <375:cond_false>
# <374:cond_true>
15 01    # vload 1            # base
10 24    # bipush 36          # 36
A4 00 06 # if_icmple +6       # if (base <= 36) goto <377:cond_true>
A7 00 08 # goto +8            # goto <378:cond_false>
# <377:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <379:cond_end>
# <378:cond_false>
10 00    # bipush 0           # false
# <379:cond_end>
A7 00 05 # goto +5            # goto <376:cond_end>
# <375:cond_false>
10 00    # bipush 0           # false
# <376:cond_end>
14 24 2C # aldc 9260          # s[9260] = "/afs/andrew/course/15/122/lib/parse.h0: 13.6-13.39: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 24 7D # aldc 9341          # s[9341] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/parse.h0: 13.6-13.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((2 <= base) && (base <= 36)) [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # base
B7 00 1C # invokenative 28    # parse_int(s, base)
36 03    # vstore 3           # _result = parse_int(s, base);
15 03    # vload 3            # _result
B0       # return             # 


#<num_tokens__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 1D # invokenative 29    # num_tokens(s)
36 02    # vstore 2           # _result = num_tokens(s);
15 02    # vload 2            # _result
B0       # return             # 


#<int_tokens__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 3B             # code length = 59 bytes
10 02    # bipush 2           # 2
15 01    # vload 1            # base
A4 00 06 # if_icmple +6       # if (2 <= base) goto <380:cond_true>
A7 00 17 # goto +23           # goto <381:cond_false>
# <380:cond_true>
15 01    # vload 1            # base
10 24    # bipush 36          # 36
A4 00 06 # if_icmple +6       # if (base <= 36) goto <383:cond_true>
A7 00 08 # goto +8            # goto <384:cond_false>
# <383:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <385:cond_end>
# <384:cond_false>
10 00    # bipush 0           # false
# <385:cond_end>
A7 00 05 # goto +5            # goto <382:cond_end>
# <381:cond_false>
10 00    # bipush 0           # false
# <382:cond_end>
14 24 8F # aldc 9359          # s[9359] = "/afs/andrew/course/15/122/lib/parse.h0: 20.6-20.39: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 24 E0 # aldc 9440          # s[9440] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/parse.h0: 20.6-20.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((2 <= base) && (base <= 36)) [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # base
B7 00 1E # invokenative 30    # int_tokens(s, base)
36 03    # vstore 3           # _result = int_tokens(s, base);
15 03    # vload 3            # _result
B0       # return             # 


#<parse_tokens__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 26             # code length = 38 bytes
15 00    # vload 0            # s
B7 00 1F # invokenative 31    # parse_tokens(s)
36 02    # vstore 2           # _result = parse_tokens(s);
15 02    # vload 2            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # s
14 24 F2 # aldc 9458          # s[9458] = "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)"
B8 00 3E # invokestatic 62    # num_tokens__1(s, "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)")
9F 00 06 # if_cmpeq +6        # if (\length(_result) == num_tokens__1(s, "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)")) goto <386:cond_true>
A7 00 08 # goto +8            # goto <387:cond_false>
# <386:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <388:cond_end>
# <387:cond_false>
10 00    # bipush 0           # false
# <388:cond_end>
14 25 38 # aldc 9528          # s[9528] = "/afs/andrew/course/15/122/lib/parse.h0: 23.6-23.48: @ensures annotation failed"
CF       # assert             # assert (\length(_result) == num_tokens__1(s, "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)")) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<parse_ints__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 41             # code length = 65 bytes
15 00    # vload 0            # s
15 01    # vload 1            # base
14 25 87 # aldc 9607          # s[9607] = "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 27.15-27.34)"
B8 00 3F # invokestatic 63    # int_tokens__1(s, base, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 27.15-27.34)")
14 25 CB # aldc 9675          # s[9675] = "/afs/andrew/course/15/122/lib/parse.h0: 27.6-27.35: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 26 1C # aldc 9756          # s[9756] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/parse.h0: 27.6-27.35: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert int_tokens__1(s, base, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 27.15-27.34)") [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # base
B7 00 20 # invokenative 32    # parse_ints(s, base)
36 03    # vstore 3           # _result = parse_ints(s, base);
15 03    # vload 3            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # s
14 26 2E # aldc 9774          # s[9774] = "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)"
B8 00 3E # invokestatic 62    # num_tokens__1(s, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)")
9F 00 06 # if_cmpeq +6        # if (\length(_result) == num_tokens__1(s, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)")) goto <389:cond_true>
A7 00 08 # goto +8            # goto <390:cond_false>
# <389:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <391:cond_end>
# <390:cond_false>
10 00    # bipush 0           # false
# <391:cond_end>
14 26 72 # aldc 9842          # s[9842] = "/afs/andrew/course/15/122/lib/parse.h0: 28.6-28.48: @ensures annotation failed"
CF       # assert             # assert (\length(_result) == num_tokens__1(s, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)")) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<image_width__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 3E             # code length = 62 bytes
15 00    # vload 0            # image
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (image != NULL) goto <392:cond_true>
A7 00 08 # goto +8            # goto <393:cond_false>
# <392:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <394:cond_end>
# <393:cond_false>
10 00    # bipush 0           # false
# <394:cond_end>
14 26 C1 # aldc 9921          # s[9921] = "/afs/andrew/course/15/122/lib/img.h0: 12.6-12.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 27 10 # aldc 10000         # s[10000] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/img.h0: 12.6-12.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (image != NULL) [failure message on stack]
15 00    # vload 0            # image
B7 00 21 # invokenative 33    # image_width(image)
36 02    # vstore 2           # _result = image_width(image);
15 02    # vload 2            # _result
10 00    # bipush 0           # 0
A3 00 06 # if_icmpgt +6       # if (_result > 0) goto <395:cond_true>
A7 00 08 # goto +8            # goto <396:cond_false>
# <395:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <397:cond_end>
# <396:cond_false>
10 00    # bipush 0           # false
# <397:cond_end>
14 27 22 # aldc 10018         # s[10018] = "/afs/andrew/course/15/122/lib/img.h0: 13.6-13.26: @ensures annotation failed"
CF       # assert             # assert (_result > 0) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<image_height__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 3E             # code length = 62 bytes
15 00    # vload 0            # image
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (image != NULL) goto <398:cond_true>
A7 00 08 # goto +8            # goto <399:cond_false>
# <398:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <400:cond_end>
# <399:cond_false>
10 00    # bipush 0           # false
# <400:cond_end>
14 27 6F # aldc 10095         # s[10095] = "/afs/andrew/course/15/122/lib/img.h0: 17.6-17.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 27 BE # aldc 10174         # s[10174] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/img.h0: 17.6-17.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (image != NULL) [failure message on stack]
15 00    # vload 0            # image
B7 00 22 # invokenative 34    # image_height(image)
36 02    # vstore 2           # _result = image_height(image);
15 02    # vload 2            # _result
10 00    # bipush 0           # 0
A3 00 06 # if_icmpgt +6       # if (_result > 0) goto <401:cond_true>
A7 00 08 # goto +8            # goto <402:cond_false>
# <401:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <403:cond_end>
# <402:cond_false>
10 00    # bipush 0           # false
# <403:cond_end>
14 27 D0 # aldc 10192         # s[10192] = "/afs/andrew/course/15/122/lib/img.h0: 18.6-18.26: @ensures annotation failed"
CF       # assert             # assert (_result > 0) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<image_create__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 85             # code length = 133 bytes
10 00    # bipush 0           # 0
15 00    # vload 0            # width
A1 00 06 # if_icmplt +6       # if (0 < width) goto <404:cond_true>
A7 00 17 # goto +23           # goto <405:cond_false>
# <404:cond_true>
10 00    # bipush 0           # 0
15 01    # vload 1            # height
A1 00 06 # if_icmplt +6       # if (0 < height) goto <407:cond_true>
A7 00 08 # goto +8            # goto <408:cond_false>
# <407:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <409:cond_end>
# <408:cond_false>
10 00    # bipush 0           # false
# <409:cond_end>
A7 00 05 # goto +5            # goto <406:cond_end>
# <405:cond_false>
10 00    # bipush 0           # false
# <406:cond_end>
14 28 1D # aldc 10269         # s[10269] = "/afs/andrew/course/15/122/lib/img.h0: 22.6-22.39: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 28 6C # aldc 10348         # s[10348] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/img.h0: 22.6-22.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 < width) && (0 < height)) [failure message on stack]
15 00    # vload 0            # width
15 01    # vload 1            # height
B7 00 23 # invokenative 35    # image_create(width, height)
36 03    # vstore 3           # _result = image_create(width, height);
15 03    # vload 3            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <410:cond_true>
A7 00 08 # goto +8            # goto <411:cond_false>
# <410:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <412:cond_end>
# <411:cond_false>
10 00    # bipush 0           # false
# <412:cond_end>
14 28 7E # aldc 10366         # s[10366] = "/afs/andrew/course/15/122/lib/img.h0: 23.6-23.30: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 03    # vload 3            # _result
14 28 CB # aldc 10443         # s[10443] = "image_create__1 (/afs/andrew/course/15/122/lib/img.h0: 24.14-24.34)"
B8 00 42 # invokestatic 66    # image_width__1(_result, "image_create__1 (/afs/andrew/course/15/122/lib/img.h0: 24.14-24.34)")
15 00    # vload 0            # width
9F 00 06 # if_cmpeq +6        # if (image_width__1(_result, "image_create__1 (/afs/andrew/course/15/122/lib/img.h0: 24.14-24.34)") == width) goto <413:cond_true>
A7 00 08 # goto +8            # goto <414:cond_false>
# <413:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <415:cond_end>
# <414:cond_false>
10 00    # bipush 0           # false
# <415:cond_end>
14 29 0F # aldc 10511         # s[10511] = "/afs/andrew/course/15/122/lib/img.h0: 24.6-24.44: @ensures annotation failed"
CF       # assert             # assert (image_width__1(_result, "image_create__1 (/afs/andrew/course/15/122/lib/img.h0: 24.14-24.34)") == width) [failure message on stack]
15 03    # vload 3            # _result
14 29 5C # aldc 10588         # s[10588] = "image_create__1 (/afs/andrew/course/15/122/lib/img.h0: 25.14-25.35)"
B8 00 43 # invokestatic 67    # image_height__1(_result, "image_create__1 (/afs/andrew/course/15/122/lib/img.h0: 25.14-25.35)")
15 01    # vload 1            # height
9F 00 06 # if_cmpeq +6        # if (image_height__1(_result, "image_create__1 (/afs/andrew/course/15/122/lib/img.h0: 25.14-25.35)") == height) goto <416:cond_true>
A7 00 08 # goto +8            # goto <417:cond_false>
# <416:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <418:cond_end>
# <417:cond_false>
10 00    # bipush 0           # false
# <418:cond_end>
14 29 A0 # aldc 10656         # s[10656] = "/afs/andrew/course/15/122/lib/img.h0: 25.6-25.46: @ensures annotation failed"
CF       # assert             # assert (image_height__1(_result, "image_create__1 (/afs/andrew/course/15/122/lib/img.h0: 25.14-25.35)") == height) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<image_clone__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 6B             # code length = 107 bytes
15 00    # vload 0            # image
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (image != NULL) goto <419:cond_true>
A7 00 08 # goto +8            # goto <420:cond_false>
# <419:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <421:cond_end>
# <420:cond_false>
10 00    # bipush 0           # false
# <421:cond_end>
14 29 ED # aldc 10733         # s[10733] = "/afs/andrew/course/15/122/lib/img.h0: 29.6-29.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 2A 3C # aldc 10812         # s[10812] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/img.h0: 29.6-29.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (image != NULL) [failure message on stack]
15 00    # vload 0            # image
B7 00 24 # invokenative 36    # image_clone(image)
36 02    # vstore 2           # _result = image_clone(image);
15 02    # vload 2            # _result
14 2A 4E # aldc 10830         # s[10830] = "image_clone__1 (/afs/andrew/course/15/122/lib/img.h0: 30.14-30.34)"
B8 00 42 # invokestatic 66    # image_width__1(_result, "image_clone__1 (/afs/andrew/course/15/122/lib/img.h0: 30.14-30.34)")
15 00    # vload 0            # image
14 2A 91 # aldc 10897         # s[10897] = "image_clone__1 (/afs/andrew/course/15/122/lib/img.h0: 30.38-30.56)"
B8 00 42 # invokestatic 66    # image_width__1(image, "image_clone__1 (/afs/andrew/course/15/122/lib/img.h0: 30.38-30.56)")
9F 00 06 # if_cmpeq +6        # if (image_width__1(_result, "image_clone__1 (/afs/andrew/course/15/122/lib/img.h0: 30.14-30.34)") == image_width__1(image, "image_clone__1 (/afs/andrew/course/15/122/lib/img.h0: 30.38-30.56)")) goto <422:cond_true>
A7 00 08 # goto +8            # goto <423:cond_false>
# <422:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <424:cond_end>
# <423:cond_false>
10 00    # bipush 0           # false
# <424:cond_end>
14 2A D4 # aldc 10964         # s[10964] = "/afs/andrew/course/15/122/lib/img.h0: 30.6-30.57: @ensures annotation failed"
CF       # assert             # assert (image_width__1(_result, "image_clone__1 (/afs/andrew/course/15/122/lib/img.h0: 30.14-30.34)") == image_width__1(image, "image_clone__1 (/afs/andrew/course/15/122/lib/img.h0: 30.38-30.56)")) [failure message on stack]
15 02    # vload 2            # _result
14 2B 21 # aldc 11041         # s[11041] = "image_clone__1 (/afs/andrew/course/15/122/lib/img.h0: 31.14-31.35)"
B8 00 43 # invokestatic 67    # image_height__1(_result, "image_clone__1 (/afs/andrew/course/15/122/lib/img.h0: 31.14-31.35)")
15 00    # vload 0            # image
14 2B 64 # aldc 11108         # s[11108] = "image_clone__1 (/afs/andrew/course/15/122/lib/img.h0: 31.39-31.58)"
B8 00 43 # invokestatic 67    # image_height__1(image, "image_clone__1 (/afs/andrew/course/15/122/lib/img.h0: 31.39-31.58)")
9F 00 06 # if_cmpeq +6        # if (image_height__1(_result, "image_clone__1 (/afs/andrew/course/15/122/lib/img.h0: 31.14-31.35)") == image_height__1(image, "image_clone__1 (/afs/andrew/course/15/122/lib/img.h0: 31.39-31.58)")) goto <425:cond_true>
A7 00 08 # goto +8            # goto <426:cond_false>
# <425:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <427:cond_end>
# <426:cond_false>
10 00    # bipush 0           # false
# <427:cond_end>
14 2B A7 # aldc 11175         # s[11175] = "/afs/andrew/course/15/122/lib/img.h0: 31.6-31.59: @ensures annotation failed"
CF       # assert             # assert (image_height__1(_result, "image_clone__1 (/afs/andrew/course/15/122/lib/img.h0: 31.14-31.35)") == image_height__1(image, "image_clone__1 (/afs/andrew/course/15/122/lib/img.h0: 31.39-31.58)")) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<image_subimage__1>
06                # number of arguments = 6
07                # number of local variables = 7
00 67             # code length = 103 bytes
15 00    # vload 0            # image
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (image != NULL) goto <428:cond_true>
A7 00 08 # goto +8            # goto <429:cond_false>
# <428:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <430:cond_end>
# <429:cond_false>
10 00    # bipush 0           # false
# <430:cond_end>
14 2B F4 # aldc 11252         # s[11252] = "/afs/andrew/course/15/122/lib/img.h0: 38.6-38.29: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 2C 43 # aldc 11331         # s[11331] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/img.h0: 38.6-38.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (image != NULL) [failure message on stack]
15 00    # vload 0            # image
15 01    # vload 1            # x
15 02    # vload 2            # y
15 03    # vload 3            # width
15 04    # vload 4            # height
B7 00 25 # invokenative 37    # image_subimage(image, x, y, width, height)
36 06    # vstore 6           # _result = image_subimage(image, x, y, width, height);
15 06    # vload 6            # _result
14 2C 55 # aldc 11349         # s[11349] = "image_subimage__1 (/afs/andrew/course/15/122/lib/img.h0: 39.14-39.34)"
B8 00 42 # invokestatic 66    # image_width__1(_result, "image_subimage__1 (/afs/andrew/course/15/122/lib/img.h0: 39.14-39.34)")
15 03    # vload 3            # width
9F 00 06 # if_cmpeq +6        # if (image_width__1(_result, "image_subimage__1 (/afs/andrew/course/15/122/lib/img.h0: 39.14-39.34)") == width) goto <431:cond_true>
A7 00 08 # goto +8            # goto <432:cond_false>
# <431:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <433:cond_end>
# <432:cond_false>
10 00    # bipush 0           # false
# <433:cond_end>
14 2C 9B # aldc 11419         # s[11419] = "/afs/andrew/course/15/122/lib/img.h0: 39.6-39.44: @ensures annotation failed"
CF       # assert             # assert (image_width__1(_result, "image_subimage__1 (/afs/andrew/course/15/122/lib/img.h0: 39.14-39.34)") == width) [failure message on stack]
15 06    # vload 6            # _result
14 2C E8 # aldc 11496         # s[11496] = "image_subimage__1 (/afs/andrew/course/15/122/lib/img.h0: 40.14-40.35)"
B8 00 43 # invokestatic 67    # image_height__1(_result, "image_subimage__1 (/afs/andrew/course/15/122/lib/img.h0: 40.14-40.35)")
15 04    # vload 4            # height
9F 00 06 # if_cmpeq +6        # if (image_height__1(_result, "image_subimage__1 (/afs/andrew/course/15/122/lib/img.h0: 40.14-40.35)") == height) goto <434:cond_true>
A7 00 08 # goto +8            # goto <435:cond_false>
# <434:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <436:cond_end>
# <435:cond_false>
10 00    # bipush 0           # false
# <436:cond_end>
14 2D 2E # aldc 11566         # s[11566] = "/afs/andrew/course/15/122/lib/img.h0: 40.6-40.46: @ensures annotation failed"
CF       # assert             # assert (image_height__1(_result, "image_subimage__1 (/afs/andrew/course/15/122/lib/img.h0: 40.14-40.35)") == height) [failure message on stack]
15 06    # vload 6            # _result
B0       # return             # 


#<image_load__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # path
B7 00 26 # invokenative 38    # image_load(path)
36 02    # vstore 2           # _result = image_load(path);
15 02    # vload 2            # _result
B0       # return             # 


#<image_save__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 2D             # code length = 45 bytes
15 00    # vload 0            # image
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (image != NULL) goto <437:cond_true>
A7 00 08 # goto +8            # goto <438:cond_false>
# <437:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <439:cond_end>
# <438:cond_false>
10 00    # bipush 0           # false
# <439:cond_end>
14 2D 7B # aldc 11643         # s[11643] = "/afs/andrew/course/15/122/lib/img.h0: 50.6-50.29: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 2D CA # aldc 11722         # s[11722] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/img.h0: 50.6-50.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (image != NULL) [failure message on stack]
15 00    # vload 0            # image
15 01    # vload 1            # path
B7 00 27 # invokenative 39    # image_save(image, path)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<image_data__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 4E             # code length = 78 bytes
15 00    # vload 0            # image
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (image != NULL) goto <440:cond_true>
A7 00 08 # goto +8            # goto <441:cond_false>
# <440:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <442:cond_end>
# <441:cond_false>
10 00    # bipush 0           # false
# <442:cond_end>
14 2D DC # aldc 11740         # s[11740] = "/afs/andrew/course/15/122/lib/img.h0: 58.6-58.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 2E 2B # aldc 11819         # s[11819] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/img.h0: 58.6-58.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (image != NULL) [failure message on stack]
15 00    # vload 0            # image
B7 00 28 # invokenative 40    # image_data(image)
36 02    # vstore 2           # _result = image_data(image);
15 02    # vload 2            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # image
14 2E 3D # aldc 11837         # s[11837] = "image_data__1 (/afs/andrew/course/15/122/lib/img.h0: 59.34-59.52)"
B8 00 42 # invokestatic 66    # image_width__1(image, "image_data__1 (/afs/andrew/course/15/122/lib/img.h0: 59.34-59.52)")
15 00    # vload 0            # image
14 2E 7F # aldc 11903         # s[11903] = "image_data__1 (/afs/andrew/course/15/122/lib/img.h0: 59.55-59.74)"
B8 00 43 # invokestatic 67    # image_height__1(image, "image_data__1 (/afs/andrew/course/15/122/lib/img.h0: 59.55-59.74)")
68       # imul               # (image_width__1(image, "image_data__1 (/afs/andrew/course/15/122/lib/img.h0: 59.34-59.52)") * image_height__1(image, "image_data__1 (/afs/andrew/course/15/122/lib/img.h0: 59.55-59.74)"))
9F 00 06 # if_cmpeq +6        # if (\length(_result) == (image_width__1(image, "image_data__1 (/afs/andrew/course/15/122/lib/img.h0: 59.34-59.52)") * image_height__1(image, "image_data__1 (/afs/andrew/course/15/122/lib/img.h0: 59.55-59.74)"))) goto <443:cond_true>
A7 00 08 # goto +8            # goto <444:cond_false>
# <443:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <445:cond_end>
# <444:cond_false>
10 00    # bipush 0           # false
# <445:cond_end>
14 2E C1 # aldc 11969         # s[11969] = "/afs/andrew/course/15/122/lib/img.h0: 59.6-59.75: @ensures annotation failed"
CF       # assert             # assert (\length(_result) == (image_width__1(image, "image_data__1 (/afs/andrew/course/15/122/lib/img.h0: 59.34-59.52)") * image_height__1(image, "image_data__1 (/afs/andrew/course/15/122/lib/img.h0: 59.55-59.74)"))) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<rotate_main>
03                # number of arguments = 3
0B                # number of local variables = 11
01 88             # code length = 392 bytes
14 2F 0E # aldc 12046         # s[12046] = "Input image:  "
14 2F 1D # aldc 12061         # s[12061] = "rotate_main (rotate-main.c0: 13.3-13.38)"
B8 00 1E # invokestatic 30    # print__1("Input image:  ", "rotate_main (rotate-main.c0: 13.3-13.38)")
57       # pop                # (ignore result)
15 00    # vload 0            # input
14 2F 46 # aldc 12102         # s[12102] = "rotate_main (rotate-main.c0: 13.3-13.38)"
B8 00 1E # invokestatic 30    # print__1(input, "rotate_main (rotate-main.c0: 13.3-13.38)")
57       # pop                # (ignore result)
14 2F 6F # aldc 12143         # s[12143] = "\n"
14 2F 71 # aldc 12145         # s[12145] = "rotate_main (rotate-main.c0: 13.3-13.38)"
B8 00 1E # invokestatic 30    # print__1("\n", "rotate_main (rotate-main.c0: 13.3-13.38)")
57       # pop                # (ignore result)
14 2F 9A # aldc 12186         # s[12186] = "Output image: "
14 2F A9 # aldc 12201         # s[12201] = "rotate_main (rotate-main.c0: 14.3-14.39)"
B8 00 1E # invokestatic 30    # print__1("Output image: ", "rotate_main (rotate-main.c0: 14.3-14.39)")
57       # pop                # (ignore result)
15 01    # vload 1            # output
14 2F D2 # aldc 12242         # s[12242] = "rotate_main (rotate-main.c0: 14.3-14.39)"
B8 00 1E # invokestatic 30    # print__1(output, "rotate_main (rotate-main.c0: 14.3-14.39)")
57       # pop                # (ignore result)
14 2F FB # aldc 12283         # s[12283] = "\n"
14 2F FD # aldc 12285         # s[12285] = "rotate_main (rotate-main.c0: 14.3-14.39)"
B8 00 1E # invokestatic 30    # print__1("\n", "rotate_main (rotate-main.c0: 14.3-14.39)")
57       # pop                # (ignore result)
15 00    # vload 0            # input
14 30 26 # aldc 12326         # s[12326] = "rotate_main (rotate-main.c0: 17.20-17.37)"
B8 00 47 # invokestatic 71    # image_load__1(input, "rotate_main (rotate-main.c0: 17.20-17.37)")
36 03    # vstore 3           # source = image_load__1(input, "rotate_main (rotate-main.c0: 17.20-17.37)");
15 03    # vload 3            # source
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (source == NULL) goto <446:then>
A7 00 0A # goto +10           # goto <447:else>
# <446:then>
14 30 50 # aldc 12368         # s[12368] = "Could not load source image"
BF       # athrow             # error "Could not load source image"
A7 00 03 # goto +3            # goto <448:endif>
# <447:else>
# <448:endif>
15 03    # vload 3            # source
14 30 6C # aldc 12396         # s[12396] = "rotate_main (rotate-main.c0: 19.15-19.34)"
B8 00 42 # invokestatic 66    # image_width__1(source, "rotate_main (rotate-main.c0: 19.15-19.34)")
36 04    # vstore 4           # width = image_width__1(source, "rotate_main (rotate-main.c0: 19.15-19.34)");
15 03    # vload 3            # source
14 30 96 # aldc 12438         # s[12438] = "rotate_main (rotate-main.c0: 20.16-20.36)"
B8 00 43 # invokestatic 67    # image_height__1(source, "rotate_main (rotate-main.c0: 20.16-20.36)")
36 05    # vstore 5           # height = image_height__1(source, "rotate_main (rotate-main.c0: 20.16-20.36)");
15 03    # vload 3            # source
14 30 C0 # aldc 12480         # s[12480] = "rotate_main (rotate-main.c0: 21.24-21.42)"
B8 00 49 # invokestatic 73    # image_data__1(source, "rotate_main (rotate-main.c0: 21.24-21.42)")
36 06    # vstore 6           # inpixels = image_data__1(source, "rotate_main (rotate-main.c0: 21.24-21.42)");
14 30 EA # aldc 12522         # s[12522] = "Loaded image.  Dimensions are "
14 31 09 # aldc 12553         # s[12553] = "rotate_main (rotate-main.c0: 23.3-23.69)"
B8 00 1E # invokestatic 30    # print__1("Loaded image.  Dimensions are ", "rotate_main (rotate-main.c0: 23.3-23.69)")
57       # pop                # (ignore result)
15 04    # vload 4            # width
14 31 32 # aldc 12594         # s[12594] = "rotate_main (rotate-main.c0: 23.3-23.69)"
B8 00 20 # invokestatic 32    # printint__1(width, "rotate_main (rotate-main.c0: 23.3-23.69)")
57       # pop                # (ignore result)
14 31 5B # aldc 12635         # s[12635] = " by "
14 31 60 # aldc 12640         # s[12640] = "rotate_main (rotate-main.c0: 23.3-23.69)"
B8 00 1E # invokestatic 30    # print__1(" by ", "rotate_main (rotate-main.c0: 23.3-23.69)")
57       # pop                # (ignore result)
15 05    # vload 5            # height
14 31 89 # aldc 12681         # s[12681] = "rotate_main (rotate-main.c0: 23.3-23.69)"
B8 00 20 # invokestatic 32    # printint__1(height, "rotate_main (rotate-main.c0: 23.3-23.69)")
57       # pop                # (ignore result)
14 31 B2 # aldc 12722         # s[12722] = ".\n"
14 31 B5 # aldc 12725         # s[12725] = "rotate_main (rotate-main.c0: 23.3-23.69)"
B8 00 1E # invokestatic 30    # print__1(".\n", "rotate_main (rotate-main.c0: 23.3-23.69)")
57       # pop                # (ignore result)
15 04    # vload 4            # width
15 05    # vload 5            # height
A0 00 06 # if_cmpne +6        # if (width != height) goto <449:then>
A7 00 0A # goto +10           # goto <450:else>
# <449:then>
14 31 DE # aldc 12766         # s[12766] = "Image not square"
BF       # athrow             # error "Image not square"
A7 00 03 # goto +3            # goto <451:endif>
# <450:else>
# <451:endif>
14 31 EF # aldc 12783         # s[12783] = "Running rotation transform..."
14 32 0D # aldc 12813         # s[12813] = "rotate_main (rotate-main.c0: 27.3-27.42)"
B8 00 1E # invokestatic 30    # print__1("Running rotation transform...", "rotate_main (rotate-main.c0: 27.3-27.42)")
57       # pop                # (ignore result)
14 32 36 # aldc 12854         # s[12854] = "rotate_main (rotate-main.c0: 27.44-27.51)"
B8 00 23 # invokestatic 35    # flush__1("rotate_main (rotate-main.c0: 27.44-27.51)")
57       # pop                # (ignore result)
15 06    # vload 6            # inpixels
15 04    # vload 4            # width
15 05    # vload 5            # height
14 32 60 # aldc 12896         # s[12896] = "rotate_main (rotate-main.c0: 28.28-28.59)"
B8 00 37 # invokestatic 55    # rotate(inpixels, width, height, "rotate_main (rotate-main.c0: 28.28-28.59)")
36 07    # vstore 7           # resultpixels = rotate(inpixels, width, height, "rotate_main (rotate-main.c0: 28.28-28.59)");
14 32 8A # aldc 12938         # s[12938] = "done.\n"
14 32 91 # aldc 12945         # s[12945] = "rotate_main (rotate-main.c0: 29.3-29.20)"
B8 00 1E # invokestatic 30    # print__1("done.\n", "rotate_main (rotate-main.c0: 29.3-29.20)")
57       # pop                # (ignore result)
15 07    # vload 7            # resultpixels
BE       # arraylength        # \length(resultpixels)
15 04    # vload 4            # width
10 02    # bipush 2           # 2
68       # imul               # (width * 2)
15 05    # vload 5            # height
10 02    # bipush 2           # 2
68       # imul               # (height * 2)
68       # imul               # ((width * 2) * (height * 2))
9F 00 06 # if_cmpeq +6        # if (\length(resultpixels) == ((width * 2) * (height * 2))) goto <452:cond_true>
A7 00 08 # goto +8            # goto <453:cond_false>
# <452:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <454:cond_end>
# <453:cond_false>
10 00    # bipush 0           # false
# <454:cond_end>
14 32 BA # aldc 12986         # s[12986] = "rotate-main.c0: 30.6-30.65: @assert annotation failed"
CF       # assert             # assert (\length(resultpixels) == ((width * 2) * (height * 2))) [failure message on stack]
10 02    # bipush 2           # 2
15 04    # vload 4            # width
68       # imul               # (2 * width)
10 02    # bipush 2           # 2
15 05    # vload 5            # height
68       # imul               # (2 * height)
14 32 F0 # aldc 13040         # s[13040] = "rotate_main (rotate-main.c0: 33.18-33.49)"
B8 00 44 # invokestatic 68    # image_create__1((2 * width), (2 * height), "rotate_main (rotate-main.c0: 33.18-33.49)")
36 08    # vstore 8           # dest = image_create__1((2 * width), (2 * height), "rotate_main (rotate-main.c0: 33.18-33.49)");
15 08    # vload 8            # dest
14 33 1A # aldc 13082         # s[13082] = "rotate_main (rotate-main.c0: 34.25-34.41)"
B8 00 49 # invokestatic 73    # image_data__1(dest, "rotate_main (rotate-main.c0: 34.25-34.41)")
36 09    # vstore 9           # outpixels = image_data__1(dest, "rotate_main (rotate-main.c0: 34.25-34.41)");
10 00    # bipush 0           # 0
36 0A    # vstore 10          # i = 0;
# <455:loop>
A7 00 03 # goto +3            # goto <456:body>
# <456:body>
10 00    # bipush 0           # 0
15 0A    # vload 10           # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <458:cond_true>
A7 00 08 # goto +8            # goto <459:cond_false>
# <458:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <460:cond_end>
# <459:cond_false>
10 00    # bipush 0           # false
# <460:cond_end>
14 33 44 # aldc 13124         # s[13124] = "rotate-main.c0: 36.8-36.30: @loop_invariant annotation failed"
CF       # assert             # assert (0 <= i) [failure message on stack]
15 0A    # vload 10           # i
10 04    # bipush 4           # 4
15 04    # vload 4            # width
68       # imul               # (4 * width)
15 05    # vload 5            # height
68       # imul               # ((4 * width) * height)
A1 00 06 # if_icmplt +6       # if (i < ((4 * width) * height)) goto <461:then>
A7 00 19 # goto +25           # goto <462:else>
# <461:then>
15 09    # vload 9            # outpixels
15 0A    # vload 10           # i
63       # aadds              # &outpixels[i]
15 07    # vload 7            # resultpixels
15 0A    # vload 10           # i
63       # aadds              # &resultpixels[i]
2E       # imload             # resultpixels[i]
4E       # imstore            # outpixels[i] = resultpixels[i];
15 0A    # vload 10           # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 0A    # vstore 10          # i += 1;
A7 00 06 # goto +6            # goto <463:endif>
# <462:else>
A7 00 06 # goto +6            # break
# <463:endif>
A7 FF BF # goto -65           # goto <455:loop>
# <457:exit>
14 33 82 # aldc 13186         # s[13186] = "Saving output..."
14 33 93 # aldc 13203         # s[13203] = "rotate_main (rotate-main.c0: 42.3-42.29)"
B8 00 1E # invokestatic 30    # print__1("Saving output...", "rotate_main (rotate-main.c0: 42.3-42.29)")
57       # pop                # (ignore result)
14 33 BC # aldc 13244         # s[13244] = "rotate_main (rotate-main.c0: 42.31-42.38)"
B8 00 23 # invokestatic 35    # flush__1("rotate_main (rotate-main.c0: 42.31-42.38)")
57       # pop                # (ignore result)
15 08    # vload 8            # dest
15 01    # vload 1            # output
14 33 E6 # aldc 13286         # s[13286] = "rotate_main (rotate-main.c0: 43.3-43.27)"
B8 00 48 # invokestatic 72    # image_save__1(dest, output, "rotate_main (rotate-main.c0: 43.3-43.27)")
57       # pop                # (ignore result)
14 34 0F # aldc 13327         # s[13327] = "done.\n"
14 34 16 # aldc 13334         # s[13334] = "rotate_main (rotate-main.c0: 44.3-44.20)"
B8 00 1E # invokestatic 30    # print__1("done.\n", "rotate_main (rotate-main.c0: 44.3-44.20)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<default_output>
03                # number of arguments = 3
06                # number of local variables = 6
00 79             # code length = 121 bytes
15 00    # vload 0            # input
14 34 3F # aldc 13375         # s[13375] = "default_output (rotate-main.c0: 48.13-48.33)"
B8 00 0E # invokestatic 14    # string_length__1(input, "default_output (rotate-main.c0: 48.13-48.33)")
36 04    # vstore 4           # len = string_length__1(input, "default_output (rotate-main.c0: 48.13-48.33)");
15 04    # vload 4            # len
10 04    # bipush 4           # 4
A3 00 06 # if_icmpgt +6       # if (len > 4) goto <467:and>
A7 00 23 # goto +35           # goto <464:then>
# <467:and>
14 34 6C # aldc 13420         # s[13420] = ".png"
15 00    # vload 0            # input
15 04    # vload 4            # len
10 04    # bipush 4           # 4
64       # isub               # (len - 4)
15 04    # vload 4            # len
14 34 71 # aldc 13425         # s[13425] = "default_output (rotate-main.c0: 49.41-49.70)"
B8 00 11 # invokestatic 17    # string_sub__1(input, (len - 4), len, "default_output (rotate-main.c0: 49.41-49.70)")
14 34 9E # aldc 13470         # s[13470] = "default_output (rotate-main.c0: 49.20-49.71)"
B8 00 12 # invokestatic 18    # string_equal__1(".png", string_sub__1(input, (len - 4), len, "default_output (rotate-main.c0: 49.41-49.70)"), "default_output (rotate-main.c0: 49.20-49.71)")
10 01    # bipush 1           # true
9F 00 0D # if_cmpeq +13       # if (string_equal__1(".png", string_sub__1(input, (len - 4), len, "default_output (rotate-main.c0: 49.41-49.70)"), "default_output (rotate-main.c0: 49.20-49.71)") == true) goto <465:else>
A7 00 03 # goto +3            # goto <464:then>
# <464:then>
14 34 CB # aldc 13515         # s[13515] = "Input file does not end with .png"
BF       # athrow             # error "Input file does not end with .png"
A7 00 03 # goto +3            # goto <466:endif>
# <465:else>
# <466:endif>
15 00    # vload 0            # input
10 00    # bipush 0           # 0
15 04    # vload 4            # len
10 04    # bipush 4           # 4
64       # isub               # (len - 4)
14 34 ED # aldc 13549         # s[13549] = "default_output (rotate-main.c0: 53.16-53.43)"
B8 00 11 # invokestatic 17    # string_sub__1(input, 0, (len - 4), "default_output (rotate-main.c0: 53.16-53.43)")
36 05    # vstore 5           # res = string_sub__1(input, 0, (len - 4), "default_output (rotate-main.c0: 53.16-53.43)");
15 05    # vload 5            # res
14 35 1A # aldc 13594         # s[13594] = "_"
14 35 1C # aldc 13596         # s[13596] = "default_output (rotate-main.c0: 54.9-54.30)"
B8 00 10 # invokestatic 16    # string_join__1(res, "_", "default_output (rotate-main.c0: 54.9-54.30)")
36 05    # vstore 5           # res = string_join__1(res, "_", "default_output (rotate-main.c0: 54.9-54.30)");
15 05    # vload 5            # res
15 01    # vload 1            # name
14 35 48 # aldc 13640         # s[13640] = "default_output (rotate-main.c0: 55.9-55.31)"
B8 00 10 # invokestatic 16    # string_join__1(res, name, "default_output (rotate-main.c0: 55.9-55.31)")
36 05    # vstore 5           # res = string_join__1(res, name, "default_output (rotate-main.c0: 55.9-55.31)");
15 05    # vload 5            # res
14 35 74 # aldc 13684         # s[13684] = ".png"
14 35 79 # aldc 13689         # s[13689] = "default_output (rotate-main.c0: 56.9-56.33)"
B8 00 10 # invokestatic 16    # string_join__1(res, ".png", "default_output (rotate-main.c0: 56.9-56.33)")
36 05    # vstore 5           # res = string_join__1(res, ".png", "default_output (rotate-main.c0: 56.9-56.33)");
15 05    # vload 5            # res
36 03    # vstore 3           # _result = res;
15 03    # vload 3            # _result
B0       # return             # 

00 29             # native count
# native pool
00 02 00 64       # string_join
00 01 00 65       # string_length
00 02 00 5D       # string_charat
00 03 00 66       # string_sub
00 02 00 5F       # string_equal
00 02 00 5E       # string_compare
00 01 00 63       # string_fromint
00 01 00 61       # string_frombool
00 01 00 62       # string_fromchar
00 01 00 69       # string_tolower
00 02 00 67       # string_terminated
00 01 00 68       # string_to_chararray
00 01 00 60       # string_from_chararray
00 01 00 5C       # char_ord
00 01 00 5B       # char_chr
00 01 00 06       # print
00 01 00 0A       # println
00 01 00 09       # printint
00 01 00 07       # printbool
00 01 00 08       # printchar
00 00 00 05       # flush
00 00 00 04       # eof
00 00 00 0B       # readline
00 02 00 00       # args_flag
00 02 00 01       # args_int
00 02 00 03       # args_string
00 00 00 02       # args_parse
00 01 00 57       # parse_bool
00 02 00 58       # parse_int
00 01 00 56       # num_tokens
00 02 00 55       # int_tokens
00 01 00 5A       # parse_tokens
00 02 00 59       # parse_ints
00 01 00 54       # image_width
00 01 00 50       # image_height
00 02 00 4E       # image_create
00 01 00 4D       # image_clone
00 05 00 53       # image_subimage
00 01 00 51       # image_load
00 02 00 52       # image_save
00 01 00 4F       # image_data


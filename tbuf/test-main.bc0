C0 C0 FF EE       # magic number
00 17             # version 11, arch = 1 (64 bits)

00 04             # int pool count
# int pool
7F FF FF FF
80 00 00 00
7F FF FF FF
80 00 00 00

27 B7             # string pool total size
# string pool
72 65 61 64 6C 69 6E 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 63 6F 6E 69 6F 2E 68 30 3A 20 31 34 2E 31 36 2D 31 34 2E 32 31 29 00  # "readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 63 6F 6E 69 6F 2E 68 30 3A 20 31 34 2E 36 2D 31 34 2E 32 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/conio.h0: 14.6-14.22: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 73 69 7A 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 38 2E 31 2D 39 2E 33 33 29 00  # "int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 39 2E 36 2D 39 2E 32 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 9.6-9.27: @ensures annotation failed"
69 6E 74 5F 6D 61 78 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 30 2E 31 2D 31 31 2E 34 32 29 00  # "int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 31 2E 36 2D 31 31 2E 33 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 11.6-11.36: @ensures annotation failed"
69 6E 74 5F 6D 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 32 2E 31 2D 31 33 2E 34 33 29 00  # "int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 33 2E 36 2D 31 33 2E 33 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 13.6-13.37: @ensures annotation failed"
61 62 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 37 2E 31 39 2D 31 37 2E 32 38 29 00  # "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 37 2E 36 2D 31 37 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.h0: 17.6-17.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
61 62 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 36 2E 31 2D 31 39 2E 34 38 29 00  # "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 38 2E 36 2D 31 38 2E 32 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 18.6-18.27: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 39 2E 36 2D 31 39 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 19.6-19.42: @ensures annotation failed"
6D 61 78 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 32 2E 31 2D 32 34 2E 34 39 29 00  # "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 33 2E 36 2D 32 33 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 23.6-23.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 34 2E 36 2D 32 34 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 24.6-24.43: @ensures annotation failed"
6D 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 37 2E 31 2D 32 39 2E 34 39 29 00  # "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 38 2E 36 2D 32 38 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 28.6-28.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 39 2E 36 2D 32 39 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 29.6-29.43: @ensures annotation failed"
73 74 72 69 6E 67 5F 63 68 61 72 61 74 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 31 39 2E 33 33 2D 31 39 2E 34 39 29 00  # "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 31 39 2E 36 2D 31 39 2E 35 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 19.6-19.50: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 6A 6F 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 33 2E 31 34 2D 32 33 2E 33 36 29 00  # "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)"
73 74 72 69 6E 67 5F 6A 6F 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 34 2E 31 39 2D 32 34 2E 33 35 29 00  # "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)"
73 74 72 69 6E 67 5F 6A 6F 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 34 2E 33 38 2D 32 34 2E 35 34 29 00  # "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 33 2E 36 2D 32 34 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 23.6-24.55: @ensures annotation failed"
73 74 72 69 6E 67 5F 73 75 62 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 31 2E 35 32 2D 33 31 2E 36 38 29 00  # "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 31 2E 36 2D 33 31 2E 36 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 31.6-31.69: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 73 75 62 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 32 2E 31 34 2D 33 32 2E 33 36 29 00  # "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 32 2E 36 2D 33 32 2E 35 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 32.6-32.52: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 37 2E 36 2D 33 37 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 37.6-37.44: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 33 2E 36 2D 34 33 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 43.6-43.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 66 72 6F 6D 63 68 61 72 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 34 2E 31 34 2D 34 34 2E 33 36 29 00  # "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 34 2E 36 2D 34 34 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 44.6-44.42: @ensures annotation failed"
73 74 72 69 6E 67 5F 66 72 6F 6D 63 68 61 72 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 35 2E 31 34 2D 34 35 2E 33 39 29 00  # "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 35 2E 36 2D 34 35 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 45.6-45.45: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 32 2E 36 2D 35 32 2E 34 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 52.6-52.41: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 74 6F 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 36 2E 33 34 2D 35 36 2E 35 30 29 00  # "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 36 2E 36 2D 35 36 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 56.6-56.55: @ensures annotation failed"
73 74 72 69 6E 67 5F 74 6F 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 37 2E 34 31 2D 35 37 2E 35 37 29 00  # "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)"
73 74 72 69 6E 67 5F 74 6F 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 37 2E 31 34 2D 35 37 2E 36 32 29 00  # "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 37 2E 36 2D 35 37 2E 36 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 57.6-57.63: @ensures annotation failed"
73 74 72 69 6E 67 5F 66 72 6F 6D 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 32 2E 31 35 2D 36 32 2E 34 37 29 00  # "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 32 2E 36 2D 36 32 2E 34 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 62.6-62.48: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 66 72 6F 6D 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 33 2E 31 34 2D 36 33 2E 33 36 29 00  # "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 33 2E 36 2D 36 33 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 63.6-63.55: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 37 2E 36 2D 36 37 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 67.6-67.45: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 39 2E 36 2D 36 39 2E 33 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 69.6-69.34: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 31 33 2E 34 2D 31 33 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 13.4-13.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 31 34 2E 34 2D 31 34 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 14.4-14.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 31 2E 34 2D 32 31 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 21.4-21.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 32 2E 34 2D 32 32 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 22.4-22.41: @ensures annotation failed"
61 62 73 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 39 2E 31 37 2D 32 39 2E 32 36 29 00  # "abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 39 2E 34 2D 32 39 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.c0: 29.4-29.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 33 30 2E 34 2D 33 30 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 30.4-30.25: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 33 37 2E 34 2D 33 37 2E 33 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.c0: 37.4-37.30: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 30 2E 32 31 2D 34 30 2E 33 34 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 30 2E 31 32 2D 34 30 2E 33 39 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 32 2E 32 31 2D 34 32 2E 33 34 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 32 2E 31 32 2D 34 32 2E 34 34 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 35 31 2E 31 38 2D 35 31 2E 32 38 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 35 35 2E 38 2D 35 35 2E 34 35 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 55.8-55.45: @loop_invariant annotation failed"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 35 37 2E 32 33 2D 35 37 2E 34 33 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 36 30 2E 31 30 2D 36 30 2E 33 34 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 39 2E 31 32 2D 34 39 2E 33 34 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 39 2E 34 30 2D 34 39 2E 35 30 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 39 2E 34 2D 34 39 2E 35 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 49.4-49.51: @ensures annotation failed"
69 73 5F 74 62 75 66 20 28 74 62 75 66 2E 63 30 3A 20 39 33 2E 31 32 2D 39 33 2E 34 34 29 00  # "is_tbuf (tbuf.c0: 93.12-93.44)"
69 73 5F 74 62 75 66 20 28 74 62 75 66 2E 63 30 3A 20 39 34 2E 31 32 2D 39 34 2E 35 36 29 00  # "is_tbuf (tbuf.c0: 94.12-94.56)"
74 62 75 66 5F 61 74 5F 6C 65 66 74 20 28 74 62 75 66 2E 63 30 3A 20 39 39 2E 31 33 2D 39 39 2E 32 33 29 00  # "tbuf_at_left (tbuf.c0: 99.13-99.23)"
74 62 75 66 2E 63 30 3A 20 39 39 2E 34 2D 39 39 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0: 99.4-99.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 5F 61 74 5F 72 69 67 68 74 20 28 74 62 75 66 2E 63 30 3A 20 31 30 35 2E 31 33 2D 31 30 35 2E 32 33 29 00  # "tbuf_at_right (tbuf.c0: 105.13-105.23)"
74 62 75 66 2E 63 30 3A 20 31 30 35 2E 34 2D 31 30 35 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0: 105.4-105.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 5F 6E 65 77 20 28 74 62 75 66 2E 63 30 3A 20 31 31 32 2E 31 32 2D 31 31 32 2E 32 38 29 00  # "tbuf_new (tbuf.c0: 112.12-112.28)"
74 62 75 66 2E 63 30 3A 20 31 31 32 2E 34 2D 31 31 32 2E 32 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0: 112.4-112.29: @ensures annotation failed"
74 62 75 66 5F 66 6F 72 77 61 72 64 20 28 74 62 75 66 2E 63 30 3A 20 31 32 36 2E 31 33 2D 31 32 36 2E 32 33 29 00  # "tbuf_forward (tbuf.c0: 126.13-126.23)"
74 62 75 66 2E 63 30 3A 20 31 32 36 2E 34 2D 31 32 36 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0: 126.4-126.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 5F 66 6F 72 77 61 72 64 20 28 74 62 75 66 2E 63 30 3A 20 31 32 37 2E 31 34 2D 31 32 37 2E 33 30 29 00  # "tbuf_forward (tbuf.c0: 127.14-127.30)"
74 62 75 66 2E 63 30 3A 20 31 32 37 2E 34 2D 31 32 37 2E 33 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0: 127.4-127.31: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 5F 66 6F 72 77 61 72 64 20 28 74 62 75 66 2E 63 30 3A 20 31 32 38 2E 31 32 2D 31 32 38 2E 32 32 29 00  # "tbuf_forward (tbuf.c0: 128.12-128.22)"
74 62 75 66 2E 63 30 3A 20 31 32 38 2E 34 2D 31 32 38 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0: 128.4-128.23: @ensures annotation failed"
74 62 75 66 5F 62 61 63 6B 77 61 72 64 20 28 74 62 75 66 2E 63 30 3A 20 31 33 34 2E 31 33 2D 31 33 34 2E 32 33 29 00  # "tbuf_backward (tbuf.c0: 134.13-134.23)"
74 62 75 66 2E 63 30 3A 20 31 33 34 2E 34 2D 31 33 34 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0: 134.4-134.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 5F 62 61 63 6B 77 61 72 64 20 28 74 62 75 66 2E 63 30 3A 20 31 33 35 2E 31 34 2D 31 33 35 2E 32 39 29 00  # "tbuf_backward (tbuf.c0: 135.14-135.29)"
74 62 75 66 2E 63 30 3A 20 31 33 35 2E 34 2D 31 33 35 2E 33 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0: 135.4-135.30: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 5F 62 61 63 6B 77 61 72 64 20 28 74 62 75 66 2E 63 30 3A 20 31 33 36 2E 31 32 2D 31 33 36 2E 32 32 29 00  # "tbuf_backward (tbuf.c0: 136.12-136.22)"
74 62 75 66 2E 63 30 3A 20 31 33 36 2E 34 2D 31 33 36 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0: 136.4-136.23: @ensures annotation failed"
74 62 75 66 5F 69 6E 73 65 72 74 20 28 74 62 75 66 2E 63 30 3A 20 31 34 32 2E 31 33 2D 31 34 32 2E 32 33 29 00  # "tbuf_insert (tbuf.c0: 142.13-142.23)"
74 62 75 66 2E 63 30 3A 20 31 34 32 2E 34 2D 31 34 32 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0: 142.4-142.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 5F 69 6E 73 65 72 74 20 28 74 62 75 66 2E 63 30 3A 20 31 34 33 2E 31 32 2D 31 34 33 2E 32 32 29 00  # "tbuf_insert (tbuf.c0: 143.12-143.22)"
74 62 75 66 2E 63 30 3A 20 31 34 33 2E 34 2D 31 34 33 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0: 143.4-143.23: @ensures annotation failed"
74 62 75 66 5F 64 65 6C 65 74 65 20 28 74 62 75 66 2E 63 30 3A 20 31 35 35 2E 31 33 2D 31 35 35 2E 32 33 29 00  # "tbuf_delete (tbuf.c0: 155.13-155.23)"
74 62 75 66 2E 63 30 3A 20 31 35 35 2E 34 2D 31 35 35 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0: 155.4-155.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 5F 64 65 6C 65 74 65 20 28 74 62 75 66 2E 63 30 3A 20 31 35 36 2E 31 34 2D 31 35 36 2E 32 39 29 00  # "tbuf_delete (tbuf.c0: 156.14-156.29)"
74 62 75 66 2E 63 30 3A 20 31 35 36 2E 34 2D 31 35 36 2E 33 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0: 156.4-156.30: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 5F 64 65 6C 65 74 65 20 28 74 62 75 66 2E 63 30 3A 20 31 35 37 2E 31 32 2D 31 35 37 2E 32 32 29 00  # "tbuf_delete (tbuf.c0: 157.12-157.22)"
74 62 75 66 2E 63 30 3A 20 31 35 37 2E 34 2D 31 35 37 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0: 157.4-157.23: @ensures annotation failed"
74 62 75 66 5F 72 6F 77 20 28 74 62 75 66 2E 63 30 3A 20 31 36 36 2E 31 33 2D 31 36 36 2E 32 33 29 00  # "tbuf_row (tbuf.c0: 166.13-166.23)"
74 62 75 66 2E 63 30 3A 20 31 36 36 2E 34 2D 31 36 36 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0: 166.4-166.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 5F 63 6F 6C 20 28 74 62 75 66 2E 63 30 3A 20 31 38 33 2E 31 33 2D 31 38 33 2E 32 33 29 00  # "tbuf_col (tbuf.c0: 183.13-183.23)"
74 62 75 66 2E 63 30 3A 20 31 38 33 2E 34 2D 31 38 33 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0: 183.4-183.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
72 6F 77 20 28 74 62 75 66 2D 74 65 73 74 2E 63 30 3A 20 32 31 2E 32 37 2D 32 31 2E 33 38 29 00  # "row (tbuf-test.c0: 21.27-21.38)"
63 6F 6C 20 28 74 62 75 66 2D 74 65 73 74 2E 63 30 3A 20 32 32 2E 32 37 2D 32 32 2E 33 38 29 00  # "col (tbuf-test.c0: 22.27-22.38)"
6E 65 77 20 28 74 62 75 66 2D 74 65 73 74 2E 63 30 3A 20 32 33 2E 32 32 2D 32 33 2E 33 32 29 00  # "new (tbuf-test.c0: 23.22-23.32)"
66 6F 72 77 61 72 64 20 28 74 62 75 66 2D 74 65 73 74 2E 63 30 3A 20 32 34 2E 32 35 2D 32 34 2E 34 30 29 00  # "forward (tbuf-test.c0: 24.25-24.40)"
62 61 63 6B 77 61 72 64 20 28 74 62 75 66 2D 74 65 73 74 2E 63 30 3A 20 32 35 2E 32 36 2D 32 35 2E 34 32 29 00  # "backward (tbuf-test.c0: 25.26-25.42)"
69 6E 73 65 72 74 20 28 74 62 75 66 2D 74 65 73 74 2E 63 30 3A 20 32 36 2E 33 32 2D 32 36 2E 34 39 29 00  # "insert (tbuf-test.c0: 26.32-26.49)"
64 65 6C 65 74 65 20 28 74 62 75 66 2D 74 65 73 74 2E 63 30 3A 20 32 37 2E 32 34 2D 32 37 2E 33 38 29 00  # "delete (tbuf-test.c0: 27.24-27.38)"
53 54 41 52 54 00  # "START"
76 69 73 75 61 6C 69 7A 65 5F 74 62 75 66 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 32 32 2E 33 2D 32 32 2E 31 38 29 00  # "visualize_tbuf (test-main.c0: 22.3-22.18)"
20 3C 2D 2D 3E 20 00  # " <--> "
76 69 73 75 61 6C 69 7A 65 5F 74 62 75 66 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 32 34 2E 35 2D 32 34 2E 32 31 29 00  # "visualize_tbuf (test-main.c0: 24.5-24.21)"
5F 00  # "_"
76 69 73 75 61 6C 69 7A 65 5F 74 62 75 66 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 32 35 2E 32 35 2D 32 35 2E 33 36 29 00  # "visualize_tbuf (test-main.c0: 25.25-25.36)"
27 00  # "\'"
76 69 73 75 61 6C 69 7A 65 5F 74 62 75 66 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 32 36 2E 35 2D 32 36 2E 31 36 29 00  # "visualize_tbuf (test-main.c0: 26.5-26.16)"
5C 6E 00  # "\\n"
76 69 73 75 61 6C 69 7A 65 5F 74 62 75 66 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 32 37 2E 32 36 2D 32 37 2E 33 39 29 00  # "visualize_tbuf (test-main.c0: 27.26-27.39)"
00  # ""
76 69 73 75 61 6C 69 7A 65 5F 74 62 75 66 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 32 38 2E 31 30 2D 32 38 2E 33 31 29 00  # "visualize_tbuf (test-main.c0: 28.10-28.31)"
76 69 73 75 61 6C 69 7A 65 5F 74 62 75 66 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 32 38 2E 31 30 2D 32 38 2E 33 31 29 00  # "visualize_tbuf (test-main.c0: 28.10-28.31)"
00  # ""
76 69 73 75 61 6C 69 7A 65 5F 74 62 75 66 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 32 38 2E 31 30 2D 32 38 2E 33 31 29 00  # "visualize_tbuf (test-main.c0: 28.10-28.31)"
27 00  # "\'"
76 69 73 75 61 6C 69 7A 65 5F 74 62 75 66 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 32 39 2E 35 2D 32 39 2E 31 36 29 00  # "visualize_tbuf (test-main.c0: 29.5-29.16)"
5F 00  # "_"
76 69 73 75 61 6C 69 7A 65 5F 74 62 75 66 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 33 30 2E 32 35 2D 33 30 2E 33 36 29 00  # "visualize_tbuf (test-main.c0: 30.25-30.36)"
20 3C 2D 2D 3E 20 5F 45 4E 44 5F 0A 00  # " <--> _END_\n"
76 69 73 75 61 6C 69 7A 65 5F 74 62 75 66 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 33 33 2E 32 38 2D 33 33 2E 35 31 29 00  # "visualize_tbuf (test-main.c0: 33.28-33.51)"
20 3C 2D 2D 3E 20 45 4E 44 0A 00  # " <--> END\n"
76 69 73 75 61 6C 69 7A 65 5F 74 62 75 66 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 33 34 2E 38 2D 33 34 2E 32 39 29 00  # "visualize_tbuf (test-main.c0: 34.8-34.29)"
3C 3D 20 20 20 3A 20 00  # "<=   : "
70 72 6F 63 65 73 73 5F 63 68 61 72 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 34 30 2E 35 2D 34 30 2E 32 32 29 00  # "process_char (test-main.c0: 40.5-40.22)"
70 72 6F 63 65 73 73 5F 63 68 61 72 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 34 31 2E 35 2D 34 31 2E 31 38 29 00  # "process_char (test-main.c0: 41.5-41.18)"
3D 3E 20 20 20 3A 20 00  # "=>   : "
70 72 6F 63 65 73 73 5F 63 68 61 72 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 34 33 2E 35 2D 34 33 2E 32 32 29 00  # "process_char (test-main.c0: 43.5-43.22)"
70 72 6F 63 65 73 73 5F 63 68 61 72 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 34 34 2E 35 2D 34 34 2E 31 37 29 00  # "process_char (test-main.c0: 44.5-44.17)"
64 65 6C 20 20 3A 20 00  # "del  : "
70 72 6F 63 65 73 73 5F 63 68 61 72 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 34 36 2E 35 2D 34 36 2E 32 32 29 00  # "process_char (test-main.c0: 46.5-46.22)"
70 72 6F 63 65 73 73 5F 63 68 61 72 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 34 37 2E 35 2D 34 37 2E 31 36 29 00  # "process_char (test-main.c0: 47.5-47.16)"
65 6E 74 65 72 3A 20 00  # "enter: "
70 72 6F 63 65 73 73 5F 63 68 61 72 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 34 39 2E 35 2D 34 39 2E 32 32 29 00  # "process_char (test-main.c0: 49.5-49.22)"
70 72 6F 63 65 73 73 5F 63 68 61 72 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 35 30 2E 35 2D 35 30 2E 32 31 29 00  # "process_char (test-main.c0: 50.5-50.21)"
27 00  # "\'"
70 72 6F 63 65 73 73 5F 63 68 61 72 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 35 32 2E 35 2D 35 32 2E 32 36 29 00  # "process_char (test-main.c0: 52.5-52.26)"
70 72 6F 63 65 73 73 5F 63 68 61 72 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 35 32 2E 35 2D 35 32 2E 32 36 29 00  # "process_char (test-main.c0: 52.5-52.26)"
27 20 20 3A 20 00  # "\'  : "
70 72 6F 63 65 73 73 5F 63 68 61 72 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 35 32 2E 35 2D 35 32 2E 32 36 29 00  # "process_char (test-main.c0: 52.5-52.26)"
70 72 6F 63 65 73 73 5F 63 68 61 72 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 35 33 2E 35 2D 35 33 2E 31 38 29 00  # "process_char (test-main.c0: 53.5-53.18)"
20 20 20 20 20 20 20 50 6F 73 69 74 69 6F 6E 3A 20 28 00  # "       Position: ("
76 69 73 75 61 6C 69 7A 65 5F 70 6F 73 69 74 69 6F 6E 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 35 38 2E 33 2D 35 38 2E 35 39 29 00  # "visualize_position (test-main.c0: 58.3-58.59)"
76 69 73 75 61 6C 69 7A 65 5F 70 6F 73 69 74 69 6F 6E 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 35 38 2E 34 30 2D 35 38 2E 34 38 29 00  # "visualize_position (test-main.c0: 58.40-58.48)"
76 69 73 75 61 6C 69 7A 65 5F 70 6F 73 69 74 69 6F 6E 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 35 38 2E 33 2D 35 38 2E 35 39 29 00  # "visualize_position (test-main.c0: 58.3-58.59)"
2C 00  # ","
76 69 73 75 61 6C 69 7A 65 5F 70 6F 73 69 74 69 6F 6E 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 35 38 2E 33 2D 35 38 2E 35 39 29 00  # "visualize_position (test-main.c0: 58.3-58.59)"
76 69 73 75 61 6C 69 7A 65 5F 70 6F 73 69 74 69 6F 6E 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 35 38 2E 35 30 2D 35 38 2E 35 38 29 00  # "visualize_position (test-main.c0: 58.50-58.58)"
76 69 73 75 61 6C 69 7A 65 5F 70 6F 73 69 74 69 6F 6E 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 35 38 2E 33 2D 35 38 2E 35 39 29 00  # "visualize_position (test-main.c0: 58.3-58.59)"
29 0A 00  # ")\n"
76 69 73 75 61 6C 69 7A 65 5F 70 6F 73 69 74 69 6F 6E 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 35 38 2E 33 2D 35 38 2E 35 39 29 00  # "visualize_position (test-main.c0: 58.3-58.59)"
70 72 6F 63 65 73 73 5F 73 74 72 69 6E 67 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 36 32 2E 31 35 2D 36 32 2E 33 31 29 00  # "process_string (test-main.c0: 62.15-62.31)"
00  # ""
70 72 6F 63 65 73 73 5F 73 74 72 69 6E 67 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 36 34 2E 35 2D 36 34 2E 35 31 29 00  # "process_string (test-main.c0: 64.5-64.51)"
70 72 6F 63 65 73 73 73 74 72 69 6E 67 2D 2D 20 69 20 69 73 00  # "processstring-- i is"
70 72 6F 63 65 73 73 5F 73 74 72 69 6E 67 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 36 34 2E 35 2D 36 34 2E 35 31 29 00  # "process_string (test-main.c0: 64.5-64.51)"
00  # ""
70 72 6F 63 65 73 73 5F 73 74 72 69 6E 67 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 36 34 2E 35 2D 36 34 2E 35 31 29 00  # "process_string (test-main.c0: 64.5-64.51)"
70 72 6F 63 65 73 73 5F 73 74 72 69 6E 67 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 36 34 2E 35 2D 36 34 2E 35 31 29 00  # "process_string (test-main.c0: 64.5-64.51)"
00  # ""
70 72 6F 63 65 73 73 5F 73 74 72 69 6E 67 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 36 34 2E 35 2D 36 34 2E 35 31 29 00  # "process_string (test-main.c0: 64.5-64.51)"
0A 00  # "\n"
70 72 6F 63 65 73 73 5F 73 74 72 69 6E 67 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 36 34 2E 35 2D 36 34 2E 35 31 29 00  # "process_string (test-main.c0: 64.5-64.51)"
00  # ""
70 72 6F 63 65 73 73 5F 73 74 72 69 6E 67 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 36 34 2E 35 2D 36 34 2E 35 31 29 00  # "process_string (test-main.c0: 64.5-64.51)"
70 72 6F 63 65 73 73 5F 73 74 72 69 6E 67 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 36 35 2E 32 33 2D 36 35 2E 34 32 29 00  # "process_string (test-main.c0: 65.23-65.42)"
70 72 6F 63 65 73 73 5F 73 74 72 69 6E 67 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 36 35 2E 35 2D 36 35 2E 34 33 29 00  # "process_string (test-main.c0: 65.5-65.43)"
70 72 6F 63 65 73 73 5F 73 74 72 69 6E 67 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 36 36 2E 32 30 2D 36 36 2E 33 37 29 00  # "process_string (test-main.c0: 66.20-66.37)"
70 72 6F 63 65 73 73 5F 73 74 72 69 6E 67 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 36 36 2E 35 2D 36 36 2E 33 38 29 00  # "process_string (test-main.c0: 66.5-66.38)"
70 72 6F 63 65 73 73 5F 73 74 72 69 6E 67 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 36 37 2E 35 2D 36 37 2E 32 38 29 00  # "process_string (test-main.c0: 67.5-67.28)"
74 65 73 74 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 37 33 2E 31 38 2D 37 33 2E 32 33 29 00  # "test (test-main.c0: 73.18-73.23)"
56 69 73 75 61 6C 69 7A 69 6E 67 20 61 6E 20 69 6E 69 74 69 61 6C 6C 79 2D 65 6D 70 74 79 20 74 65 78 74 20 62 75 66 66 65 72 2E 0A 00  # "Visualizing an initially-empty text buffer.\n"
74 65 73 74 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 37 34 2E 33 2D 37 34 2E 35 38 29 00  # "test (test-main.c0: 74.3-74.58)"
54 68 65 20 27 3C 27 20 63 68 61 72 61 63 74 65 72 20 6D 69 6D 69 63 73 20 67 6F 69 6E 67 20 62 61 63 6B 77 61 72 64 73 20 28 6C 65 66 74 20 61 72 72 6F 77 20 6B 65 79 29 0A 00  # "The \'<\' character mimics going backwards (left arrow key)\n"
74 65 73 74 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 37 35 2E 33 2D 37 35 2E 37 32 29 00  # "test (test-main.c0: 75.3-75.72)"
54 68 65 20 27 3E 27 20 63 68 61 72 61 63 74 65 72 20 6D 69 6D 69 63 73 20 67 6F 69 6E 67 20 66 6F 72 77 61 72 64 73 20 28 72 69 67 68 74 20 61 72 72 6F 77 20 6B 65 79 29 0A 00  # "The \'>\' character mimics going forwards (right arrow key)\n"
74 65 73 74 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 37 36 2E 33 2D 37 36 2E 37 32 29 00  # "test (test-main.c0: 76.3-76.72)"
54 68 65 20 27 5E 27 20 63 68 61 72 61 63 74 65 72 20 6D 69 6D 69 63 73 20 64 65 6C 65 74 69 6F 6E 20 28 64 65 6C 65 74 65 20 6B 65 79 29 0A 00  # "The \'^\' character mimics deletion (delete key)\n"
74 65 73 74 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 37 37 2E 33 2D 37 37 2E 36 31 29 00  # "test (test-main.c0: 77.3-77.61)"
54 68 65 20 27 40 27 20 63 68 61 72 61 63 74 65 72 20 6D 69 6D 69 63 73 20 61 20 6E 65 77 6C 69 6E 65 20 28 65 6E 74 65 72 20 6B 65 79 29 0A 00  # "The \'@\' character mimics a newline (enter key)\n"
74 65 73 74 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 37 38 2E 33 2D 37 38 2E 36 31 29 00  # "test (test-main.c0: 78.3-78.61)"
41 6C 6C 20 6F 74 68 65 72 20 63 68 61 72 61 63 74 65 72 73 20 6A 75 73 74 20 69 6E 73 65 72 74 20 74 68 61 74 20 63 68 61 72 61 63 74 65 72 0A 0A 00  # "All other characters just insert that character\n\n"
74 65 73 74 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 37 39 2E 33 2D 37 39 2E 36 34 29 00  # "test (test-main.c0: 79.3-79.64)"
47 69 76 65 20 69 6E 69 74 69 61 6C 20 69 6E 70 75 74 20 28 65 6D 70 74 79 20 6C 69 6E 65 20 71 75 69 74 73 29 3A 20 00  # "Give initial input (empty line quits): "
74 65 73 74 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 38 30 2E 33 2D 38 30 2E 35 32 29 00  # "test (test-main.c0: 80.3-80.52)"
74 65 73 74 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 38 31 2E 33 2D 38 31 2E 31 30 29 00  # "test (test-main.c0: 81.3-81.10)"
74 65 73 74 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 38 33 2E 31 34 2D 38 33 2E 32 34 29 00  # "test (test-main.c0: 83.14-83.24)"
00  # ""
74 65 73 74 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 38 35 2E 31 30 2D 38 35 2E 32 39 29 00  # "test (test-main.c0: 85.10-85.29)"
74 65 73 74 2D 2D 20 6E 65 78 74 20 6C 6F 6F 70 0A 00  # "test-- next loop\n"
74 65 73 74 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 38 36 2E 35 2D 38 36 2E 33 32 29 00  # "test (test-main.c0: 86.5-86.32)"
20 20 20 20 20 20 20 00  # "       "
74 65 73 74 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 38 37 2E 35 2D 38 37 2E 32 32 29 00  # "test (test-main.c0: 87.5-87.22)"
74 65 73 74 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 38 38 2E 32 30 2D 38 38 2E 33 37 29 00  # "test (test-main.c0: 88.20-88.37)"
74 65 73 74 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 38 38 2E 35 2D 38 38 2E 33 38 29 00  # "test (test-main.c0: 88.5-88.38)"
74 65 73 74 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 38 39 2E 35 2D 38 39 2E 32 38 29 00  # "test (test-main.c0: 89.5-89.28)"
74 65 73 74 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 39 30 2E 35 2D 39 30 2E 32 37 29 00  # "test (test-main.c0: 90.5-90.27)"
44 6F 6E 65 2E 20 4D 6F 72 65 20 69 6E 70 75 74 3F 20 28 65 6D 70 74 79 20 6C 69 6E 65 20 71 75 69 74 73 29 3A 20 00  # "Done. More input\? (empty line quits): "
74 65 73 74 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 39 31 2E 35 2D 39 31 2E 35 33 29 00  # "test (test-main.c0: 91.5-91.53)"
74 65 73 74 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 39 32 2E 35 2D 39 32 2E 31 32 29 00  # "test (test-main.c0: 92.5-92.12)"
74 65 73 74 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 39 33 2E 39 2D 39 33 2E 31 39 29 00  # "test (test-main.c0: 93.9-93.19)"
74 65 73 74 2D 2D 20 65 76 65 72 79 74 68 69 6E 67 20 69 73 20 64 6F 6E 65 0A 00  # "test-- everything is done\n"
74 65 73 74 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 39 35 2E 33 2D 39 35 2E 33 39 29 00  # "test (test-main.c0: 95.3-95.39)"
28 70 72 6F 67 72 61 6D 20 73 74 61 72 74 29 00  # "(program start)"
6D 61 69 6E 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 39 39 2E 33 2D 39 39 2E 39 29 00  # "main (test-main.c0: 99.3-99.9)"
47 6F 6F 64 62 79 65 2E 0A 00  # "Goodbye.\n"
6D 61 69 6E 20 28 74 65 73 74 2D 6D 61 69 6E 2E 63 30 3A 20 31 30 30 2E 33 2D 31 30 30 2E 32 33 29 00  # "main (test-main.c0: 100.3-100.23)"

00 3F             # function count
# function_pool

#<main>
00                # number of arguments = 0
02                # number of local variables = 2
00 1D             # code length = 29 bytes
14 27 5C # aldc 10076         # s[10076] = "(program start)"
36 00    # vstore 0           # _caller = "(program start)";
14 27 6C # aldc 10092         # s[10092] = "main (test-main.c0: 99.3-99.9)"
B8 00 3E # invokestatic 62    # test("main (test-main.c0: 99.3-99.9)")
57       # pop                # (ignore result)
14 27 8B # aldc 10123         # s[10123] = "Goodbye.\n"
14 27 95 # aldc 10133         # s[10133] = "main (test-main.c0: 100.3-100.23)"
B8 00 01 # invokestatic 1     # print__1("Goodbye.\n", "main (test-main.c0: 100.3-100.23)")
57       # pop                # (ignore result)
10 00    # bipush 0           # 0
36 01    # vstore 1           # _result = 0;
15 01    # vload 1            # _result
B0       # return             # 


#<print__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # s
B7 00 00 # invokenative 0     # print(s)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<println__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # s
B7 00 01 # invokenative 1     # println(s)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printint__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # i
B7 00 02 # invokenative 2     # printint(i)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printbool__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # b
B7 00 03 # invokenative 3     # printbool(b)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printchar__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # c
B7 00 04 # invokenative 4     # printchar(c)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<flush__1>
01                # number of arguments = 1
01                # number of local variables = 1
00 0A             # code length = 10 bytes
B7 00 05 # invokenative 5     # flush()
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<eof__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 08             # code length = 8 bytes
B7 00 06 # invokenative 6     # eof()
36 01    # vstore 1           # _result = eof();
15 01    # vload 1            # _result
B0       # return             # 


#<readline__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 20             # code length = 32 bytes
14 00 00 # aldc 0             # s[0] = "readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)"
B8 00 07 # invokestatic 7     # eof__1("readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)")
10 01    # bipush 1           # 
82       # ixor               # !(eof__1("readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)"))
14 00 42 # aldc 66            # s[66] = "/afs/andrew/course/15/122/lib/conio.h0: 14.6-14.22: @requires annotation failed\n"
15 00    # vload 0            # _caller
14 00 93 # aldc 147           # s[147] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/conio.h0: 14.6-14.22: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(eof__1("readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)")) [failure message on stack]
B7 00 08 # invokenative 8     # readline()
36 01    # vstore 1           # _result = readline();
15 01    # vload 1            # _result
B0       # return             # 


#<int_size>
01                # number of arguments = 1
02                # number of local variables = 2
00 07             # code length = 7 bytes
10 04    # bipush 4           # 4
36 01    # vstore 1           # _result = 4;
15 01    # vload 1            # _result
B0       # return             # 


#<int_size__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 20             # code length = 32 bytes
14 00 A5 # aldc 165           # s[165] = "int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)"
B8 00 09 # invokestatic 9     # int_size("int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)")
36 01    # vstore 1           # _result = int_size("int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)");
15 01    # vload 1            # _result
10 04    # bipush 4           # 4
9F 00 06 # if_cmpeq +6        # if (_result == 4) goto <00:cond_true>
A7 00 08 # goto +8            # goto <01:cond_false>
# <00:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <02:cond_end>
# <01:cond_false>
10 00    # bipush 0           # false
# <02:cond_end>
14 00 E3 # aldc 227           # s[227] = "/afs/andrew/course/15/122/lib/util.h0: 9.6-9.27: @ensures annotation failed"
CF       # assert             # assert (_result == 4) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<int_max>
01                # number of arguments = 1
02                # number of local variables = 2
00 08             # code length = 8 bytes
13 00 02 # ildc 2             # c[2] = 2147483647
36 01    # vstore 1           # _result = 2147483647;
15 01    # vload 1            # _result
B0       # return             # 


#<int_max__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 21             # code length = 33 bytes
14 01 2F # aldc 303           # s[303] = "int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)"
B8 00 0B # invokestatic 11    # int_max("int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)")
36 01    # vstore 1           # _result = int_max("int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)");
15 01    # vload 1            # _result
13 00 00 # ildc 0             # c[0] = 2147483647
9F 00 06 # if_cmpeq +6        # if (_result == 2147483647) goto <03:cond_true>
A7 00 08 # goto +8            # goto <04:cond_false>
# <03:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <05:cond_end>
# <04:cond_false>
10 00    # bipush 0           # false
# <05:cond_end>
14 01 6E # aldc 366           # s[366] = "/afs/andrew/course/15/122/lib/util.h0: 11.6-11.36: @ensures annotation failed"
CF       # assert             # assert (_result == 2147483647) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<int_min>
01                # number of arguments = 1
02                # number of local variables = 2
00 08             # code length = 8 bytes
13 00 03 # ildc 3             # c[3] = -2147483648
36 01    # vstore 1           # _result = -2147483648;
15 01    # vload 1            # _result
B0       # return             # 


#<int_min__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 21             # code length = 33 bytes
14 01 BC # aldc 444           # s[444] = "int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)"
B8 00 0D # invokestatic 13    # int_min("int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)")
36 01    # vstore 1           # _result = int_min("int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)");
15 01    # vload 1            # _result
13 00 01 # ildc 1             # c[1] = -2147483648
9F 00 06 # if_cmpeq +6        # if (_result == -(-2147483648)) goto <06:cond_true>
A7 00 08 # goto +8            # goto <07:cond_false>
# <06:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <08:cond_end>
# <07:cond_false>
10 00    # bipush 0           # false
# <08:cond_end>
14 01 FB # aldc 507           # s[507] = "/afs/andrew/course/15/122/lib/util.h0: 13.6-13.37: @ensures annotation failed"
CF       # assert             # assert (_result == -(-2147483648)) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<abs>
02                # number of arguments = 2
03                # number of local variables = 3
00 52             # code length = 82 bytes
15 00    # vload 0            # x
14 0F 8E # aldc 3982          # s[3982] = "abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)"
B8 00 0E # invokestatic 14    # int_min__1("abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)")
A3 00 06 # if_icmpgt +6       # if (x > int_min__1("abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)")) goto <133:cond_true>
A7 00 08 # goto +8            # goto <134:cond_false>
# <133:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <135:cond_end>
# <134:cond_false>
10 00    # bipush 0           # false
# <135:cond_end>
14 0F C7 # aldc 4039          # s[4039] = "/afs/andrew/course/15/122/lib/util.c0: 29.4-29.27: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 10 17 # aldc 4119          # s[4119] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/util.c0: 29.4-29.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (x > int_min__1("abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)")) [failure message on stack]
15 00    # vload 0            # x
10 00    # bipush 0           # 0
A1 00 06 # if_icmplt +6       # if (x < 0) goto <136:cond_true>
A7 00 0B # goto +11           # goto <137:cond_false>
# <136:cond_true>
10 00    # bipush 0           # 
15 00    # vload 0            # x
64       # isub               # -(x)
A7 00 05 # goto +5            # goto <138:cond_end>
# <137:cond_false>
15 00    # vload 0            # x
# <138:cond_end>
36 02    # vstore 2           # _result = ((x < 0) ? -(x) : x);
15 02    # vload 2            # _result
10 00    # bipush 0           # 0
A2 00 06 # if_icmpge +6       # if (_result >= 0) goto <139:cond_true>
A7 00 08 # goto +8            # goto <140:cond_false>
# <139:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <141:cond_end>
# <140:cond_false>
10 00    # bipush 0           # false
# <141:cond_end>
14 10 29 # aldc 4137          # s[4137] = "/afs/andrew/course/15/122/lib/util.c0: 30.4-30.25: @ensures annotation failed"
CF       # assert             # assert (_result >= 0) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<abs__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 6D             # code length = 109 bytes
15 00    # vload 0            # x
14 02 49 # aldc 585           # s[585] = "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)"
B8 00 0E # invokestatic 14    # int_min__1("abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)")
A3 00 06 # if_icmpgt +6       # if (x > int_min__1("abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)")) goto <09:cond_true>
A7 00 08 # goto +8            # goto <10:cond_false>
# <09:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <11:cond_end>
# <10:cond_false>
10 00    # bipush 0           # false
# <11:cond_end>
14 02 85 # aldc 645           # s[645] = "/afs/andrew/course/15/122/lib/util.h0: 17.6-17.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 02 D5 # aldc 725           # s[725] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/util.h0: 17.6-17.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (x > int_min__1("abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)")) [failure message on stack]
15 00    # vload 0            # x
14 02 E7 # aldc 743           # s[743] = "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)"
B8 00 0F # invokestatic 15    # abs(x, "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)")
36 02    # vstore 2           # _result = abs(x, "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)");
15 02    # vload 2            # _result
10 00    # bipush 0           # 0
A2 00 06 # if_icmpge +6       # if (_result >= 0) goto <12:cond_true>
A7 00 08 # goto +8            # goto <13:cond_false>
# <12:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <14:cond_end>
# <13:cond_false>
10 00    # bipush 0           # false
# <14:cond_end>
14 03 22 # aldc 802           # s[802] = "/afs/andrew/course/15/122/lib/util.h0: 18.6-18.27: @ensures annotation failed"
CF       # assert             # assert (_result >= 0) [failure message on stack]
15 02    # vload 2            # _result
15 00    # vload 0            # x
10 00    # bipush 0           # 0
A1 00 06 # if_icmplt +6       # if (x < 0) goto <18:cond_true>
A7 00 0B # goto +11           # goto <19:cond_false>
# <18:cond_true>
10 00    # bipush 0           # 
15 00    # vload 0            # x
64       # isub               # -(x)
A7 00 05 # goto +5            # goto <20:cond_end>
# <19:cond_false>
15 00    # vload 0            # x
# <20:cond_end>
9F 00 06 # if_cmpeq +6        # if (_result == ((x < 0) ? -(x) : x)) goto <15:cond_true>
A7 00 08 # goto +8            # goto <16:cond_false>
# <15:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <17:cond_end>
# <16:cond_false>
10 00    # bipush 0           # false
# <17:cond_end>
14 03 70 # aldc 880           # s[880] = "/afs/andrew/course/15/122/lib/util.h0: 19.6-19.42: @ensures annotation failed"
CF       # assert             # assert (_result == ((x < 0) ? -(x) : x)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<max>
03                # number of arguments = 3
04                # number of local variables = 4
00 5E             # code length = 94 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
A3 00 06 # if_icmpgt +6       # if (x > y) goto <103:cond_true>
A7 00 08 # goto +8            # goto <104:cond_false>
# <103:cond_true>
15 00    # vload 0            # x
A7 00 05 # goto +5            # goto <105:cond_end>
# <104:cond_false>
15 01    # vload 1            # y
# <105:cond_end>
36 03    # vstore 3           # _result = ((x > y) ? x : y);
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <106:cond_true>
A7 00 08 # goto +8            # goto <107:cond_false>
# <106:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <108:cond_end>
# <107:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <109:cond_true>
A7 00 08 # goto +8            # goto <110:cond_false>
# <109:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <111:cond_end>
# <110:cond_false>
10 00    # bipush 0           # false
# <111:cond_end>
# <108:cond_end>
14 0E 56 # aldc 3670          # s[3670] = "/afs/andrew/course/15/122/lib/util.c0: 13.4-13.41: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A2 00 06 # if_icmpge +6       # if (_result >= x) goto <112:cond_true>
A7 00 17 # goto +23           # goto <113:cond_false>
# <112:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A2 00 06 # if_icmpge +6       # if (_result >= y) goto <115:cond_true>
A7 00 08 # goto +8            # goto <116:cond_false>
# <115:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <117:cond_end>
# <116:cond_false>
10 00    # bipush 0           # false
# <117:cond_end>
A7 00 05 # goto +5            # goto <114:cond_end>
# <113:cond_false>
10 00    # bipush 0           # false
# <114:cond_end>
14 0E A4 # aldc 3748          # s[3748] = "/afs/andrew/course/15/122/lib/util.c0: 14.4-14.41: @ensures annotation failed"
CF       # assert             # assert ((_result >= x) && (_result >= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<max__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 57             # code length = 87 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
14 03 BE # aldc 958           # s[958] = "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)"
B8 00 11 # invokestatic 17    # max(x, y, "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)")
36 03    # vstore 3           # _result = max(x, y, "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)");
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <21:cond_true>
A7 00 08 # goto +8            # goto <22:cond_false>
# <21:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <23:cond_end>
# <22:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <24:cond_true>
A7 00 08 # goto +8            # goto <25:cond_false>
# <24:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <26:cond_end>
# <25:cond_false>
10 00    # bipush 0           # false
# <26:cond_end>
# <23:cond_end>
14 03 F9 # aldc 1017          # s[1017] = "/afs/andrew/course/15/122/lib/util.h0: 23.6-23.43: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A2 00 06 # if_icmpge +6       # if (_result >= x) goto <27:cond_true>
A7 00 17 # goto +23           # goto <28:cond_false>
# <27:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A2 00 06 # if_icmpge +6       # if (_result >= y) goto <30:cond_true>
A7 00 08 # goto +8            # goto <31:cond_false>
# <30:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <32:cond_end>
# <31:cond_false>
10 00    # bipush 0           # false
# <32:cond_end>
A7 00 05 # goto +5            # goto <29:cond_end>
# <28:cond_false>
10 00    # bipush 0           # false
# <29:cond_end>
14 04 47 # aldc 1095          # s[1095] = "/afs/andrew/course/15/122/lib/util.h0: 24.6-24.43: @ensures annotation failed"
CF       # assert             # assert ((_result >= x) && (_result >= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<min>
03                # number of arguments = 3
04                # number of local variables = 4
00 5E             # code length = 94 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
A3 00 06 # if_icmpgt +6       # if (x > y) goto <118:cond_true>
A7 00 08 # goto +8            # goto <119:cond_false>
# <118:cond_true>
15 01    # vload 1            # y
A7 00 05 # goto +5            # goto <120:cond_end>
# <119:cond_false>
15 00    # vload 0            # x
# <120:cond_end>
36 03    # vstore 3           # _result = ((x > y) ? y : x);
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <121:cond_true>
A7 00 08 # goto +8            # goto <122:cond_false>
# <121:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <123:cond_end>
# <122:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <124:cond_true>
A7 00 08 # goto +8            # goto <125:cond_false>
# <124:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <126:cond_end>
# <125:cond_false>
10 00    # bipush 0           # false
# <126:cond_end>
# <123:cond_end>
14 0E F2 # aldc 3826          # s[3826] = "/afs/andrew/course/15/122/lib/util.c0: 21.4-21.41: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A4 00 06 # if_icmple +6       # if (_result <= x) goto <127:cond_true>
A7 00 17 # goto +23           # goto <128:cond_false>
# <127:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A4 00 06 # if_icmple +6       # if (_result <= y) goto <130:cond_true>
A7 00 08 # goto +8            # goto <131:cond_false>
# <130:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <132:cond_end>
# <131:cond_false>
10 00    # bipush 0           # false
# <132:cond_end>
A7 00 05 # goto +5            # goto <129:cond_end>
# <128:cond_false>
10 00    # bipush 0           # false
# <129:cond_end>
14 0F 40 # aldc 3904          # s[3904] = "/afs/andrew/course/15/122/lib/util.c0: 22.4-22.41: @ensures annotation failed"
CF       # assert             # assert ((_result <= x) && (_result <= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<min__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 57             # code length = 87 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
14 04 95 # aldc 1173          # s[1173] = "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)"
B8 00 13 # invokestatic 19    # min(x, y, "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)")
36 03    # vstore 3           # _result = min(x, y, "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)");
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <33:cond_true>
A7 00 08 # goto +8            # goto <34:cond_false>
# <33:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <35:cond_end>
# <34:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <36:cond_true>
A7 00 08 # goto +8            # goto <37:cond_false>
# <36:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <38:cond_end>
# <37:cond_false>
10 00    # bipush 0           # false
# <38:cond_end>
# <35:cond_end>
14 04 D0 # aldc 1232          # s[1232] = "/afs/andrew/course/15/122/lib/util.h0: 28.6-28.43: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A4 00 06 # if_icmple +6       # if (_result <= x) goto <39:cond_true>
A7 00 17 # goto +23           # goto <40:cond_false>
# <39:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A4 00 06 # if_icmple +6       # if (_result <= y) goto <42:cond_true>
A7 00 08 # goto +8            # goto <43:cond_false>
# <42:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <44:cond_end>
# <43:cond_false>
10 00    # bipush 0           # false
# <44:cond_end>
A7 00 05 # goto +5            # goto <41:cond_end>
# <40:cond_false>
10 00    # bipush 0           # false
# <41:cond_end>
14 05 1E # aldc 1310          # s[1310] = "/afs/andrew/course/15/122/lib/util.h0: 29.6-29.43: @ensures annotation failed"
CF       # assert             # assert ((_result <= x) && (_result <= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<int2hex>
02                # number of arguments = 2
06                # number of local variables = 6
00 AE             # code length = 174 bytes
10 02    # bipush 2           # 2
14 11 DD # aldc 4573          # s[4573] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"
B8 00 0A # invokestatic 10    # int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)")
68       # imul               # (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"))
36 03    # vstore 3           # digits = (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"));
15 03    # vload 3            # digits
10 01    # bipush 1           # 1
60       # iadd               # (digits + 1)
BC 01    # newarray 1         # alloc_array(char, (digits + 1))
36 04    # vstore 4           # s = alloc_array(char, (digits + 1));
15 04    # vload 4            # s
15 03    # vload 3            # digits
63       # aadds              # &s[digits]
10 00    # bipush 0           # '\000'
55       # cmstore            # s[digits] = '\0';
10 00    # bipush 0           # 0
36 05    # vstore 5           # i = 0;
# <156:loop>
A7 00 03 # goto +3            # goto <157:body>
# <157:body>
10 00    # bipush 0           # 0
15 05    # vload 5            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <159:cond_true>
A7 00 17 # goto +23           # goto <160:cond_false>
# <159:cond_true>
15 05    # vload 5            # i
15 03    # vload 3            # digits
A4 00 06 # if_icmple +6       # if (i <= digits) goto <162:cond_true>
A7 00 08 # goto +8            # goto <163:cond_false>
# <162:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <164:cond_end>
# <163:cond_false>
10 00    # bipush 0           # false
# <164:cond_end>
A7 00 05 # goto +5            # goto <161:cond_end>
# <160:cond_false>
10 00    # bipush 0           # false
# <161:cond_end>
14 12 1A # aldc 4634          # s[4634] = "/afs/andrew/course/15/122/lib/util.c0: 55.8-55.45: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= i) && (i <= digits)) [failure message on stack]
15 05    # vload 5            # i
15 03    # vload 3            # digits
A1 00 06 # if_icmplt +6       # if (i < digits) goto <165:then>
A7 00 2B # goto +43           # goto <166:else>
# <165:then>
15 04    # vload 4            # s
15 03    # vload 3            # digits
15 05    # vload 5            # i
64       # isub               # (digits - i)
10 01    # bipush 1           # 1
64       # isub               # ((digits - i) - 1)
63       # aadds              # &s[((digits - i) - 1)]
15 00    # vload 0            # x
10 0F    # bipush 15          # 15
7E       # iand               # (x & 15)
14 12 6F # aldc 4719          # s[4719] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)"
B8 00 25 # invokestatic 37    # hexdig2char((x & 15), "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)")
55       # cmstore            # s[((digits - i) - 1)] = hexdig2char((x & 15), "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)");
15 00    # vload 0            # x
10 04    # bipush 4           # 4
7A       # ishr               # (x >> 4)
36 00    # vstore 0           # x = (x >> 4);
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # i += 1;
A7 00 06 # goto +6            # goto <167:endif>
# <166:else>
A7 00 06 # goto +6            # break
# <167:endif>
A7 FF A4 # goto -92           # goto <156:loop>
# <158:exit>
15 04    # vload 4            # s
14 12 AC # aldc 4780          # s[4780] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)"
B8 00 22 # invokestatic 34    # string_from_chararray__1(s, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)")
36 02    # vstore 2           # _result = string_from_chararray__1(s, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)");
15 02    # vload 2            # _result
14 12 E9 # aldc 4841          # s[4841] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)"
B8 00 16 # invokestatic 22    # string_length__1(_result, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)")
10 02    # bipush 2           # 2
14 13 26 # aldc 4902          # s[4902] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"
B8 00 0A # invokestatic 10    # int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)")
68       # imul               # (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"))
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)") == (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"))) goto <168:cond_true>
A7 00 08 # goto +8            # goto <169:cond_false>
# <168:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <170:cond_end>
# <169:cond_false>
10 00    # bipush 0           # false
# <170:cond_end>
14 13 63 # aldc 4963          # s[4963] = "/afs/andrew/course/15/122/lib/util.c0: 49.4-49.51: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)") == (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"))) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<string_length__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 09 # invokenative 9     # string_length(s)
36 02    # vstore 2           # _result = string_length(s);
15 02    # vload 2            # _result
B0       # return             # 


#<string_charat__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 41             # code length = 65 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # idx
A4 00 06 # if_icmple +6       # if (0 <= idx) goto <45:cond_true>
A7 00 1D # goto +29           # goto <46:cond_false>
# <45:cond_true>
15 01    # vload 1            # idx
15 00    # vload 0            # s
14 05 6C # aldc 1388          # s[1388] = "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)"
B8 00 16 # invokestatic 22    # string_length__1(s, "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)")
A1 00 06 # if_icmplt +6       # if (idx < string_length__1(s, "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)")) goto <48:cond_true>
A7 00 08 # goto +8            # goto <49:cond_false>
# <48:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <50:cond_end>
# <49:cond_false>
10 00    # bipush 0           # false
# <50:cond_end>
A7 00 05 # goto +5            # goto <47:cond_end>
# <46:cond_false>
10 00    # bipush 0           # false
# <47:cond_end>
14 05 B4 # aldc 1460          # s[1460] = "/afs/andrew/course/15/122/lib/string.h0: 19.6-19.50: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 06 06 # aldc 1542          # s[1542] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/string.h0: 19.6-19.50: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= idx) && (idx < string_length__1(s, "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)"))) [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # idx
B7 00 0A # invokenative 10    # string_charat(s, idx)
36 03    # vstore 3           # _result = string_charat(s, idx);
15 03    # vload 3            # _result
B0       # return             # 


#<string_join__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 36             # code length = 54 bytes
15 00    # vload 0            # a
15 01    # vload 1            # b
B7 00 07 # invokenative 7     # string_join(a, b)
36 03    # vstore 3           # _result = string_join(a, b);
15 03    # vload 3            # _result
14 06 18 # aldc 1560          # s[1560] = "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)"
B8 00 16 # invokestatic 22    # string_length__1(_result, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)")
15 00    # vload 0            # a
14 06 5E # aldc 1630          # s[1630] = "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)"
B8 00 16 # invokestatic 22    # string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)")
15 01    # vload 1            # b
14 06 A4 # aldc 1700          # s[1700] = "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"
B8 00 16 # invokestatic 22    # string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)")
60       # iadd               # (string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)") + string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"))
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)") == (string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)") + string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"))) goto <51:cond_true>
A7 00 08 # goto +8            # goto <52:cond_false>
# <51:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <53:cond_end>
# <52:cond_false>
10 00    # bipush 0           # false
# <53:cond_end>
14 06 EA # aldc 1770          # s[1770] = "/afs/andrew/course/15/122/lib/string.h0: 23.6-24.55: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)") == (string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)") + string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"))) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<string_sub__1>
04                # number of arguments = 4
05                # number of local variables = 5
00 6B             # code length = 107 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # start
A4 00 06 # if_icmple +6       # if (0 <= start) goto <57:and>
A7 00 27 # goto +39           # goto <55:cond_false>
# <57:and>
15 01    # vload 1            # start
15 02    # vload 2            # end
A4 00 06 # if_icmple +6       # if (start <= end) goto <54:cond_true>
A7 00 1D # goto +29           # goto <55:cond_false>
# <54:cond_true>
15 02    # vload 2            # end
15 00    # vload 0            # a
14 07 3A # aldc 1850          # s[1850] = "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)"
B8 00 16 # invokestatic 22    # string_length__1(a, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)")
A4 00 06 # if_icmple +6       # if (end <= string_length__1(a, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)")) goto <58:cond_true>
A7 00 08 # goto +8            # goto <59:cond_false>
# <58:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <60:cond_end>
# <59:cond_false>
10 00    # bipush 0           # false
# <60:cond_end>
A7 00 05 # goto +5            # goto <56:cond_end>
# <55:cond_false>
10 00    # bipush 0           # false
# <56:cond_end>
14 07 7F # aldc 1919          # s[1919] = "/afs/andrew/course/15/122/lib/string.h0: 31.6-31.69: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 07 D1 # aldc 2001          # s[2001] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/string.h0: 31.6-31.69: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= start) && (start <= end)) && (end <= string_length__1(a, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)"))) [failure message on stack]
15 00    # vload 0            # a
15 01    # vload 1            # start
15 02    # vload 2            # end
B7 00 0B # invokenative 11    # string_sub(a, start, end)
36 04    # vstore 4           # _result = string_sub(a, start, end);
15 04    # vload 4            # _result
14 07 E3 # aldc 2019          # s[2019] = "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)"
B8 00 16 # invokestatic 22    # string_length__1(_result, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)")
15 02    # vload 2            # end
15 01    # vload 1            # start
64       # isub               # (end - start)
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)") == (end - start)) goto <61:cond_true>
A7 00 08 # goto +8            # goto <62:cond_false>
# <61:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <63:cond_end>
# <62:cond_false>
10 00    # bipush 0           # false
# <63:cond_end>
14 08 28 # aldc 2088          # s[2088] = "/afs/andrew/course/15/122/lib/string.h0: 32.6-32.52: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)") == (end - start)) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 


#<string_equal__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 0C             # code length = 12 bytes
15 00    # vload 0            # a
15 01    # vload 1            # b
B7 00 0C # invokenative 12    # string_equal(a, b)
36 03    # vstore 3           # _result = string_equal(a, b);
15 03    # vload 3            # _result
B0       # return             # 


#<string_compare__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 30             # code length = 48 bytes
15 00    # vload 0            # a
15 01    # vload 1            # b
B7 00 0D # invokenative 13    # string_compare(a, b)
36 03    # vstore 3           # _result = string_compare(a, b);
10 FF    # bipush -1          # -1
15 03    # vload 3            # _result
A4 00 06 # if_icmple +6       # if (-(1) <= _result) goto <64:cond_true>
A7 00 17 # goto +23           # goto <65:cond_false>
# <64:cond_true>
15 03    # vload 3            # _result
10 01    # bipush 1           # 1
A4 00 06 # if_icmple +6       # if (_result <= 1) goto <67:cond_true>
A7 00 08 # goto +8            # goto <68:cond_false>
# <67:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <69:cond_end>
# <68:cond_false>
10 00    # bipush 0           # false
# <69:cond_end>
A7 00 05 # goto +5            # goto <66:cond_end>
# <65:cond_false>
10 00    # bipush 0           # false
# <66:cond_end>
14 08 78 # aldc 2168          # s[2168] = "/afs/andrew/course/15/122/lib/string.h0: 37.6-37.44: @ensures annotation failed"
CF       # assert             # assert ((-(1) <= _result) && (_result <= 1)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<string_fromint__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # i
B7 00 0E # invokenative 14    # string_fromint(i)
36 02    # vstore 2           # _result = string_fromint(i);
15 02    # vload 2            # _result
B0       # return             # 


#<string_frombool__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # b
B7 00 0F # invokenative 15    # string_frombool(b)
36 02    # vstore 2           # _result = string_frombool(b);
15 02    # vload 2            # _result
B0       # return             # 


#<string_fromchar__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 62             # code length = 98 bytes
15 00    # vload 0            # c
10 00    # bipush 0           # '\000'
A0 00 06 # if_cmpne +6        # if (c != '\0') goto <70:cond_true>
A7 00 08 # goto +8            # goto <71:cond_false>
# <70:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <72:cond_end>
# <71:cond_false>
10 00    # bipush 0           # false
# <72:cond_end>
14 08 C8 # aldc 2248          # s[2248] = "/afs/andrew/course/15/122/lib/string.h0: 43.6-43.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 09 1A # aldc 2330          # s[2330] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/string.h0: 43.6-43.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (c != '\0') [failure message on stack]
15 00    # vload 0            # c
B7 00 10 # invokenative 16    # string_fromchar(c)
36 02    # vstore 2           # _result = string_fromchar(c);
15 02    # vload 2            # _result
14 09 2C # aldc 2348          # s[2348] = "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)"
B8 00 16 # invokestatic 22    # string_length__1(_result, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)")
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)") == 1) goto <73:cond_true>
A7 00 08 # goto +8            # goto <74:cond_false>
# <73:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <75:cond_end>
# <74:cond_false>
10 00    # bipush 0           # false
# <75:cond_end>
14 09 76 # aldc 2422          # s[2422] = "/afs/andrew/course/15/122/lib/string.h0: 44.6-44.42: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)") == 1) [failure message on stack]
15 02    # vload 2            # _result
10 00    # bipush 0           # 0
14 09 C6 # aldc 2502          # s[2502] = "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)"
B8 00 17 # invokestatic 23    # string_charat__1(_result, 0, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)")
15 00    # vload 0            # c
9F 00 06 # if_cmpeq +6        # if (string_charat__1(_result, 0, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)") == c) goto <76:cond_true>
A7 00 08 # goto +8            # goto <77:cond_false>
# <76:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <78:cond_end>
# <77:cond_false>
10 00    # bipush 0           # false
# <78:cond_end>
14 0A 10 # aldc 2576          # s[2576] = "/afs/andrew/course/15/122/lib/string.h0: 45.6-45.45: @ensures annotation failed"
CF       # assert             # assert (string_charat__1(_result, 0, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)") == c) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<string_tolower__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 11 # invokenative 17    # string_tolower(s)
36 02    # vstore 2           # _result = string_tolower(s);
15 02    # vload 2            # _result
B0       # return             # 


#<string_terminated__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 3C             # code length = 60 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # n
A4 00 06 # if_icmple +6       # if (0 <= n) goto <79:cond_true>
A7 00 18 # goto +24           # goto <80:cond_false>
# <79:cond_true>
15 01    # vload 1            # n
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (n <= \length(A)) goto <82:cond_true>
A7 00 08 # goto +8            # goto <83:cond_false>
# <82:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <84:cond_end>
# <83:cond_false>
10 00    # bipush 0           # false
# <84:cond_end>
A7 00 05 # goto +5            # goto <81:cond_end>
# <80:cond_false>
10 00    # bipush 0           # false
# <81:cond_end>
14 0A 60 # aldc 2656          # s[2656] = "/afs/andrew/course/15/122/lib/string.h0: 52.6-52.41: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 0A B2 # aldc 2738          # s[2738] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/string.h0: 52.6-52.41: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= n) && (n <= \length(A))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # n
B7 00 12 # invokenative 18    # string_terminated(A, n)
36 03    # vstore 3           # _result = string_terminated(A, n);
15 03    # vload 3            # _result
B0       # return             # 


#<string_to_chararray__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 40             # code length = 64 bytes
15 00    # vload 0            # s
B7 00 13 # invokenative 19    # string_to_chararray(s)
36 02    # vstore 2           # _result = string_to_chararray(s);
15 02    # vload 2            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # s
14 0A C4 # aldc 2756          # s[2756] = "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)"
B8 00 16 # invokestatic 22    # string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)")
10 01    # bipush 1           # 1
60       # iadd               # (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)") + 1)
A2 00 06 # if_icmpge +6       # if (\length(_result) >= (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)") + 1)) goto <85:cond_true>
A7 00 08 # goto +8            # goto <86:cond_false>
# <85:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <87:cond_end>
# <86:cond_false>
10 00    # bipush 0           # false
# <87:cond_end>
14 0B 12 # aldc 2834          # s[2834] = "/afs/andrew/course/15/122/lib/string.h0: 56.6-56.55: @ensures annotation failed"
CF       # assert             # assert (\length(_result) >= (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)") + 1)) [failure message on stack]
15 02    # vload 2            # _result
15 00    # vload 0            # s
14 0B 62 # aldc 2914          # s[2914] = "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)"
B8 00 16 # invokestatic 22    # string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)")
10 01    # bipush 1           # 1
60       # iadd               # (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)") + 1)
14 0B B0 # aldc 2992          # s[2992] = "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)"
B8 00 20 # invokestatic 32    # string_terminated__1(_result, (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)") + 1), "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)")
14 0B FE # aldc 3070          # s[3070] = "/afs/andrew/course/15/122/lib/string.h0: 57.6-57.63: @ensures annotation failed"
CF       # assert             # assert string_terminated__1(_result, (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)") + 1), "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<string_from_chararray__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 43             # code length = 67 bytes
15 00    # vload 0            # A
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
14 0C 4E # aldc 3150          # s[3150] = "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)"
B8 00 20 # invokestatic 32    # string_terminated__1(A, \length(A), "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)")
14 0C 9E # aldc 3230          # s[3230] = "/afs/andrew/course/15/122/lib/string.h0: 62.6-62.48: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 0C F0 # aldc 3312          # s[3312] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/string.h0: 62.6-62.48: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert string_terminated__1(A, \length(A), "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)") [failure message on stack]
15 00    # vload 0            # A
B7 00 14 # invokenative 20    # string_from_chararray(A)
36 02    # vstore 2           # _result = string_from_chararray(A);
15 02    # vload 2            # _result
14 0D 02 # aldc 3330          # s[3330] = "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)"
B8 00 16 # invokestatic 22    # string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)")
10 01    # bipush 1           # 1
60       # iadd               # (string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)") + 1)
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if ((string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)") + 1) <= \length(A)) goto <88:cond_true>
A7 00 08 # goto +8            # goto <89:cond_false>
# <88:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <90:cond_end>
# <89:cond_false>
10 00    # bipush 0           # false
# <90:cond_end>
14 0D 52 # aldc 3410          # s[3410] = "/afs/andrew/course/15/122/lib/string.h0: 63.6-63.55: @ensures annotation failed"
CF       # assert             # assert ((string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)") + 1) <= \length(A)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<char_ord__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 2E             # code length = 46 bytes
15 00    # vload 0            # c
B7 00 15 # invokenative 21    # char_ord(c)
36 02    # vstore 2           # _result = char_ord(c);
10 00    # bipush 0           # 0
15 02    # vload 2            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <91:cond_true>
A7 00 17 # goto +23           # goto <92:cond_false>
# <91:cond_true>
15 02    # vload 2            # _result
10 7F    # bipush 127         # 127
A4 00 06 # if_icmple +6       # if (_result <= 127) goto <94:cond_true>
A7 00 08 # goto +8            # goto <95:cond_false>
# <94:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <96:cond_end>
# <95:cond_false>
10 00    # bipush 0           # false
# <96:cond_end>
A7 00 05 # goto +5            # goto <93:cond_end>
# <92:cond_false>
10 00    # bipush 0           # false
# <93:cond_end>
14 0D A2 # aldc 3490          # s[3490] = "/afs/andrew/course/15/122/lib/string.h0: 67.6-67.45: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result <= 127)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<char_chr__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 39             # code length = 57 bytes
10 00    # bipush 0           # 0
15 00    # vload 0            # n
A4 00 06 # if_icmple +6       # if (0 <= n) goto <97:cond_true>
A7 00 17 # goto +23           # goto <98:cond_false>
# <97:cond_true>
15 00    # vload 0            # n
10 7F    # bipush 127         # 127
A4 00 06 # if_icmple +6       # if (n <= 127) goto <100:cond_true>
A7 00 08 # goto +8            # goto <101:cond_false>
# <100:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <102:cond_end>
# <101:cond_false>
10 00    # bipush 0           # false
# <102:cond_end>
A7 00 05 # goto +5            # goto <99:cond_end>
# <98:cond_false>
10 00    # bipush 0           # false
# <99:cond_end>
14 0D F2 # aldc 3570          # s[3570] = "/afs/andrew/course/15/122/lib/string.h0: 69.6-69.34: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 0E 44 # aldc 3652          # s[3652] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/string.h0: 69.6-69.34: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= n) && (n <= 127)) [failure message on stack]
15 00    # vload 0            # n
B7 00 16 # invokenative 22    # char_chr(n)
36 02    # vstore 2           # _result = char_chr(n);
15 02    # vload 2            # _result
B0       # return             # 


#<hexdig2char>
02                # number of arguments = 2
03                # number of local variables = 3
00 93             # code length = 147 bytes
10 00    # bipush 0           # 0
15 00    # vload 0            # d
A4 00 06 # if_icmple +6       # if (0 <= d) goto <142:cond_true>
A7 00 17 # goto +23           # goto <143:cond_false>
# <142:cond_true>
15 00    # vload 0            # d
10 10    # bipush 16          # 16
A1 00 06 # if_icmplt +6       # if (d < 16) goto <145:cond_true>
A7 00 08 # goto +8            # goto <146:cond_false>
# <145:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <147:cond_end>
# <146:cond_false>
10 00    # bipush 0           # false
# <147:cond_end>
A7 00 05 # goto +5            # goto <144:cond_end>
# <143:cond_false>
10 00    # bipush 0           # false
# <144:cond_end>
14 10 77 # aldc 4215          # s[4215] = "/afs/andrew/course/15/122/lib/util.c0: 37.4-37.30: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 10 C7 # aldc 4295          # s[4295] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/util.c0: 37.4-37.30: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= d) && (d < 16)) [failure message on stack]
10 00    # bipush 0           # 0
15 00    # vload 0            # d
A4 00 06 # if_icmple +6       # if (0 <= d) goto <151:and>
A7 00 26 # goto +38           # goto <149:else>
# <151:and>
15 00    # vload 0            # d
10 0A    # bipush 10          # 10
A1 00 06 # if_icmplt +6       # if (d < 10) goto <148:then>
A7 00 1C # goto +28           # goto <149:else>
# <148:then>
10 30    # bipush 48          # '0'
14 10 D9 # aldc 4313          # s[4313] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)"
B8 00 23 # invokestatic 35    # char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)")
15 00    # vload 0            # d
60       # iadd               # (char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)") + d)
14 11 1A # aldc 4378          # s[4378] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)"
B8 00 24 # invokestatic 36    # char_chr__1((char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)") + d), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)")
36 02    # vstore 2           # _result = char_chr__1((char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)") + d), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)");
15 02    # vload 2            # _result
B0       # return             # 
A7 00 3A # goto +58           # goto <150:endif>
# <149:else>
10 0A    # bipush 10          # 10
15 00    # vload 0            # d
A4 00 06 # if_icmple +6       # if (10 <= d) goto <155:and>
A7 00 29 # goto +41           # goto <153:else>
# <155:and>
15 00    # vload 0            # d
10 10    # bipush 16          # 16
A1 00 06 # if_icmplt +6       # if (d < 16) goto <152:then>
A7 00 1F # goto +31           # goto <153:else>
# <152:then>
10 41    # bipush 65          # 'A'
14 11 5B # aldc 4443          # s[4443] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)"
B8 00 23 # invokestatic 35    # char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)")
15 00    # vload 0            # d
10 0A    # bipush 10          # 10
64       # isub               # (d - 10)
60       # iadd               # (char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)") + (d - 10))
14 11 9C # aldc 4508          # s[4508] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)"
B8 00 24 # invokestatic 36    # char_chr__1((char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)") + (d - 10)), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)")
36 02    # vstore 2           # _result = char_chr__1((char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)") + (d - 10)), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)");
15 02    # vload 2            # _result
B0       # return             # 
A7 00 0A # goto +10           # goto <154:endif>
# <153:else>
10 3F    # bipush 63          # '\?'
36 02    # vstore 2           # _result = '?';
15 02    # vload 2            # _result
B0       # return             # 
# <154:endif>
# <150:endif>


#<is_tbuf>
02                # number of arguments = 2
03                # number of local variables = 3
00 40             # code length = 64 bytes
15 00    # vload 0            # B
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (B != NULL) goto <225:and>
A7 00 33 # goto +51           # goto <223:cond_false>
# <225:and>
15 00    # vload 0            # B
62 00    # aaddf 0            # &B->start
2F       # amload             # B->start
15 00    # vload 0            # B
62 10    # aaddf 16           # &B->end
2F       # amload             # B->end
14 13 B1 # aldc 5041          # s[5041] = "is_tbuf (tbuf.c0: 93.12-93.44)"
B8 00 30 # invokestatic 48    # is_dll_segment(B->start, B->end, "is_tbuf (tbuf.c0: 93.12-93.44)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_dll_segment(B->start, B->end, "is_tbuf (tbuf.c0: 93.12-93.44)") == true) goto <222:cond_true>
A7 00 1B # goto +27           # goto <223:cond_false>
# <222:cond_true>
15 00    # vload 0            # B
62 00    # aaddf 0            # &B->start
2F       # amload             # B->start
15 00    # vload 0            # B
62 10    # aaddf 16           # &B->end
2F       # amload             # B->end
15 00    # vload 0            # B
62 08    # aaddf 8            # &B->cursor
2F       # amload             # B->cursor
14 13 D0 # aldc 5072          # s[5072] = "is_tbuf (tbuf.c0: 94.12-94.56)"
B8 00 31 # invokestatic 49    # is_cursor_valid(B->start, B->end, B->cursor, "is_tbuf (tbuf.c0: 94.12-94.56)")
A7 00 05 # goto +5            # goto <224:cond_end>
# <223:cond_false>
10 00    # bipush 0           # false
# <224:cond_end>
36 02    # vstore 2           # _result = (((B != NULL) && is_dll_segment(B->start, B->end, "is_tbuf (tbuf.c0: 93.12-93.44)")) && is_cursor_valid(B->start, B->end, B->cursor, "is_tbuf (tbuf.c0: 94.12-94.56)"));
15 02    # vload 2            # _result
B0       # return             # 


#<tbuf_at_left>
02                # number of arguments = 2
03                # number of local variables = 3
00 36             # code length = 54 bytes
15 00    # vload 0            # B
14 13 EF # aldc 5103          # s[5103] = "tbuf_at_left (tbuf.c0: 99.13-99.23)"
B8 00 26 # invokestatic 38    # is_tbuf(B, "tbuf_at_left (tbuf.c0: 99.13-99.23)")
14 14 13 # aldc 5139          # s[5139] = "tbuf.c0: 99.4-99.24: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 14 45 # aldc 5189          # s[5189] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("tbuf.c0: 99.4-99.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_tbuf(B, "tbuf_at_left (tbuf.c0: 99.13-99.23)") [failure message on stack]
15 00    # vload 0            # B
62 08    # aaddf 8            # &B->cursor
2F       # amload             # B->cursor
15 00    # vload 0            # B
62 00    # aaddf 0            # &B->start
2F       # amload             # B->start
62 00    # aaddf 0            # &B->start->next
2F       # amload             # B->start->next
9F 00 06 # if_cmpeq +6        # if (B->cursor == B->start->next) goto <226:cond_true>
A7 00 08 # goto +8            # goto <227:cond_false>
# <226:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <228:cond_end>
# <227:cond_false>
10 00    # bipush 0           # false
# <228:cond_end>
36 02    # vstore 2           # _result = (B->cursor == B->start->next);
15 02    # vload 2            # _result
B0       # return             # 


#<tbuf_at_right>
02                # number of arguments = 2
03                # number of local variables = 3
00 33             # code length = 51 bytes
15 00    # vload 0            # B
14 14 57 # aldc 5207          # s[5207] = "tbuf_at_right (tbuf.c0: 105.13-105.23)"
B8 00 26 # invokestatic 38    # is_tbuf(B, "tbuf_at_right (tbuf.c0: 105.13-105.23)")
14 14 7E # aldc 5246          # s[5246] = "tbuf.c0: 105.4-105.24: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 14 B2 # aldc 5298          # s[5298] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("tbuf.c0: 105.4-105.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_tbuf(B, "tbuf_at_right (tbuf.c0: 105.13-105.23)") [failure message on stack]
15 00    # vload 0            # B
62 08    # aaddf 8            # &B->cursor
2F       # amload             # B->cursor
15 00    # vload 0            # B
62 10    # aaddf 16           # &B->end
2F       # amload             # B->end
9F 00 06 # if_cmpeq +6        # if (B->cursor == B->end) goto <229:cond_true>
A7 00 08 # goto +8            # goto <230:cond_false>
# <229:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <231:cond_end>
# <230:cond_false>
10 00    # bipush 0           # false
# <231:cond_end>
36 02    # vstore 2           # _result = (B->cursor == B->end);
15 02    # vload 2            # _result
B0       # return             # 


#<tbuf_new>
01                # number of arguments = 1
05                # number of local variables = 5
00 51             # code length = 81 bytes
BB 18    # new 24             # alloc(tbuf)
36 02    # vstore 2           # B = alloc(tbuf);
BB 18    # new 24             # alloc(dll)
36 03    # vstore 3           # node_start = alloc(dll);
BB 18    # new 24             # alloc(dll)
36 04    # vstore 4           # node_end = alloc(dll);
15 02    # vload 2            # B
62 00    # aaddf 0            # &B->start
15 03    # vload 3            # node_start
4F       # amstore            # B->start = node_start;
15 02    # vload 2            # B
62 10    # aaddf 16           # &B->end
15 04    # vload 4            # node_end
4F       # amstore            # B->end = node_end;
15 02    # vload 2            # B
62 00    # aaddf 0            # &B->start
2F       # amload             # B->start
62 00    # aaddf 0            # &B->start->next
15 02    # vload 2            # B
62 10    # aaddf 16           # &B->end
2F       # amload             # B->end
4F       # amstore            # B->start->next = B->end;
15 02    # vload 2            # B
62 10    # aaddf 16           # &B->end
2F       # amload             # B->end
62 10    # aaddf 16           # &B->end->prev
15 02    # vload 2            # B
62 00    # aaddf 0            # &B->start
2F       # amload             # B->start
4F       # amstore            # B->end->prev = B->start;
15 02    # vload 2            # B
62 08    # aaddf 8            # &B->cursor
15 02    # vload 2            # B
62 10    # aaddf 16           # &B->end
2F       # amload             # B->end
4F       # amstore            # B->cursor = B->end;
15 02    # vload 2            # B
36 01    # vstore 1           # _result = B;
15 01    # vload 1            # _result
14 14 C4 # aldc 5316          # s[5316] = "tbuf_new (tbuf.c0: 112.12-112.28)"
B8 00 26 # invokestatic 38    # is_tbuf(_result, "tbuf_new (tbuf.c0: 112.12-112.28)")
14 14 E6 # aldc 5350          # s[5350] = "tbuf.c0: 112.4-112.29: @ensures annotation failed"
CF       # assert             # assert is_tbuf(_result, "tbuf_new (tbuf.c0: 112.12-112.28)") [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<tbuf_forward>
02                # number of arguments = 2
02                # number of local variables = 2
00 4D             # code length = 77 bytes
15 00    # vload 0            # B
14 15 18 # aldc 5400          # s[5400] = "tbuf_forward (tbuf.c0: 126.13-126.23)"
B8 00 26 # invokestatic 38    # is_tbuf(B, "tbuf_forward (tbuf.c0: 126.13-126.23)")
14 15 3E # aldc 5438          # s[5438] = "tbuf.c0: 126.4-126.24: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 15 72 # aldc 5490          # s[5490] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("tbuf.c0: 126.4-126.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_tbuf(B, "tbuf_forward (tbuf.c0: 126.13-126.23)") [failure message on stack]
15 00    # vload 0            # B
14 15 84 # aldc 5508          # s[5508] = "tbuf_forward (tbuf.c0: 127.14-127.30)"
B8 00 28 # invokestatic 40    # tbuf_at_right(B, "tbuf_forward (tbuf.c0: 127.14-127.30)")
10 01    # bipush 1           # 
82       # ixor               # !(tbuf_at_right(B, "tbuf_forward (tbuf.c0: 127.14-127.30)"))
14 15 AA # aldc 5546          # s[5546] = "tbuf.c0: 127.4-127.31: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 15 DE # aldc 5598          # s[5598] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("tbuf.c0: 127.4-127.31: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(tbuf_at_right(B, "tbuf_forward (tbuf.c0: 127.14-127.30)")) [failure message on stack]
15 00    # vload 0            # B
62 08    # aaddf 8            # &B->cursor
15 00    # vload 0            # B
62 08    # aaddf 8            # &B->cursor
2F       # amload             # B->cursor
62 00    # aaddf 0            # &B->cursor->next
2F       # amload             # B->cursor->next
4F       # amstore            # B->cursor = B->cursor->next;
15 00    # vload 0            # B
14 15 F0 # aldc 5616          # s[5616] = "tbuf_forward (tbuf.c0: 128.12-128.22)"
B8 00 26 # invokestatic 38    # is_tbuf(B, "tbuf_forward (tbuf.c0: 128.12-128.22)")
14 16 16 # aldc 5654          # s[5654] = "tbuf.c0: 128.4-128.23: @ensures annotation failed"
CF       # assert             # assert is_tbuf(B, "tbuf_forward (tbuf.c0: 128.12-128.22)") [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<tbuf_backward>
02                # number of arguments = 2
02                # number of local variables = 2
00 4D             # code length = 77 bytes
15 00    # vload 0            # B
14 16 48 # aldc 5704          # s[5704] = "tbuf_backward (tbuf.c0: 134.13-134.23)"
B8 00 26 # invokestatic 38    # is_tbuf(B, "tbuf_backward (tbuf.c0: 134.13-134.23)")
14 16 6F # aldc 5743          # s[5743] = "tbuf.c0: 134.4-134.24: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 16 A3 # aldc 5795          # s[5795] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("tbuf.c0: 134.4-134.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_tbuf(B, "tbuf_backward (tbuf.c0: 134.13-134.23)") [failure message on stack]
15 00    # vload 0            # B
14 16 B5 # aldc 5813          # s[5813] = "tbuf_backward (tbuf.c0: 135.14-135.29)"
B8 00 27 # invokestatic 39    # tbuf_at_left(B, "tbuf_backward (tbuf.c0: 135.14-135.29)")
10 01    # bipush 1           # 
82       # ixor               # !(tbuf_at_left(B, "tbuf_backward (tbuf.c0: 135.14-135.29)"))
14 16 DC # aldc 5852          # s[5852] = "tbuf.c0: 135.4-135.30: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 17 10 # aldc 5904          # s[5904] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("tbuf.c0: 135.4-135.30: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(tbuf_at_left(B, "tbuf_backward (tbuf.c0: 135.14-135.29)")) [failure message on stack]
15 00    # vload 0            # B
62 08    # aaddf 8            # &B->cursor
15 00    # vload 0            # B
62 08    # aaddf 8            # &B->cursor
2F       # amload             # B->cursor
62 10    # aaddf 16           # &B->cursor->prev
2F       # amload             # B->cursor->prev
4F       # amstore            # B->cursor = B->cursor->prev;
15 00    # vload 0            # B
14 17 22 # aldc 5922          # s[5922] = "tbuf_backward (tbuf.c0: 136.12-136.22)"
B8 00 26 # invokestatic 38    # is_tbuf(B, "tbuf_backward (tbuf.c0: 136.12-136.22)")
14 17 49 # aldc 5961          # s[5961] = "tbuf.c0: 136.4-136.23: @ensures annotation failed"
CF       # assert             # assert is_tbuf(B, "tbuf_backward (tbuf.c0: 136.12-136.22)") [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<tbuf_insert>
03                # number of arguments = 3
05                # number of local variables = 5
00 5D             # code length = 93 bytes
15 00    # vload 0            # B
14 17 7B # aldc 6011          # s[6011] = "tbuf_insert (tbuf.c0: 142.13-142.23)"
B8 00 26 # invokestatic 38    # is_tbuf(B, "tbuf_insert (tbuf.c0: 142.13-142.23)")
14 17 A0 # aldc 6048          # s[6048] = "tbuf.c0: 142.4-142.24: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 17 D4 # aldc 6100          # s[6100] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("tbuf.c0: 142.4-142.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_tbuf(B, "tbuf_insert (tbuf.c0: 142.13-142.23)") [failure message on stack]
BB 18    # new 24             # alloc(dll)
36 03    # vstore 3           # new_node = alloc(dll);
15 03    # vload 3            # new_node
62 08    # aaddf 8            # &new_node->data
15 01    # vload 1            # c
55       # cmstore            # new_node->data = c;
15 00    # vload 0            # B
62 08    # aaddf 8            # &B->cursor
2F       # amload             # B->cursor
62 10    # aaddf 16           # &B->cursor->prev
2F       # amload             # B->cursor->prev
36 04    # vstore 4           # prev_node = B->cursor->prev;
15 00    # vload 0            # B
62 08    # aaddf 8            # &B->cursor
2F       # amload             # B->cursor
62 10    # aaddf 16           # &B->cursor->prev
15 03    # vload 3            # new_node
4F       # amstore            # B->cursor->prev = new_node;
15 03    # vload 3            # new_node
62 10    # aaddf 16           # &new_node->prev
15 04    # vload 4            # prev_node
4F       # amstore            # new_node->prev = prev_node;
15 03    # vload 3            # new_node
62 00    # aaddf 0            # &new_node->next
15 00    # vload 0            # B
62 08    # aaddf 8            # &B->cursor
2F       # amload             # B->cursor
4F       # amstore            # new_node->next = B->cursor;
15 04    # vload 4            # prev_node
62 00    # aaddf 0            # &prev_node->next
15 03    # vload 3            # new_node
4F       # amstore            # prev_node->next = new_node;
15 00    # vload 0            # B
14 17 E6 # aldc 6118          # s[6118] = "tbuf_insert (tbuf.c0: 143.12-143.22)"
B8 00 26 # invokestatic 38    # is_tbuf(B, "tbuf_insert (tbuf.c0: 143.12-143.22)")
14 18 0B # aldc 6155          # s[6155] = "tbuf.c0: 143.4-143.23: @ensures annotation failed"
CF       # assert             # assert is_tbuf(B, "tbuf_insert (tbuf.c0: 143.12-143.22)") [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<tbuf_delete>
02                # number of arguments = 2
04                # number of local variables = 4
00 6B             # code length = 107 bytes
15 00    # vload 0            # B
14 18 3D # aldc 6205          # s[6205] = "tbuf_delete (tbuf.c0: 155.13-155.23)"
B8 00 26 # invokestatic 38    # is_tbuf(B, "tbuf_delete (tbuf.c0: 155.13-155.23)")
14 18 62 # aldc 6242          # s[6242] = "tbuf.c0: 155.4-155.24: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 18 96 # aldc 6294          # s[6294] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("tbuf.c0: 155.4-155.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_tbuf(B, "tbuf_delete (tbuf.c0: 155.13-155.23)") [failure message on stack]
15 00    # vload 0            # B
14 18 A8 # aldc 6312          # s[6312] = "tbuf_delete (tbuf.c0: 156.14-156.29)"
B8 00 27 # invokestatic 39    # tbuf_at_left(B, "tbuf_delete (tbuf.c0: 156.14-156.29)")
10 01    # bipush 1           # 
82       # ixor               # !(tbuf_at_left(B, "tbuf_delete (tbuf.c0: 156.14-156.29)"))
14 18 CD # aldc 6349          # s[6349] = "tbuf.c0: 156.4-156.30: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 19 01 # aldc 6401          # s[6401] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("tbuf.c0: 156.4-156.30: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(tbuf_at_left(B, "tbuf_delete (tbuf.c0: 156.14-156.29)")) [failure message on stack]
15 00    # vload 0            # B
62 08    # aaddf 8            # &B->cursor
2F       # amload             # B->cursor
62 10    # aaddf 16           # &B->cursor->prev
2F       # amload             # B->cursor->prev
36 03    # vstore 3           # deleted_node = B->cursor->prev;
15 00    # vload 0            # B
62 08    # aaddf 8            # &B->cursor
2F       # amload             # B->cursor
62 10    # aaddf 16           # &B->cursor->prev
15 03    # vload 3            # deleted_node
62 10    # aaddf 16           # &deleted_node->prev
2F       # amload             # deleted_node->prev
4F       # amstore            # B->cursor->prev = deleted_node->prev;
15 03    # vload 3            # deleted_node
62 10    # aaddf 16           # &deleted_node->prev
2F       # amload             # deleted_node->prev
62 00    # aaddf 0            # &deleted_node->prev->next
15 00    # vload 0            # B
62 08    # aaddf 8            # &B->cursor
2F       # amload             # B->cursor
4F       # amstore            # deleted_node->prev->next = B->cursor;
15 03    # vload 3            # deleted_node
62 08    # aaddf 8            # &deleted_node->data
34       # cmload             # deleted_node->data
36 02    # vstore 2           # _result = deleted_node->data;
15 00    # vload 0            # B
14 19 13 # aldc 6419          # s[6419] = "tbuf_delete (tbuf.c0: 157.12-157.22)"
B8 00 26 # invokestatic 38    # is_tbuf(B, "tbuf_delete (tbuf.c0: 157.12-157.22)")
14 19 38 # aldc 6456          # s[6456] = "tbuf.c0: 157.4-157.23: @ensures annotation failed"
CF       # assert             # assert is_tbuf(B, "tbuf_delete (tbuf.c0: 157.12-157.22)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<tbuf_row>
02                # number of arguments = 2
05                # number of local variables = 5
00 9E             # code length = 158 bytes
15 00    # vload 0            # B
14 19 6A # aldc 6506          # s[6506] = "tbuf_row (tbuf.c0: 166.13-166.23)"
B8 00 26 # invokestatic 38    # is_tbuf(B, "tbuf_row (tbuf.c0: 166.13-166.23)")
14 19 8C # aldc 6540          # s[6540] = "tbuf.c0: 166.4-166.24: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 19 C0 # aldc 6592          # s[6592] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("tbuf.c0: 166.4-166.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_tbuf(B, "tbuf_row (tbuf.c0: 166.13-166.23)") [failure message on stack]
10 01    # bipush 1           # 1
36 03    # vstore 3           # count = 1;
15 00    # vload 0            # B
62 08    # aaddf 8            # &B->cursor
2F       # amload             # B->cursor
36 04    # vstore 4           # current_node = B->cursor;
15 04    # vload 4            # current_node
15 00    # vload 0            # B
62 10    # aaddf 16           # &B->end
2F       # amload             # B->end
9F 00 13 # if_cmpeq +19       # if (current_node == B->end) goto <232:then>
A7 00 03 # goto +3            # goto <235:or>
# <235:or>
15 04    # vload 4            # current_node
62 08    # aaddf 8            # &current_node->data
34       # cmload             # current_node->data
10 0A    # bipush 10          # '\n'
9F 00 06 # if_cmpeq +6        # if (current_node->data == '\n') goto <232:then>
A7 00 27 # goto +39           # goto <233:else>
# <232:then>
15 04    # vload 4            # current_node
15 00    # vload 0            # B
62 00    # aaddf 0            # &B->start
2F       # amload             # B->start
62 00    # aaddf 0            # &B->start->next
2F       # amload             # B->start->next
9F 00 06 # if_cmpeq +6        # if (current_node == B->start->next) goto <236:then>
A7 00 0D # goto +13           # goto <237:else>
# <236:then>
15 03    # vload 3            # count
36 02    # vstore 2           # _result = count;
15 02    # vload 2            # _result
B0       # return             # 
A7 00 0A # goto +10           # goto <238:endif>
# <237:else>
15 04    # vload 4            # current_node
62 10    # aaddf 16           # &current_node->prev
2F       # amload             # current_node->prev
36 04    # vstore 4           # current_node = current_node->prev;
# <238:endif>
A7 00 03 # goto +3            # goto <234:endif>
# <233:else>
# <234:endif>
# <239:loop>
A7 00 03 # goto +3            # goto <240:body>
# <240:body>
15 04    # vload 4            # current_node
15 00    # vload 0            # B
62 00    # aaddf 0            # &B->start
2F       # amload             # B->start
A0 00 06 # if_cmpne +6        # if (current_node != B->start) goto <242:then>
A7 00 24 # goto +36           # goto <243:else>
# <242:then>
15 04    # vload 4            # current_node
62 08    # aaddf 8            # &current_node->data
34       # cmload             # current_node->data
10 0A    # bipush 10          # '\n'
9F 00 06 # if_cmpeq +6        # if (current_node->data == '\n') goto <245:then>
A7 00 0D # goto +13           # goto <246:else>
# <245:then>
15 03    # vload 3            # count
10 01    # bipush 1           # 1
60       # iadd               # 
36 03    # vstore 3           # count += 1;
A7 00 03 # goto +3            # goto <247:endif>
# <246:else>
# <247:endif>
15 04    # vload 4            # current_node
62 10    # aaddf 16           # &current_node->prev
2F       # amload             # current_node->prev
36 04    # vstore 4           # current_node = current_node->prev;
A7 00 06 # goto +6            # goto <244:endif>
# <243:else>
A7 00 06 # goto +6            # break
# <244:endif>
A7 FF CC # goto -52           # goto <239:loop>
# <241:exit>
15 03    # vload 3            # count
36 02    # vstore 2           # _result = count;
15 02    # vload 2            # _result
B0       # return             # 


#<tbuf_col>
02                # number of arguments = 2
05                # number of local variables = 5
00 8D             # code length = 141 bytes
15 00    # vload 0            # B
14 19 D2 # aldc 6610          # s[6610] = "tbuf_col (tbuf.c0: 183.13-183.23)"
B8 00 26 # invokestatic 38    # is_tbuf(B, "tbuf_col (tbuf.c0: 183.13-183.23)")
14 19 F4 # aldc 6644          # s[6644] = "tbuf.c0: 183.4-183.24: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 1A 28 # aldc 6696          # s[6696] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("tbuf.c0: 183.4-183.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_tbuf(B, "tbuf_col (tbuf.c0: 183.13-183.23)") [failure message on stack]
10 00    # bipush 0           # 0
36 03    # vstore 3           # count = 0;
15 00    # vload 0            # B
62 08    # aaddf 8            # &B->cursor
2F       # amload             # B->cursor
36 04    # vstore 4           # current_node = B->cursor;
15 04    # vload 4            # current_node
15 00    # vload 0            # B
62 00    # aaddf 0            # &B->start
2F       # amload             # B->start
62 00    # aaddf 0            # &B->start->next
2F       # amload             # B->start->next
9F 00 16 # if_cmpeq +22       # if (current_node == B->start->next) goto <248:then>
A7 00 03 # goto +3            # goto <251:or>
# <251:or>
15 04    # vload 4            # current_node
62 10    # aaddf 16           # &current_node->prev
2F       # amload             # current_node->prev
62 08    # aaddf 8            # &current_node->prev->data
34       # cmload             # current_node->prev->data
10 0A    # bipush 10          # '\n'
9F 00 06 # if_cmpeq +6        # if (current_node->prev->data == '\n') goto <248:then>
A7 00 0D # goto +13           # goto <249:else>
# <248:then>
10 00    # bipush 0           # 0
36 02    # vstore 2           # _result = 0;
15 02    # vload 2            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <250:endif>
# <249:else>
# <250:endif>
# <252:loop>
A7 00 03 # goto +3            # goto <253:body>
# <253:body>
15 04    # vload 4            # current_node
62 10    # aaddf 16           # &current_node->prev
2F       # amload             # current_node->prev
15 00    # vload 0            # B
62 00    # aaddf 0            # &B->start
2F       # amload             # B->start
A0 00 06 # if_cmpne +6        # if (current_node->prev != B->start) goto <258:and>
A7 00 24 # goto +36           # goto <256:else>
# <258:and>
15 04    # vload 4            # current_node
62 10    # aaddf 16           # &current_node->prev
2F       # amload             # current_node->prev
62 08    # aaddf 8            # &current_node->prev->data
34       # cmload             # current_node->prev->data
10 0A    # bipush 10          # '\n'
A0 00 06 # if_cmpne +6        # if (current_node->prev->data != '\n') goto <255:then>
A7 00 14 # goto +20           # goto <256:else>
# <255:then>
15 03    # vload 3            # count
10 01    # bipush 1           # 1
60       # iadd               # 
36 03    # vstore 3           # count += 1;
15 04    # vload 4            # current_node
62 10    # aaddf 16           # &current_node->prev
2F       # amload             # current_node->prev
36 04    # vstore 4           # current_node = current_node->prev;
A7 00 06 # goto +6            # goto <257:endif>
# <256:else>
A7 00 06 # goto +6            # break
# <257:endif>
A7 FF C9 # goto -55           # goto <252:loop>
# <254:exit>
15 03    # vload 3            # count
36 02    # vstore 2           # _result = count;
15 02    # vload 2            # _result
B0       # return             # 


#<is_dll_segment>
03                # number of arguments = 3
05                # number of local variables = 5
00 DC             # code length = 220 bytes
15 00    # vload 0            # start
15 01    # vload 1            # end
9F 00 06 # if_cmpeq +6        # if (start == end) goto <171:then>
A7 00 0D # goto +13           # goto <172:else>
# <171:then>
10 00    # bipush 0           # false
36 03    # vstore 3           # _result = false;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <173:endif>
# <172:else>
# <173:endif>
15 00    # vload 0            # start
36 04    # vstore 4           # l = start;
# <174:loop>
A7 00 03 # goto +3            # goto <175:body>
# <175:body>
15 04    # vload 4            # l
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (l != NULL) goto <177:then>
A7 00 AE # goto +174          # goto <178:else>
# <177:then>
15 04    # vload 4            # l
15 00    # vload 0            # start
A0 00 06 # if_cmpne +6        # if (l != start) goto <183:and>
A7 00 46 # goto +70           # goto <181:else>
# <183:and>
15 04    # vload 4            # l
15 01    # vload 1            # end
A0 00 06 # if_cmpne +6        # if (l != end) goto <180:then>
A7 00 3C # goto +60           # goto <181:else>
# <180:then>
15 04    # vload 4            # l
62 10    # aaddf 16           # &l->prev
2F       # amload             # l->prev
62 00    # aaddf 0            # &l->prev->next
2F       # amload             # l->prev->next
15 04    # vload 4            # l
A0 00 22 # if_cmpne +34       # if (l->prev->next != l) goto <184:then>
A7 00 03 # goto +3            # goto <188:or>
# <188:or>
15 04    # vload 4            # l
62 00    # aaddf 0            # &l->next
2F       # amload             # l->next
01       # aconst_null        # NULL
9F 00 16 # if_cmpeq +22       # if (l->next == NULL) goto <184:then>
A7 00 03 # goto +3            # goto <187:or>
# <187:or>
15 04    # vload 4            # l
62 00    # aaddf 0            # &l->next
2F       # amload             # l->next
62 10    # aaddf 16           # &l->next->prev
2F       # amload             # l->next->prev
15 04    # vload 4            # l
A0 00 06 # if_cmpne +6        # if (l->next->prev != l) goto <184:then>
A7 00 0D # goto +13           # goto <185:else>
# <184:then>
10 00    # bipush 0           # false
36 03    # vstore 3           # _result = false;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <186:endif>
# <185:else>
# <186:endif>
A7 00 57 # goto +87           # goto <182:endif>
# <181:else>
15 04    # vload 4            # l
15 00    # vload 0            # start
9F 00 06 # if_cmpeq +6        # if (l == start) goto <189:then>
A7 00 2C # goto +44           # goto <190:else>
# <189:then>
15 04    # vload 4            # l
62 00    # aaddf 0            # &l->next
2F       # amload             # l->next
01       # aconst_null        # NULL
9F 00 16 # if_cmpeq +22       # if (l->next == NULL) goto <192:then>
A7 00 03 # goto +3            # goto <195:or>
# <195:or>
15 04    # vload 4            # l
62 00    # aaddf 0            # &l->next
2F       # amload             # l->next
62 10    # aaddf 16           # &l->next->prev
2F       # amload             # l->next->prev
15 04    # vload 4            # l
A0 00 06 # if_cmpne +6        # if (l->next->prev != l) goto <192:then>
A7 00 0D # goto +13           # goto <193:else>
# <192:then>
10 00    # bipush 0           # false
36 03    # vstore 3           # _result = false;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <194:endif>
# <193:else>
# <194:endif>
A7 00 24 # goto +36           # goto <191:endif>
# <190:else>
15 04    # vload 4            # l
62 10    # aaddf 16           # &l->prev
2F       # amload             # l->prev
62 00    # aaddf 0            # &l->prev->next
2F       # amload             # l->prev->next
15 04    # vload 4            # l
A0 00 06 # if_cmpne +6        # if (l->prev->next != l) goto <196:then>
A7 00 0D # goto +13           # goto <197:else>
# <196:then>
10 00    # bipush 0           # false
36 03    # vstore 3           # _result = false;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <198:endif>
# <197:else>
# <198:endif>
10 01    # bipush 1           # true
36 03    # vstore 3           # _result = true;
15 03    # vload 3            # _result
B0       # return             # 
# <191:endif>
# <182:endif>
15 04    # vload 4            # l
62 00    # aaddf 0            # &l->next
2F       # amload             # l->next
36 04    # vstore 4           # l = l->next;
A7 00 06 # goto +6            # goto <179:endif>
# <178:else>
A7 00 06 # goto +6            # break
# <179:endif>
A7 FF 46 # goto -186          # goto <174:loop>
# <176:exit>
10 00    # bipush 0           # false
36 03    # vstore 3           # _result = false;
15 03    # vload 3            # _result
B0       # return             # 


#<is_cursor_valid>
04                # number of arguments = 4
06                # number of local variables = 6
00 A3             # code length = 163 bytes
15 02    # vload 2            # cursor
15 00    # vload 0            # start
9F 00 0F # if_cmpeq +15       # if (cursor == start) goto <199:then>
A7 00 03 # goto +3            # goto <202:or>
# <202:or>
15 00    # vload 0            # start
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (start == NULL) goto <199:then>
A7 00 0D # goto +13           # goto <200:else>
# <199:then>
10 00    # bipush 0           # false
36 04    # vstore 4           # _result = false;
15 04    # vload 4            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <201:endif>
# <200:else>
# <201:endif>
15 02    # vload 2            # cursor
15 01    # vload 1            # end
9F 00 06 # if_cmpeq +6        # if (cursor == end) goto <203:then>
A7 00 0D # goto +13           # goto <204:else>
# <203:then>
10 01    # bipush 1           # true
36 04    # vstore 4           # _result = true;
15 04    # vload 4            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <205:endif>
# <204:else>
# <205:endif>
15 00    # vload 0            # start
62 00    # aaddf 0            # &start->next
2F       # amload             # start->next
36 05    # vstore 5           # l = start->next;
# <206:loop>
A7 00 03 # goto +3            # goto <207:body>
# <207:body>
15 05    # vload 5            # l
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (l != NULL) goto <212:and>
A7 00 55 # goto +85           # goto <210:else>
# <212:and>
15 05    # vload 5            # l
15 01    # vload 1            # end
A0 00 06 # if_cmpne +6        # if (l != end) goto <209:then>
A7 00 4B # goto +75           # goto <210:else>
# <209:then>
15 02    # vload 2            # cursor
15 05    # vload 5            # l
9F 00 06 # if_cmpeq +6        # if (cursor == l) goto <213:then>
A7 00 37 # goto +55           # goto <214:else>
# <213:then>
15 02    # vload 2            # cursor
62 10    # aaddf 16           # &cursor->prev
2F       # amload             # cursor->prev
62 00    # aaddf 0            # &cursor->prev->next
2F       # amload             # cursor->prev->next
15 02    # vload 2            # cursor
9F 00 06 # if_cmpeq +6        # if (cursor->prev->next == cursor) goto <216:cond_true>
A7 00 1D # goto +29           # goto <217:cond_false>
# <216:cond_true>
15 02    # vload 2            # cursor
62 00    # aaddf 0            # &cursor->next
2F       # amload             # cursor->next
62 10    # aaddf 16           # &cursor->next->prev
2F       # amload             # cursor->next->prev
15 02    # vload 2            # cursor
9F 00 06 # if_cmpeq +6        # if (cursor->next->prev == cursor) goto <219:cond_true>
A7 00 08 # goto +8            # goto <220:cond_false>
# <219:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <221:cond_end>
# <220:cond_false>
10 00    # bipush 0           # false
# <221:cond_end>
A7 00 05 # goto +5            # goto <218:cond_end>
# <217:cond_false>
10 00    # bipush 0           # false
# <218:cond_end>
36 04    # vstore 4           # _result = ((cursor->prev->next == cursor) && (cursor->next->prev == cursor));
15 04    # vload 4            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <215:endif>
# <214:else>
# <215:endif>
15 05    # vload 5            # l
62 00    # aaddf 0            # &l->next
2F       # amload             # l->next
36 05    # vstore 5           # l = l->next;
A7 00 06 # goto +6            # goto <211:endif>
# <210:else>
A7 00 06 # goto +6            # break
# <211:endif>
A7 FF 9F # goto -97           # goto <206:loop>
# <208:exit>
10 00    # bipush 0           # false
36 04    # vstore 4           # _result = false;
15 04    # vload 4            # _result
B0       # return             # 


#<extract_tbuf>
02                # number of arguments = 2
03                # number of local variables = 3
00 07             # code length = 7 bytes
15 00    # vload 0            # B
36 02    # vstore 2           # _result = B;
15 02    # vload 2            # _result
B0       # return             # 


#<row>
02                # number of arguments = 2
03                # number of local variables = 3
00 0D             # code length = 13 bytes
15 00    # vload 0            # B
14 1A 3A # aldc 6714          # s[6714] = "row (tbuf-test.c0: 21.27-21.38)"
B8 00 2E # invokestatic 46    # tbuf_row(B, "row (tbuf-test.c0: 21.27-21.38)")
36 02    # vstore 2           # _result = tbuf_row(B, "row (tbuf-test.c0: 21.27-21.38)");
15 02    # vload 2            # _result
B0       # return             # 


#<col>
02                # number of arguments = 2
03                # number of local variables = 3
00 0D             # code length = 13 bytes
15 00    # vload 0            # B
14 1A 5A # aldc 6746          # s[6746] = "col (tbuf-test.c0: 22.27-22.38)"
B8 00 2F # invokestatic 47    # tbuf_col(B, "col (tbuf-test.c0: 22.27-22.38)")
36 02    # vstore 2           # _result = tbuf_col(B, "col (tbuf-test.c0: 22.27-22.38)");
15 02    # vload 2            # _result
B0       # return             # 


#<new>
01                # number of arguments = 1
02                # number of local variables = 2
00 0B             # code length = 11 bytes
14 1A 7A # aldc 6778          # s[6778] = "new (tbuf-test.c0: 23.22-23.32)"
B8 00 29 # invokestatic 41    # tbuf_new("new (tbuf-test.c0: 23.22-23.32)")
36 01    # vstore 1           # _result = tbuf_new("new (tbuf-test.c0: 23.22-23.32)");
15 01    # vload 1            # _result
B0       # return             # 


#<forward>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # B
14 1A 9A # aldc 6810          # s[6810] = "forward (tbuf-test.c0: 24.25-24.40)"
B8 00 2A # invokestatic 42    # tbuf_forward(B, "forward (tbuf-test.c0: 24.25-24.40)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<backward>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # B
14 1A BE # aldc 6846          # s[6846] = "backward (tbuf-test.c0: 25.26-25.42)"
B8 00 2B # invokestatic 43    # tbuf_backward(B, "backward (tbuf-test.c0: 25.26-25.42)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<insert>
03                # number of arguments = 3
03                # number of local variables = 3
00 0E             # code length = 14 bytes
15 00    # vload 0            # B
15 01    # vload 1            # c
14 1A E3 # aldc 6883          # s[6883] = "insert (tbuf-test.c0: 26.32-26.49)"
B8 00 2C # invokestatic 44    # tbuf_insert(B, c, "insert (tbuf-test.c0: 26.32-26.49)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<delete>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # B
14 1B 06 # aldc 6918          # s[6918] = "delete (tbuf-test.c0: 27.24-27.38)"
B8 00 2D # invokestatic 45    # tbuf_delete(B, "delete (tbuf-test.c0: 27.24-27.38)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<visualize_tbuf>
02                # number of arguments = 2
03                # number of local variables = 3
00 EA             # code length = 234 bytes
14 1B 29 # aldc 6953          # s[6953] = "START"
14 1B 2F # aldc 6959          # s[6959] = "visualize_tbuf (test-main.c0: 22.3-22.18)"
B8 00 01 # invokestatic 1     # print__1("START", "visualize_tbuf (test-main.c0: 22.3-22.18)")
57       # pop                # (ignore result)
15 00    # vload 0            # B
62 00    # aaddf 0            # &B->start
2F       # amload             # B->start
62 00    # aaddf 0            # &B->start->next
2F       # amload             # B->start->next
36 02    # vstore 2           # L = B->start->next;
# <259:loop>
A7 00 03 # goto +3            # goto <260:body>
# <260:body>
15 02    # vload 2            # L
15 00    # vload 0            # B
62 10    # aaddf 16           # &B->end
2F       # amload             # B->end
A0 00 06 # if_cmpne +6        # if (L != B->end) goto <262:then>
A7 00 99 # goto +153          # goto <263:else>
# <262:then>
14 1B 59 # aldc 7001          # s[7001] = " <--> "
14 1B 60 # aldc 7008          # s[7008] = "visualize_tbuf (test-main.c0: 24.5-24.21)"
B8 00 01 # invokestatic 1     # print__1(" <--> ", "visualize_tbuf (test-main.c0: 24.5-24.21)")
57       # pop                # (ignore result)
15 02    # vload 2            # L
15 00    # vload 0            # B
62 08    # aaddf 8            # &B->cursor
2F       # amload             # B->cursor
9F 00 06 # if_cmpeq +6        # if (L == B->cursor) goto <265:then>
A7 00 10 # goto +16           # goto <266:else>
# <265:then>
14 1B 8A # aldc 7050          # s[7050] = "_"
14 1B 8C # aldc 7052          # s[7052] = "visualize_tbuf (test-main.c0: 25.25-25.36)"
B8 00 01 # invokestatic 1     # print__1("_", "visualize_tbuf (test-main.c0: 25.25-25.36)")
57       # pop                # (ignore result)
A7 00 03 # goto +3            # goto <267:endif>
# <266:else>
# <267:endif>
14 1B B7 # aldc 7095          # s[7095] = "\'"
14 1B B9 # aldc 7097          # s[7097] = "visualize_tbuf (test-main.c0: 26.5-26.16)"
B8 00 01 # invokestatic 1     # print__1("\'", "visualize_tbuf (test-main.c0: 26.5-26.16)")
57       # pop                # (ignore result)
15 02    # vload 2            # L
62 08    # aaddf 8            # &L->data
34       # cmload             # L->data
10 0A    # bipush 10          # '\n'
9F 00 06 # if_cmpeq +6        # if (L->data == '\n') goto <268:then>
A7 00 10 # goto +16           # goto <269:else>
# <268:then>
14 1B E3 # aldc 7139          # s[7139] = "\\n"
14 1B E6 # aldc 7142          # s[7142] = "visualize_tbuf (test-main.c0: 27.26-27.39)"
B8 00 01 # invokestatic 1     # print__1("\\n", "visualize_tbuf (test-main.c0: 27.26-27.39)")
57       # pop                # (ignore result)
A7 00 23 # goto +35           # goto <270:endif>
# <269:else>
14 1C 11 # aldc 7185          # s[7185] = ""
14 1C 12 # aldc 7186          # s[7186] = "visualize_tbuf (test-main.c0: 28.10-28.31)"
B8 00 01 # invokestatic 1     # print__1("", "visualize_tbuf (test-main.c0: 28.10-28.31)")
57       # pop                # (ignore result)
15 02    # vload 2            # L
62 08    # aaddf 8            # &L->data
34       # cmload             # L->data
14 1C 3D # aldc 7229          # s[7229] = "visualize_tbuf (test-main.c0: 28.10-28.31)"
B8 00 05 # invokestatic 5     # printchar__1(L->data, "visualize_tbuf (test-main.c0: 28.10-28.31)")
57       # pop                # (ignore result)
14 1C 68 # aldc 7272          # s[7272] = ""
14 1C 69 # aldc 7273          # s[7273] = "visualize_tbuf (test-main.c0: 28.10-28.31)"
B8 00 01 # invokestatic 1     # print__1("", "visualize_tbuf (test-main.c0: 28.10-28.31)")
57       # pop                # (ignore result)
# <270:endif>
14 1C 94 # aldc 7316          # s[7316] = "\'"
14 1C 96 # aldc 7318          # s[7318] = "visualize_tbuf (test-main.c0: 29.5-29.16)"
B8 00 01 # invokestatic 1     # print__1("\'", "visualize_tbuf (test-main.c0: 29.5-29.16)")
57       # pop                # (ignore result)
15 02    # vload 2            # L
15 00    # vload 0            # B
62 08    # aaddf 8            # &B->cursor
2F       # amload             # B->cursor
9F 00 06 # if_cmpeq +6        # if (L == B->cursor) goto <271:then>
A7 00 10 # goto +16           # goto <272:else>
# <271:then>
14 1C C0 # aldc 7360          # s[7360] = "_"
14 1C C2 # aldc 7362          # s[7362] = "visualize_tbuf (test-main.c0: 30.25-30.36)"
B8 00 01 # invokestatic 1     # print__1("_", "visualize_tbuf (test-main.c0: 30.25-30.36)")
57       # pop                # (ignore result)
A7 00 03 # goto +3            # goto <273:endif>
# <272:else>
# <273:endif>
15 02    # vload 2            # L
62 00    # aaddf 0            # &L->next
2F       # amload             # L->next
36 02    # vstore 2           # L = L->next;
A7 00 06 # goto +6            # goto <264:endif>
# <263:else>
A7 00 06 # goto +6            # break
# <264:endif>
A7 FF 57 # goto -169          # goto <259:loop>
# <261:exit>
15 00    # vload 0            # B
62 08    # aaddf 8            # &B->cursor
2F       # amload             # B->cursor
15 00    # vload 0            # B
62 10    # aaddf 16           # &B->end
2F       # amload             # B->end
9F 00 06 # if_cmpeq +6        # if (B->cursor == B->end) goto <274:then>
A7 00 10 # goto +16           # goto <275:else>
# <274:then>
14 1C ED # aldc 7405          # s[7405] = " <--> _END_\n"
14 1C FA # aldc 7418          # s[7418] = "visualize_tbuf (test-main.c0: 33.28-33.51)"
B8 00 01 # invokestatic 1     # print__1(" <--> _END_\n", "visualize_tbuf (test-main.c0: 33.28-33.51)")
57       # pop                # (ignore result)
A7 00 0D # goto +13           # goto <276:endif>
# <275:else>
14 1D 25 # aldc 7461          # s[7461] = " <--> END\n"
14 1D 30 # aldc 7472          # s[7472] = "visualize_tbuf (test-main.c0: 34.8-34.29)"
B8 00 01 # invokestatic 1     # print__1(" <--> END\n", "visualize_tbuf (test-main.c0: 34.8-34.29)")
57       # pop                # (ignore result)
# <276:endif>
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<process_char>
03                # number of arguments = 3
03                # number of local variables = 3
00 AD             # code length = 173 bytes
15 01    # vload 1            # c
10 3C    # bipush 60          # '<'
9F 00 06 # if_cmpeq +6        # if (c == '<') goto <277:then>
A7 00 19 # goto +25           # goto <278:else>
# <277:then>
14 1D 5A # aldc 7514          # s[7514] = "<=   : "
14 1D 62 # aldc 7522          # s[7522] = "process_char (test-main.c0: 40.5-40.22)"
B8 00 01 # invokestatic 1     # print__1("<=   : ", "process_char (test-main.c0: 40.5-40.22)")
57       # pop                # (ignore result)
15 00    # vload 0            # BUF
14 1D 8A # aldc 7562          # s[7562] = "process_char (test-main.c0: 41.5-41.18)"
B8 00 37 # invokestatic 55    # backward(BUF, "process_char (test-main.c0: 41.5-41.18)")
57       # pop                # (ignore result)
A7 00 8D # goto +141          # goto <279:endif>
# <278:else>
15 01    # vload 1            # c
10 3E    # bipush 62          # '>'
9F 00 06 # if_cmpeq +6        # if (c == '>') goto <280:then>
A7 00 19 # goto +25           # goto <281:else>
# <280:then>
14 1D B2 # aldc 7602          # s[7602] = "=>   : "
14 1D BA # aldc 7610          # s[7610] = "process_char (test-main.c0: 43.5-43.22)"
B8 00 01 # invokestatic 1     # print__1("=>   : ", "process_char (test-main.c0: 43.5-43.22)")
57       # pop                # (ignore result)
15 00    # vload 0            # BUF
14 1D E2 # aldc 7650          # s[7650] = "process_char (test-main.c0: 44.5-44.17)"
B8 00 36 # invokestatic 54    # forward(BUF, "process_char (test-main.c0: 44.5-44.17)")
57       # pop                # (ignore result)
A7 00 6D # goto +109          # goto <282:endif>
# <281:else>
15 01    # vload 1            # c
10 5E    # bipush 94          # '^'
9F 00 06 # if_cmpeq +6        # if (c == '^') goto <283:then>
A7 00 19 # goto +25           # goto <284:else>
# <283:then>
14 1E 0A # aldc 7690          # s[7690] = "del  : "
14 1E 12 # aldc 7698          # s[7698] = "process_char (test-main.c0: 46.5-46.22)"
B8 00 01 # invokestatic 1     # print__1("del  : ", "process_char (test-main.c0: 46.5-46.22)")
57       # pop                # (ignore result)
15 00    # vload 0            # BUF
14 1E 3A # aldc 7738          # s[7738] = "process_char (test-main.c0: 47.5-47.16)"
B8 00 39 # invokestatic 57    # delete(BUF, "process_char (test-main.c0: 47.5-47.16)")
57       # pop                # (ignore result)
A7 00 4D # goto +77           # goto <285:endif>
# <284:else>
15 01    # vload 1            # c
10 40    # bipush 64          # '@'
9F 00 06 # if_cmpeq +6        # if (c == '@') goto <286:then>
A7 00 1B # goto +27           # goto <287:else>
# <286:then>
14 1E 62 # aldc 7778          # s[7778] = "enter: "
14 1E 6A # aldc 7786          # s[7786] = "process_char (test-main.c0: 49.5-49.22)"
B8 00 01 # invokestatic 1     # print__1("enter: ", "process_char (test-main.c0: 49.5-49.22)")
57       # pop                # (ignore result)
15 00    # vload 0            # BUF
10 0A    # bipush 10          # '\n'
14 1E 92 # aldc 7826          # s[7826] = "process_char (test-main.c0: 50.5-50.21)"
B8 00 38 # invokestatic 56    # insert(BUF, '\n', "process_char (test-main.c0: 50.5-50.21)")
57       # pop                # (ignore result)
A7 00 2B # goto +43           # goto <288:endif>
# <287:else>
14 1E BA # aldc 7866          # s[7866] = "\'"
14 1E BC # aldc 7868          # s[7868] = "process_char (test-main.c0: 52.5-52.26)"
B8 00 01 # invokestatic 1     # print__1("\'", "process_char (test-main.c0: 52.5-52.26)")
57       # pop                # (ignore result)
15 01    # vload 1            # c
14 1E E4 # aldc 7908          # s[7908] = "process_char (test-main.c0: 52.5-52.26)"
B8 00 05 # invokestatic 5     # printchar__1(c, "process_char (test-main.c0: 52.5-52.26)")
57       # pop                # (ignore result)
14 1F 0C # aldc 7948          # s[7948] = "\'  : "
14 1F 12 # aldc 7954          # s[7954] = "process_char (test-main.c0: 52.5-52.26)"
B8 00 01 # invokestatic 1     # print__1("\'  : ", "process_char (test-main.c0: 52.5-52.26)")
57       # pop                # (ignore result)
15 00    # vload 0            # BUF
15 01    # vload 1            # c
14 1F 3A # aldc 7994          # s[7994] = "process_char (test-main.c0: 53.5-53.18)"
B8 00 38 # invokestatic 56    # insert(BUF, c, "process_char (test-main.c0: 53.5-53.18)")
57       # pop                # (ignore result)
# <288:endif>
# <285:endif>
# <282:endif>
# <279:endif>
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<visualize_position>
02                # number of arguments = 2
02                # number of local variables = 2
00 3F             # code length = 63 bytes
14 1F 62 # aldc 8034          # s[8034] = "       Position: ("
14 1F 75 # aldc 8053          # s[8053] = "visualize_position (test-main.c0: 58.3-58.59)"
B8 00 01 # invokestatic 1     # print__1("       Position: (", "visualize_position (test-main.c0: 58.3-58.59)")
57       # pop                # (ignore result)
15 00    # vload 0            # BUF
14 1F A3 # aldc 8099          # s[8099] = "visualize_position (test-main.c0: 58.40-58.48)"
B8 00 33 # invokestatic 51    # row(BUF, "visualize_position (test-main.c0: 58.40-58.48)")
14 1F D2 # aldc 8146          # s[8146] = "visualize_position (test-main.c0: 58.3-58.59)"
B8 00 03 # invokestatic 3     # printint__1(row(BUF, "visualize_position (test-main.c0: 58.40-58.48)"), "visualize_position (test-main.c0: 58.3-58.59)")
57       # pop                # (ignore result)
14 20 00 # aldc 8192          # s[8192] = ","
14 20 02 # aldc 8194          # s[8194] = "visualize_position (test-main.c0: 58.3-58.59)"
B8 00 01 # invokestatic 1     # print__1(",", "visualize_position (test-main.c0: 58.3-58.59)")
57       # pop                # (ignore result)
15 00    # vload 0            # BUF
14 20 30 # aldc 8240          # s[8240] = "visualize_position (test-main.c0: 58.50-58.58)"
B8 00 34 # invokestatic 52    # col(BUF, "visualize_position (test-main.c0: 58.50-58.58)")
14 20 5F # aldc 8287          # s[8287] = "visualize_position (test-main.c0: 58.3-58.59)"
B8 00 03 # invokestatic 3     # printint__1(col(BUF, "visualize_position (test-main.c0: 58.50-58.58)"), "visualize_position (test-main.c0: 58.3-58.59)")
57       # pop                # (ignore result)
14 20 8D # aldc 8333          # s[8333] = ")\n"
14 20 90 # aldc 8336          # s[8336] = "visualize_position (test-main.c0: 58.3-58.59)"
B8 00 01 # invokestatic 1     # print__1(")\n", "visualize_position (test-main.c0: 58.3-58.59)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<process_string>
03                # number of arguments = 3
05                # number of local variables = 5
00 9E             # code length = 158 bytes
15 01    # vload 1            # s
14 20 BE # aldc 8382          # s[8382] = "process_string (test-main.c0: 62.15-62.31)"
B8 00 16 # invokestatic 22    # string_length__1(s, "process_string (test-main.c0: 62.15-62.31)")
36 03    # vstore 3           # limit = string_length__1(s, "process_string (test-main.c0: 62.15-62.31)");
10 00    # bipush 0           # 0
36 04    # vstore 4           # i = 0;
# <289:loop>
A7 00 03 # goto +3            # goto <290:body>
# <290:body>
15 04    # vload 4            # i
15 03    # vload 3            # limit
A1 00 06 # if_icmplt +6       # if (i < limit) goto <292:then>
A7 00 7D # goto +125          # goto <293:else>
# <292:then>
14 20 E9 # aldc 8425          # s[8425] = ""
14 20 EA # aldc 8426          # s[8426] = "process_string (test-main.c0: 64.5-64.51)"
B8 00 01 # invokestatic 1     # print__1("", "process_string (test-main.c0: 64.5-64.51)")
57       # pop                # (ignore result)
14 21 14 # aldc 8468          # s[8468] = "processstring-- i is"
14 21 29 # aldc 8489          # s[8489] = "process_string (test-main.c0: 64.5-64.51)"
B8 00 01 # invokestatic 1     # print__1("processstring-- i is", "process_string (test-main.c0: 64.5-64.51)")
57       # pop                # (ignore result)
14 21 53 # aldc 8531          # s[8531] = ""
14 21 54 # aldc 8532          # s[8532] = "process_string (test-main.c0: 64.5-64.51)"
B8 00 01 # invokestatic 1     # print__1("", "process_string (test-main.c0: 64.5-64.51)")
57       # pop                # (ignore result)
15 04    # vload 4            # i
14 21 7E # aldc 8574          # s[8574] = "process_string (test-main.c0: 64.5-64.51)"
B8 00 03 # invokestatic 3     # printint__1(i, "process_string (test-main.c0: 64.5-64.51)")
57       # pop                # (ignore result)
14 21 A8 # aldc 8616          # s[8616] = ""
14 21 A9 # aldc 8617          # s[8617] = "process_string (test-main.c0: 64.5-64.51)"
B8 00 01 # invokestatic 1     # print__1("", "process_string (test-main.c0: 64.5-64.51)")
57       # pop                # (ignore result)
14 21 D3 # aldc 8659          # s[8659] = "\n"
14 21 D5 # aldc 8661          # s[8661] = "process_string (test-main.c0: 64.5-64.51)"
B8 00 01 # invokestatic 1     # print__1("\n", "process_string (test-main.c0: 64.5-64.51)")
57       # pop                # (ignore result)
14 21 FF # aldc 8703          # s[8703] = ""
14 22 00 # aldc 8704          # s[8704] = "process_string (test-main.c0: 64.5-64.51)"
B8 00 01 # invokestatic 1     # print__1("", "process_string (test-main.c0: 64.5-64.51)")
57       # pop                # (ignore result)
15 00    # vload 0            # BUF
15 01    # vload 1            # s
15 04    # vload 4            # i
14 22 2A # aldc 8746          # s[8746] = "process_string (test-main.c0: 65.23-65.42)"
B8 00 17 # invokestatic 23    # string_charat__1(s, i, "process_string (test-main.c0: 65.23-65.42)")
14 22 55 # aldc 8789          # s[8789] = "process_string (test-main.c0: 65.5-65.43)"
B8 00 3B # invokestatic 59    # process_char(BUF, string_charat__1(s, i, "process_string (test-main.c0: 65.23-65.42)"), "process_string (test-main.c0: 65.5-65.43)")
57       # pop                # (ignore result)
15 00    # vload 0            # BUF
14 22 7F # aldc 8831          # s[8831] = "process_string (test-main.c0: 66.20-66.37)"
B8 00 32 # invokestatic 50    # extract_tbuf(BUF, "process_string (test-main.c0: 66.20-66.37)")
14 22 AA # aldc 8874          # s[8874] = "process_string (test-main.c0: 66.5-66.38)"
B8 00 3A # invokestatic 58    # visualize_tbuf(extract_tbuf(BUF, "process_string (test-main.c0: 66.20-66.37)"), "process_string (test-main.c0: 66.5-66.38)")
57       # pop                # (ignore result)
15 00    # vload 0            # BUF
14 22 D4 # aldc 8916          # s[8916] = "process_string (test-main.c0: 67.5-67.28)"
B8 00 3C # invokestatic 60    # visualize_position(BUF, "process_string (test-main.c0: 67.5-67.28)")
57       # pop                # (ignore result)
15 04    # vload 4            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 04    # vstore 4           # i += 1;
A7 00 06 # goto +6            # goto <294:endif>
# <293:else>
A7 00 06 # goto +6            # break
# <294:endif>
A7 FF 76 # goto -138          # goto <289:loop>
# <291:exit>
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<test>
01                # number of arguments = 1
03                # number of local variables = 3
00 D9             # code length = 217 bytes
14 22 FE # aldc 8958          # s[8958] = "test (test-main.c0: 73.18-73.23)"
B8 00 35 # invokestatic 53    # new("test (test-main.c0: 73.18-73.23)")
36 01    # vstore 1           # BUF = new("test (test-main.c0: 73.18-73.23)");
14 23 1F # aldc 8991          # s[8991] = "Visualizing an initially-empty text buffer.\n"
14 23 4C # aldc 9036          # s[9036] = "test (test-main.c0: 74.3-74.58)"
B8 00 01 # invokestatic 1     # print__1("Visualizing an initially-empty text buffer.\n", "test (test-main.c0: 74.3-74.58)")
57       # pop                # (ignore result)
14 23 6C # aldc 9068          # s[9068] = "The \'<\' character mimics going backwards (left arrow key)\n"
14 23 A7 # aldc 9127          # s[9127] = "test (test-main.c0: 75.3-75.72)"
B8 00 01 # invokestatic 1     # print__1("The \'<\' character mimics going backwards (left arrow key)\n", "test (test-main.c0: 75.3-75.72)")
57       # pop                # (ignore result)
14 23 C7 # aldc 9159          # s[9159] = "The \'>\' character mimics going forwards (right arrow key)\n"
14 24 02 # aldc 9218          # s[9218] = "test (test-main.c0: 76.3-76.72)"
B8 00 01 # invokestatic 1     # print__1("The \'>\' character mimics going forwards (right arrow key)\n", "test (test-main.c0: 76.3-76.72)")
57       # pop                # (ignore result)
14 24 22 # aldc 9250          # s[9250] = "The \'^\' character mimics deletion (delete key)\n"
14 24 52 # aldc 9298          # s[9298] = "test (test-main.c0: 77.3-77.61)"
B8 00 01 # invokestatic 1     # print__1("The \'^\' character mimics deletion (delete key)\n", "test (test-main.c0: 77.3-77.61)")
57       # pop                # (ignore result)
14 24 72 # aldc 9330          # s[9330] = "The \'@\' character mimics a newline (enter key)\n"
14 24 A2 # aldc 9378          # s[9378] = "test (test-main.c0: 78.3-78.61)"
B8 00 01 # invokestatic 1     # print__1("The \'@\' character mimics a newline (enter key)\n", "test (test-main.c0: 78.3-78.61)")
57       # pop                # (ignore result)
14 24 C2 # aldc 9410          # s[9410] = "All other characters just insert that character\n\n"
14 24 F4 # aldc 9460          # s[9460] = "test (test-main.c0: 79.3-79.64)"
B8 00 01 # invokestatic 1     # print__1("All other characters just insert that character\n\n", "test (test-main.c0: 79.3-79.64)")
57       # pop                # (ignore result)
14 25 14 # aldc 9492          # s[9492] = "Give initial input (empty line quits): "
14 25 3C # aldc 9532          # s[9532] = "test (test-main.c0: 80.3-80.52)"
B8 00 01 # invokestatic 1     # print__1("Give initial input (empty line quits): ", "test (test-main.c0: 80.3-80.52)")
57       # pop                # (ignore result)
14 25 5C # aldc 9564          # s[9564] = "test (test-main.c0: 81.3-81.10)"
B8 00 06 # invokestatic 6     # flush__1("test (test-main.c0: 81.3-81.10)")
57       # pop                # (ignore result)
14 25 7C # aldc 9596          # s[9596] = "test (test-main.c0: 83.14-83.24)"
B8 00 08 # invokestatic 8     # readline__1("test (test-main.c0: 83.14-83.24)")
36 02    # vstore 2           # s = readline__1("test (test-main.c0: 83.14-83.24)");
# <295:loop>
A7 00 03 # goto +3            # goto <296:body>
# <296:body>
14 25 9D # aldc 9629          # s[9629] = ""
15 02    # vload 2            # s
14 25 9E # aldc 9630          # s[9630] = "test (test-main.c0: 85.10-85.29)"
B8 00 1A # invokestatic 26    # string_equal__1("", s, "test (test-main.c0: 85.10-85.29)")
10 01    # bipush 1           # true
9F 00 59 # if_cmpeq +89       # if (string_equal__1("", s, "test (test-main.c0: 85.10-85.29)") == true) goto <299:else>
A7 00 03 # goto +3            # goto <298:then>
# <298:then>
14 25 BF # aldc 9663          # s[9663] = "test-- next loop\n"
14 25 D1 # aldc 9681          # s[9681] = "test (test-main.c0: 86.5-86.32)"
B8 00 01 # invokestatic 1     # print__1("test-- next loop\n", "test (test-main.c0: 86.5-86.32)")
57       # pop                # (ignore result)
14 25 F1 # aldc 9713          # s[9713] = "       "
14 25 F9 # aldc 9721          # s[9721] = "test (test-main.c0: 87.5-87.22)"
B8 00 01 # invokestatic 1     # print__1("       ", "test (test-main.c0: 87.5-87.22)")
57       # pop                # (ignore result)
15 01    # vload 1            # BUF
14 26 19 # aldc 9753          # s[9753] = "test (test-main.c0: 88.20-88.37)"
B8 00 32 # invokestatic 50    # extract_tbuf(BUF, "test (test-main.c0: 88.20-88.37)")
14 26 3A # aldc 9786          # s[9786] = "test (test-main.c0: 88.5-88.38)"
B8 00 3A # invokestatic 58    # visualize_tbuf(extract_tbuf(BUF, "test (test-main.c0: 88.20-88.37)"), "test (test-main.c0: 88.5-88.38)")
57       # pop                # (ignore result)
15 01    # vload 1            # BUF
14 26 5A # aldc 9818          # s[9818] = "test (test-main.c0: 89.5-89.28)"
B8 00 3C # invokestatic 60    # visualize_position(BUF, "test (test-main.c0: 89.5-89.28)")
57       # pop                # (ignore result)
15 01    # vload 1            # BUF
15 02    # vload 2            # s
14 26 7A # aldc 9850          # s[9850] = "test (test-main.c0: 90.5-90.27)"
B8 00 3D # invokestatic 61    # process_string(BUF, s, "test (test-main.c0: 90.5-90.27)")
57       # pop                # (ignore result)
14 26 9A # aldc 9882          # s[9882] = "Done. More input\? (empty line quits): "
14 26 C1 # aldc 9921          # s[9921] = "test (test-main.c0: 91.5-91.53)"
B8 00 01 # invokestatic 1     # print__1("Done. More input\? (empty line quits): ", "test (test-main.c0: 91.5-91.53)")
57       # pop                # (ignore result)
14 26 E1 # aldc 9953          # s[9953] = "test (test-main.c0: 92.5-92.12)"
B8 00 06 # invokestatic 6     # flush__1("test (test-main.c0: 92.5-92.12)")
57       # pop                # (ignore result)
14 27 01 # aldc 9985          # s[9985] = "test (test-main.c0: 93.9-93.19)"
B8 00 08 # invokestatic 8     # readline__1("test (test-main.c0: 93.9-93.19)")
36 02    # vstore 2           # s = readline__1("test (test-main.c0: 93.9-93.19)");
A7 00 06 # goto +6            # goto <300:endif>
# <299:else>
A7 00 06 # goto +6            # break
# <300:endif>
A7 FF 94 # goto -108          # goto <295:loop>
# <297:exit>
14 27 21 # aldc 10017         # s[10017] = "test-- everything is done\n"
14 27 3C # aldc 10044         # s[10044] = "test (test-main.c0: 95.3-95.39)"
B8 00 01 # invokestatic 1     # print__1("test-- everything is done\n", "test (test-main.c0: 95.3-95.39)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 

00 17             # native count
# native pool
00 01 00 06       # print
00 01 00 0A       # println
00 01 00 09       # printint
00 01 00 07       # printbool
00 01 00 08       # printchar
00 00 00 05       # flush
00 00 00 04       # eof
00 02 00 64       # string_join
00 00 00 0B       # readline
00 01 00 65       # string_length
00 02 00 5D       # string_charat
00 03 00 66       # string_sub
00 02 00 5F       # string_equal
00 02 00 5E       # string_compare
00 01 00 63       # string_fromint
00 01 00 61       # string_frombool
00 01 00 62       # string_fromchar
00 01 00 69       # string_tolower
00 02 00 67       # string_terminated
00 01 00 68       # string_to_chararray
00 01 00 60       # string_from_chararray
00 01 00 5C       # char_ord
00 01 00 5B       # char_chr


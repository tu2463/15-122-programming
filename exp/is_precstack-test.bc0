C0 C0 FF EE       # magic number
00 17             # version 11, arch = 1 (64 bits)

00 00             # int pool count
# int pool

5F 80             # string pool total size
# string pool
72 65 61 64 6C 69 6E 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 63 6F 6E 69 6F 2E 68 30 3A 20 31 34 2E 31 36 2D 31 34 2E 32 31 29 00  # "readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 63 6F 6E 69 6F 2E 68 30 3A 20 31 34 2E 36 2D 31 34 2E 32 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/conio.h0: 14.6-14.22: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 73 5F 73 65 67 6D 65 6E 74 5F 73 6C 69 73 74 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 32 33 2E 31 30 2D 32 33 2E 34 34 29 00  # "is_segment_slist (.tmp0/queue_of_string.c0: 23.10-23.44)"
69 73 5F 71 75 65 75 65 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 33 37 2E 38 2D 33 37 2E 34 33 29 00  # "is_queue (.tmp0/queue_of_string.c0: 37.8-37.43)"
71 75 65 75 65 5F 65 6D 70 74 79 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 34 31 2E 31 33 2D 34 31 2E 32 34 29 00  # "queue_empty (.tmp0/queue_of_string.c0: 41.13-41.24)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 34 31 2E 34 2D 34 31 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/queue_of_string.c0: 41.4-41.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 75 65 75 65 5F 69 73 5F 72 65 61 64 5F 6F 6E 6C 79 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 34 37 2E 31 33 2D 34 37 2E 32 34 29 00  # "queue_is_read_only (.tmp0/queue_of_string.c0: 47.13-47.24)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 34 37 2E 34 2D 34 37 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/queue_of_string.c0: 47.4-47.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 75 65 75 65 5F 6E 65 77 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 33 2E 31 32 2D 35 33 2E 32 39 29 00  # "queue_new (.tmp0/queue_of_string.c0: 53.12-53.29)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 33 2E 34 2D 35 33 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/queue_of_string.c0: 53.4-53.30: @ensures annotation failed"
71 75 65 75 65 5F 6E 65 77 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 34 2E 31 32 2D 35 34 2E 33 32 29 00  # "queue_new (.tmp0/queue_of_string.c0: 54.12-54.32)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 34 2E 34 2D 35 34 2E 33 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/queue_of_string.c0: 54.4-54.33: @ensures annotation failed"
65 6E 71 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 35 2E 31 33 2D 36 35 2E 32 34 29 00  # "enq (.tmp0/queue_of_string.c0: 65.13-65.24)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 35 2E 34 2D 36 35 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/queue_of_string.c0: 65.4-65.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
65 6E 71 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 36 2E 31 32 2D 36 36 2E 32 33 29 00  # "enq (.tmp0/queue_of_string.c0: 66.12-66.23)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 36 2E 34 2D 36 36 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/queue_of_string.c0: 66.4-66.24: @ensures annotation failed"
65 6E 71 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 37 2E 31 33 2D 36 37 2E 32 37 29 00  # "enq (.tmp0/queue_of_string.c0: 67.13-67.27)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 37 2E 34 2D 36 37 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/queue_of_string.c0: 67.4-67.28: @ensures annotation failed"
65 6E 71 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 36 2E 31 32 2D 36 36 2E 32 33 29 00  # "enq (.tmp0/queue_of_string.c0: 66.12-66.23)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 36 2E 34 2D 36 36 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/queue_of_string.c0: 66.4-66.24: @ensures annotation failed"
65 6E 71 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 37 2E 31 33 2D 36 37 2E 32 37 29 00  # "enq (.tmp0/queue_of_string.c0: 67.13-67.27)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 37 2E 34 2D 36 37 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/queue_of_string.c0: 67.4-67.28: @ensures annotation failed"
64 65 71 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 37 2E 31 33 2D 37 37 2E 32 34 29 00  # "deq (.tmp0/queue_of_string.c0: 77.13-77.24)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 37 2E 34 2D 37 37 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/queue_of_string.c0: 77.4-77.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 65 71 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 38 2E 31 34 2D 37 38 2E 32 38 29 00  # "deq (.tmp0/queue_of_string.c0: 78.14-78.28)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 38 2E 34 2D 37 38 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/queue_of_string.c0: 78.4-78.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 65 71 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 39 2E 31 32 2D 37 39 2E 32 33 29 00  # "deq (.tmp0/queue_of_string.c0: 79.12-79.23)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 39 2E 34 2D 37 39 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/queue_of_string.c0: 79.4-79.24: @ensures annotation failed"
71 75 65 75 65 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 38 37 2E 31 33 2D 38 37 2E 32 34 29 00  # "queue_print (.tmp0/queue_of_string.c0: 87.13-87.24)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 38 37 2E 34 2D 38 37 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/queue_of_string.c0: 87.4-87.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
5B 66 72 6F 6E 74 5D 20 00  # "[front] "
71 75 65 75 65 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 38 39 2E 33 2D 38 39 2E 32 31 29 00  # "queue_print (.tmp0/queue_of_string.c0: 89.3-89.21)"
00  # ""
71 75 65 75 65 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 31 2E 35 2D 39 31 2E 32 36 29 00  # "queue_print (.tmp0/queue_of_string.c0: 91.5-91.26)"
71 75 65 75 65 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 31 2E 35 2D 39 31 2E 32 36 29 00  # "queue_print (.tmp0/queue_of_string.c0: 91.5-91.26)"
00  # ""
71 75 65 75 65 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 31 2E 35 2D 39 31 2E 32 36 29 00  # "queue_print (.tmp0/queue_of_string.c0: 91.5-91.26)"
20 3C 3C 20 00  # " << "
71 75 65 75 65 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 32 2E 32 39 2D 39 32 2E 34 33 29 00  # "queue_print (.tmp0/queue_of_string.c0: 92.29-92.43)"
20 5B 62 61 63 6B 5D 00  # " [back]"
71 75 65 75 65 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 34 2E 33 2D 39 34 2E 32 30 29 00  # "queue_print (.tmp0/queue_of_string.c0: 94.3-94.20)"
71 75 65 75 65 5F 72 65 61 64 5F 6F 6E 6C 79 5F 63 6F 70 79 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 38 2E 31 33 2D 39 38 2E 32 34 29 00  # "queue_read_only_copy (.tmp0/queue_of_string.c0: 98.13-98.24)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 38 2E 34 2D 39 38 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/queue_of_string.c0: 98.4-98.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 75 65 75 65 5F 72 65 61 64 5F 6F 6E 6C 79 5F 63 6F 70 79 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 39 2E 31 32 2D 39 39 2E 32 33 29 00  # "queue_read_only_copy (.tmp0/queue_of_string.c0: 99.12-99.23)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 39 2E 34 2D 39 39 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/queue_of_string.c0: 99.4-99.24: @ensures annotation failed"
71 75 65 75 65 5F 72 65 61 64 5F 6F 6E 6C 79 5F 63 6F 70 79 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 30 2E 31 32 2D 31 30 30 2E 32 39 29 00  # "queue_read_only_copy (.tmp0/queue_of_string.c0: 100.12-100.29)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 30 2E 34 2D 31 30 30 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/queue_of_string.c0: 100.4-100.30: @ensures annotation failed"
71 75 65 75 65 5F 72 65 61 64 5F 6F 6E 6C 79 5F 63 6F 70 79 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 31 2E 31 32 2D 31 30 31 2E 33 39 29 00  # "queue_read_only_copy (.tmp0/queue_of_string.c0: 101.12-101.39)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 31 2E 34 2D 31 30 31 2E 34 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/queue_of_string.c0: 101.4-101.40: @ensures annotation failed"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 32 2E 34 2D 31 32 32 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/queue_of_string.c0: 122.4-122.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 75 65 75 65 5F 65 6D 70 74 79 5F 5F 31 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 31 2E 31 2D 31 32 32 2E 33 39 29 00  # "queue_empty__1 (.tmp0/queue_of_string.c0: 121.1-122.39)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 35 2E 34 2D 31 32 35 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/queue_of_string.c0: 125.4-125.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 75 65 75 65 5F 69 73 5F 72 65 61 64 5F 6F 6E 6C 79 5F 5F 31 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 34 2E 31 2D 31 32 35 2E 33 39 29 00  # "queue_is_read_only__1 (.tmp0/queue_of_string.c0: 124.1-125.39)"
71 75 65 75 65 5F 6E 65 77 5F 5F 31 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 37 2E 31 2D 31 32 39 2E 33 39 29 00  # "queue_new__1 (.tmp0/queue_of_string.c0: 127.1-129.39)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 38 2E 34 2D 31 32 38 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/queue_of_string.c0: 128.4-128.28: @ensures annotation failed"
71 75 65 75 65 5F 6E 65 77 5F 5F 31 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 39 2E 31 32 2D 31 32 39 2E 33 32 29 00  # "queue_new__1 (.tmp0/queue_of_string.c0: 129.12-129.32)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 39 2E 34 2D 31 32 39 2E 33 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/queue_of_string.c0: 129.4-129.33: @ensures annotation failed"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 32 2E 34 2D 31 33 32 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/queue_of_string.c0: 132.4-132.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
65 6E 71 5F 5F 31 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 31 2E 31 2D 31 33 33 2E 33 39 29 00  # "enq__1 (.tmp0/queue_of_string.c0: 131.1-133.39)"
65 6E 71 5F 5F 31 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 33 2E 31 33 2D 31 33 33 2E 32 37 29 00  # "enq__1 (.tmp0/queue_of_string.c0: 133.13-133.27)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 33 2E 34 2D 31 33 33 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/queue_of_string.c0: 133.4-133.28: @ensures annotation failed"
65 6E 71 5F 5F 31 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 33 2E 31 33 2D 31 33 33 2E 32 37 29 00  # "enq__1 (.tmp0/queue_of_string.c0: 133.13-133.27)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 33 2E 34 2D 31 33 33 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/queue_of_string.c0: 133.4-133.28: @ensures annotation failed"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 36 2E 34 2D 31 33 36 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/queue_of_string.c0: 136.4-136.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 65 71 5F 5F 31 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 37 2E 31 34 2D 31 33 37 2E 32 38 29 00  # "deq__1 (.tmp0/queue_of_string.c0: 137.14-137.28)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 37 2E 34 2D 31 33 37 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/queue_of_string.c0: 137.4-137.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 65 71 5F 5F 31 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 35 2E 31 2D 31 33 37 2E 33 39 29 00  # "deq__1 (.tmp0/queue_of_string.c0: 135.1-137.39)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 34 30 2E 34 2D 31 34 30 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/queue_of_string.c0: 140.4-140.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 75 65 75 65 5F 70 72 69 6E 74 5F 5F 31 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 39 2E 31 2D 31 34 30 2E 33 39 29 00  # "queue_print__1 (.tmp0/queue_of_string.c0: 139.1-140.39)"
71 75 65 75 65 5F 72 65 61 64 5F 6F 6E 6C 79 5F 63 6F 70 79 5F 5F 31 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 34 35 2E 31 2D 31 34 37 2E 34 36 29 00  # "queue_read_only_copy__1 (.tmp0/queue_of_string.c0: 145.1-147.46)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 34 36 2E 34 2D 31 34 36 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/queue_of_string.c0: 146.4-146.28: @ensures annotation failed"
71 75 65 75 65 5F 72 65 61 64 5F 6F 6E 6C 79 5F 63 6F 70 79 5F 5F 31 20 28 2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 34 37 2E 31 32 2D 31 34 37 2E 33 39 29 00  # "queue_read_only_copy__1 (.tmp0/queue_of_string.c0: 147.12-147.39)"
2E 74 6D 70 30 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 34 37 2E 34 2D 31 34 37 2E 34 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/queue_of_string.c0: 147.4-147.40: @ensures annotation failed"
69 73 5F 73 65 67 6D 65 6E 74 5F 69 6E 74 6C 69 73 74 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 32 33 2E 31 30 2D 32 33 2E 34 36 29 00  # "is_segment_intlist (.tmp0/stack_of_int.c0: 23.10-23.46)"
69 73 5F 69 73 74 61 63 6B 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 33 36 2E 38 2D 33 36 2E 34 34 29 00  # "is_istack (.tmp0/stack_of_int.c0: 36.8-36.44)"
69 73 74 61 63 6B 5F 65 6D 70 74 79 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 34 30 2E 31 33 2D 34 30 2E 32 35 29 00  # "istack_empty (.tmp0/stack_of_int.c0: 40.13-40.25)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 34 30 2E 34 2D 34 30 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_int.c0: 40.4-40.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 73 74 61 63 6B 5F 6E 65 77 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 34 36 2E 31 32 2D 34 36 2E 33 30 29 00  # "istack_new (.tmp0/stack_of_int.c0: 46.12-46.30)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 34 36 2E 34 2D 34 36 2E 33 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_int.c0: 46.4-46.31: @ensures annotation failed"
69 73 74 61 63 6B 5F 6E 65 77 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 34 37 2E 31 32 2D 34 37 2E 33 33 29 00  # "istack_new (.tmp0/stack_of_int.c0: 47.12-47.33)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 34 37 2E 34 2D 34 37 2E 33 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_int.c0: 47.4-47.34: @ensures annotation failed"
69 70 75 73 68 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 35 37 2E 31 33 2D 35 37 2E 32 35 29 00  # "ipush (.tmp0/stack_of_int.c0: 57.13-57.25)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 35 37 2E 34 2D 35 37 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_int.c0: 57.4-57.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 70 75 73 68 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 35 38 2E 31 32 2D 35 38 2E 32 34 29 00  # "ipush (.tmp0/stack_of_int.c0: 58.12-58.24)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 35 38 2E 34 2D 35 38 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_int.c0: 58.4-58.25: @ensures annotation failed"
69 70 6F 70 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 36 37 2E 31 33 2D 36 37 2E 32 35 29 00  # "ipop (.tmp0/stack_of_int.c0: 67.13-67.25)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 36 37 2E 34 2D 36 37 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_int.c0: 67.4-67.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 70 6F 70 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 36 38 2E 31 34 2D 36 38 2E 32 39 29 00  # "ipop (.tmp0/stack_of_int.c0: 68.14-68.29)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 36 38 2E 34 2D 36 38 2E 33 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_int.c0: 68.4-68.30: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 70 6F 70 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 36 39 2E 31 32 2D 36 39 2E 32 34 29 00  # "ipop (.tmp0/stack_of_int.c0: 69.12-69.24)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 36 39 2E 34 2D 36 39 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_int.c0: 69.4-69.25: @ensures annotation failed"
69 73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 37 37 2E 31 33 2D 37 37 2E 32 35 29 00  # "istack_print (.tmp0/stack_of_int.c0: 77.13-77.25)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 37 37 2E 34 2D 37 37 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_int.c0: 77.4-77.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
54 4F 50 3A 20 00  # "TOP: "
69 73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 37 39 2E 33 2D 37 39 2E 31 38 29 00  # "istack_print (.tmp0/stack_of_int.c0: 79.3-79.18)"
00  # ""
69 73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 38 31 2E 35 2D 38 31 2E 32 36 29 00  # "istack_print (.tmp0/stack_of_int.c0: 81.5-81.26)"
69 73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 38 31 2E 35 2D 38 31 2E 32 36 29 00  # "istack_print (.tmp0/stack_of_int.c0: 81.5-81.26)"
00  # ""
69 73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 38 31 2E 35 2D 38 31 2E 32 36 29 00  # "istack_print (.tmp0/stack_of_int.c0: 81.5-81.26)"
20 7C 20 00  # " | "
69 73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 38 32 2E 33 30 2D 38 32 2E 34 33 29 00  # "istack_print (.tmp0/stack_of_int.c0: 82.30-82.43)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 39 39 2E 34 2D 39 39 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_int.c0: 99.4-99.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 73 74 61 63 6B 5F 65 6D 70 74 79 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 39 38 2E 31 2D 39 39 2E 34 30 29 00  # "istack_empty__1 (.tmp0/stack_of_int.c0: 98.1-99.40)"
69 73 74 61 63 6B 5F 6E 65 77 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 31 2E 31 2D 31 30 33 2E 34 30 29 00  # "istack_new__1 (.tmp0/stack_of_int.c0: 101.1-103.40)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 32 2E 34 2D 31 30 32 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_int.c0: 102.4-102.28: @ensures annotation failed"
69 73 74 61 63 6B 5F 6E 65 77 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 33 2E 31 32 2D 31 30 33 2E 33 33 29 00  # "istack_new__1 (.tmp0/stack_of_int.c0: 103.12-103.33)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 33 2E 34 2D 31 30 33 2E 33 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_int.c0: 103.4-103.34: @ensures annotation failed"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 36 2E 34 2D 31 30 36 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_int.c0: 106.4-106.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 70 75 73 68 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 35 2E 31 2D 31 30 37 2E 34 30 29 00  # "ipush__1 (.tmp0/stack_of_int.c0: 105.1-107.40)"
69 70 75 73 68 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 37 2E 31 33 2D 31 30 37 2E 32 38 29 00  # "ipush__1 (.tmp0/stack_of_int.c0: 107.13-107.28)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 37 2E 34 2D 31 30 37 2E 32 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_int.c0: 107.4-107.29: @ensures annotation failed"
69 70 75 73 68 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 37 2E 31 33 2D 31 30 37 2E 32 38 29 00  # "ipush__1 (.tmp0/stack_of_int.c0: 107.13-107.28)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 37 2E 34 2D 31 30 37 2E 32 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_int.c0: 107.4-107.29: @ensures annotation failed"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 31 30 2E 34 2D 31 31 30 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_int.c0: 110.4-110.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 70 6F 70 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 31 31 2E 31 34 2D 31 31 31 2E 32 39 29 00  # "ipop__1 (.tmp0/stack_of_int.c0: 111.14-111.29)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 31 31 2E 34 2D 31 31 31 2E 33 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_int.c0: 111.4-111.30: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 70 6F 70 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 39 2E 31 2D 31 31 31 2E 34 30 29 00  # "ipop__1 (.tmp0/stack_of_int.c0: 109.1-111.40)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 31 34 2E 34 2D 31 31 34 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_int.c0: 114.4-114.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 73 74 61 63 6B 5F 70 72 69 6E 74 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 31 33 2E 31 2D 31 31 34 2E 34 30 29 00  # "istack_print__1 (.tmp0/stack_of_int.c0: 113.1-114.40)"
69 73 5F 73 65 67 6D 65 6E 74 5F 73 74 72 69 6E 67 6C 69 73 74 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 32 32 2E 31 30 2D 32 32 2E 34 39 29 00  # "is_segment_stringlist (.tmp0/stack_of_string.c0: 22.10-22.49)"
69 73 5F 73 74 61 63 6B 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 33 35 2E 38 2D 33 35 2E 34 37 29 00  # "is_stack (.tmp0/stack_of_string.c0: 35.8-35.47)"
73 74 61 63 6B 5F 65 6D 70 74 79 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 33 39 2E 31 33 2D 33 39 2E 32 34 29 00  # "stack_empty (.tmp0/stack_of_string.c0: 39.13-39.24)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 33 39 2E 34 2D 33 39 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_string.c0: 39.4-39.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 61 63 6B 5F 6E 65 77 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 34 35 2E 31 32 2D 34 35 2E 32 39 29 00  # "stack_new (.tmp0/stack_of_string.c0: 45.12-45.29)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 34 35 2E 34 2D 34 35 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_string.c0: 45.4-45.30: @ensures annotation failed"
73 74 61 63 6B 5F 6E 65 77 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 34 36 2E 31 32 2D 34 36 2E 33 32 29 00  # "stack_new (.tmp0/stack_of_string.c0: 46.12-46.32)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 34 36 2E 34 2D 34 36 2E 33 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_string.c0: 46.4-46.33: @ensures annotation failed"
70 75 73 68 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 36 2E 31 33 2D 35 36 2E 32 34 29 00  # "push (.tmp0/stack_of_string.c0: 56.13-56.24)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 36 2E 34 2D 35 36 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_string.c0: 56.4-56.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 75 73 68 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 37 2E 31 32 2D 35 37 2E 32 33 29 00  # "push (.tmp0/stack_of_string.c0: 57.12-57.23)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 37 2E 34 2D 35 37 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_string.c0: 57.4-57.24: @ensures annotation failed"
70 6F 70 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 36 2E 31 33 2D 36 36 2E 32 34 29 00  # "pop (.tmp0/stack_of_string.c0: 66.13-66.24)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 36 2E 34 2D 36 36 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_string.c0: 66.4-66.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 6F 70 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 37 2E 31 34 2D 36 37 2E 32 38 29 00  # "pop (.tmp0/stack_of_string.c0: 67.14-67.28)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 37 2E 34 2D 36 37 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_string.c0: 67.4-67.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 6F 70 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 38 2E 31 32 2D 36 38 2E 32 33 29 00  # "pop (.tmp0/stack_of_string.c0: 68.12-68.23)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 38 2E 34 2D 36 38 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_string.c0: 68.4-68.24: @ensures annotation failed"
73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 36 2E 31 33 2D 37 36 2E 32 34 29 00  # "stack_print (.tmp0/stack_of_string.c0: 76.13-76.24)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 36 2E 34 2D 37 36 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_string.c0: 76.4-76.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
54 4F 50 3A 20 00  # "TOP: "
73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 38 2E 33 2D 37 38 2E 31 38 29 00  # "stack_print (.tmp0/stack_of_string.c0: 78.3-78.18)"
00  # ""
73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 38 30 2E 35 2D 38 30 2E 32 36 29 00  # "stack_print (.tmp0/stack_of_string.c0: 80.5-80.26)"
73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 38 30 2E 35 2D 38 30 2E 32 36 29 00  # "stack_print (.tmp0/stack_of_string.c0: 80.5-80.26)"
00  # ""
73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 38 30 2E 35 2D 38 30 2E 32 36 29 00  # "stack_print (.tmp0/stack_of_string.c0: 80.5-80.26)"
20 7C 20 00  # " | "
73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 38 31 2E 33 30 2D 38 31 2E 34 33 29 00  # "stack_print (.tmp0/stack_of_string.c0: 81.30-81.43)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 39 2E 34 2D 39 39 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_string.c0: 99.4-99.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 61 63 6B 5F 65 6D 70 74 79 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 38 2E 31 2D 39 39 2E 33 39 29 00  # "stack_empty__1 (.tmp0/stack_of_string.c0: 98.1-99.39)"
73 74 61 63 6B 5F 6E 65 77 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 31 2E 31 2D 31 30 33 2E 33 39 29 00  # "stack_new__1 (.tmp0/stack_of_string.c0: 101.1-103.39)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 32 2E 34 2D 31 30 32 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_string.c0: 102.4-102.28: @ensures annotation failed"
73 74 61 63 6B 5F 6E 65 77 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 33 2E 31 32 2D 31 30 33 2E 33 32 29 00  # "stack_new__1 (.tmp0/stack_of_string.c0: 103.12-103.32)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 33 2E 34 2D 31 30 33 2E 33 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_string.c0: 103.4-103.33: @ensures annotation failed"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 36 2E 34 2D 31 30 36 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_string.c0: 106.4-106.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 75 73 68 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 35 2E 31 2D 31 30 37 2E 33 39 29 00  # "push__1 (.tmp0/stack_of_string.c0: 105.1-107.39)"
70 75 73 68 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 37 2E 31 33 2D 31 30 37 2E 32 37 29 00  # "push__1 (.tmp0/stack_of_string.c0: 107.13-107.27)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 37 2E 34 2D 31 30 37 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_string.c0: 107.4-107.28: @ensures annotation failed"
70 75 73 68 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 37 2E 31 33 2D 31 30 37 2E 32 37 29 00  # "push__1 (.tmp0/stack_of_string.c0: 107.13-107.27)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 37 2E 34 2D 31 30 37 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_string.c0: 107.4-107.28: @ensures annotation failed"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 30 2E 34 2D 31 31 30 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_string.c0: 110.4-110.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 6F 70 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 31 2E 31 34 2D 31 31 31 2E 32 38 29 00  # "pop__1 (.tmp0/stack_of_string.c0: 111.14-111.28)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 31 2E 34 2D 31 31 31 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_string.c0: 111.4-111.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 6F 70 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 39 2E 31 2D 31 31 31 2E 33 39 29 00  # "pop__1 (.tmp0/stack_of_string.c0: 109.1-111.39)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 34 2E 34 2D 31 31 34 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_string.c0: 114.4-114.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 61 63 6B 5F 70 72 69 6E 74 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 33 2E 31 2D 31 31 34 2E 33 39 29 00  # "stack_print__1 (.tmp0/stack_of_string.c0: 113.1-114.39)"
69 73 5F 73 65 67 6D 65 6E 74 5F 73 74 61 63 6B 6C 69 73 74 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 32 32 2E 31 30 2D 32 32 2E 34 38 29 00  # "is_segment_stacklist (.tmp0/stack_of_string_stacks.c0: 22.10-22.48)"
69 73 5F 73 73 74 61 63 6B 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 33 35 2E 38 2D 33 35 2E 34 36 29 00  # "is_sstack (.tmp0/stack_of_string_stacks.c0: 35.8-35.46)"
73 73 74 61 63 6B 5F 65 6D 70 74 79 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 33 39 2E 31 33 2D 33 39 2E 32 35 29 00  # "sstack_empty (.tmp0/stack_of_string_stacks.c0: 39.13-39.25)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 33 39 2E 34 2D 33 39 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_string_stacks.c0: 39.4-39.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 73 74 61 63 6B 5F 6E 65 77 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 34 35 2E 31 32 2D 34 35 2E 33 30 29 00  # "sstack_new (.tmp0/stack_of_string_stacks.c0: 45.12-45.30)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 34 35 2E 34 2D 34 35 2E 33 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_string_stacks.c0: 45.4-45.31: @ensures annotation failed"
73 73 74 61 63 6B 5F 6E 65 77 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 34 36 2E 31 32 2D 34 36 2E 33 33 29 00  # "sstack_new (.tmp0/stack_of_string_stacks.c0: 46.12-46.33)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 34 36 2E 34 2D 34 36 2E 33 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_string_stacks.c0: 46.4-46.34: @ensures annotation failed"
73 70 75 73 68 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 35 36 2E 31 33 2D 35 36 2E 32 35 29 00  # "spush (.tmp0/stack_of_string_stacks.c0: 56.13-56.25)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 35 36 2E 34 2D 35 36 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_string_stacks.c0: 56.4-56.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 70 75 73 68 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 35 37 2E 31 32 2D 35 37 2E 32 34 29 00  # "spush (.tmp0/stack_of_string_stacks.c0: 57.12-57.24)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 35 37 2E 34 2D 35 37 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_string_stacks.c0: 57.4-57.25: @ensures annotation failed"
73 70 6F 70 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 36 36 2E 31 33 2D 36 36 2E 32 35 29 00  # "spop (.tmp0/stack_of_string_stacks.c0: 66.13-66.25)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 36 36 2E 34 2D 36 36 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_string_stacks.c0: 66.4-66.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 70 6F 70 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 36 37 2E 31 34 2D 36 37 2E 32 39 29 00  # "spop (.tmp0/stack_of_string_stacks.c0: 67.14-67.29)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 36 37 2E 34 2D 36 37 2E 33 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_string_stacks.c0: 67.4-67.30: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 70 6F 70 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 36 38 2E 31 32 2D 36 38 2E 32 34 29 00  # "spop (.tmp0/stack_of_string_stacks.c0: 68.12-68.24)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 36 38 2E 34 2D 36 38 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_string_stacks.c0: 68.4-68.25: @ensures annotation failed"
73 73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 37 36 2E 31 33 2D 37 36 2E 32 35 29 00  # "sstack_print (.tmp0/stack_of_string_stacks.c0: 76.13-76.25)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 37 36 2E 34 2D 37 36 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_string_stacks.c0: 76.4-76.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
54 4F 50 3A 20 00  # "TOP: "
73 73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 37 38 2E 33 2D 37 38 2E 31 38 29 00  # "sstack_print (.tmp0/stack_of_string_stacks.c0: 78.3-78.18)"
20 20 20 20 20 00  # "     "
73 73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 38 30 2E 32 32 2D 38 30 2E 33 37 29 00  # "sstack_print (.tmp0/stack_of_string_stacks.c0: 80.22-80.37)"
73 73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 38 31 2E 35 2D 38 31 2E 32 35 29 00  # "sstack_print (.tmp0/stack_of_string_stacks.c0: 81.5-81.25)"
0A 00  # "\n"
73 73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 38 32 2E 33 30 2D 38 32 2E 34 32 29 00  # "sstack_print (.tmp0/stack_of_string_stacks.c0: 82.30-82.42)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 39 39 2E 34 2D 39 39 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_string_stacks.c0: 99.4-99.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 73 74 61 63 6B 5F 65 6D 70 74 79 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 39 38 2E 31 2D 39 39 2E 34 33 29 00  # "sstack_empty__1 (.tmp0/stack_of_string_stacks.c0: 98.1-99.43)"
73 73 74 61 63 6B 5F 6E 65 77 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 31 30 31 2E 31 2D 31 30 33 2E 34 33 29 00  # "sstack_new__1 (.tmp0/stack_of_string_stacks.c0: 101.1-103.43)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 31 30 32 2E 34 2D 31 30 32 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_string_stacks.c0: 102.4-102.28: @ensures annotation failed"
73 73 74 61 63 6B 5F 6E 65 77 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 31 30 33 2E 31 32 2D 31 30 33 2E 33 33 29 00  # "sstack_new__1 (.tmp0/stack_of_string_stacks.c0: 103.12-103.33)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 31 30 33 2E 34 2D 31 30 33 2E 33 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_string_stacks.c0: 103.4-103.34: @ensures annotation failed"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 31 30 36 2E 34 2D 31 30 36 2E 33 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_string_stacks.c0: 106.4-106.36: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 70 75 73 68 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 31 30 35 2E 31 2D 31 30 37 2E 34 33 29 00  # "spush__1 (.tmp0/stack_of_string_stacks.c0: 105.1-107.43)"
73 70 75 73 68 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 31 30 37 2E 31 33 2D 31 30 37 2E 32 38 29 00  # "spush__1 (.tmp0/stack_of_string_stacks.c0: 107.13-107.28)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 31 30 37 2E 34 2D 31 30 37 2E 32 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_string_stacks.c0: 107.4-107.29: @ensures annotation failed"
73 70 75 73 68 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 31 30 37 2E 31 33 2D 31 30 37 2E 32 38 29 00  # "spush__1 (.tmp0/stack_of_string_stacks.c0: 107.13-107.28)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 31 30 37 2E 34 2D 31 30 37 2E 32 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_string_stacks.c0: 107.4-107.29: @ensures annotation failed"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 31 31 30 2E 34 2D 31 31 30 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_string_stacks.c0: 110.4-110.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 70 6F 70 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 31 31 31 2E 31 34 2D 31 31 31 2E 32 39 29 00  # "spop__1 (.tmp0/stack_of_string_stacks.c0: 111.14-111.29)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 31 31 31 2E 34 2D 31 31 31 2E 33 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_string_stacks.c0: 111.4-111.30: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 70 6F 70 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 31 30 39 2E 31 2D 31 31 32 2E 34 33 29 00  # "spop__1 (.tmp0/stack_of_string_stacks.c0: 109.1-112.43)"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 31 31 32 2E 34 2D 31 31 32 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/stack_of_string_stacks.c0: 112.4-112.28: @ensures annotation failed"
2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 31 31 35 2E 34 2D 31 31 35 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/stack_of_string_stacks.c0: 115.4-115.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 73 74 61 63 6B 5F 70 72 69 6E 74 5F 5F 31 20 28 2E 74 6D 70 30 2F 73 74 61 63 6B 5F 6F 66 5F 73 74 72 69 6E 67 5F 73 74 61 63 6B 73 2E 63 30 3A 20 31 31 34 2E 31 2D 31 31 35 2E 34 33 29 00  # "sstack_print__1 (.tmp0/stack_of_string_stacks.c0: 114.1-115.43)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 31 33 2E 36 2D 31 33 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/parse.h0: 13.6-13.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 30 2E 36 2D 32 30 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/parse.h0: 20.6-20.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 61 72 73 65 5F 74 6F 6B 65 6E 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 33 2E 33 34 2D 32 33 2E 34 37 29 00  # "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 33 2E 36 2D 32 33 2E 34 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/parse.h0: 23.6-23.48: @ensures annotation failed"
70 61 72 73 65 5F 69 6E 74 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 37 2E 31 35 2D 32 37 2E 33 34 29 00  # "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 27.15-27.34)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 37 2E 36 2D 32 37 2E 33 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/parse.h0: 27.6-27.35: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 61 72 73 65 5F 69 6E 74 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 38 2E 33 34 2D 32 38 2E 34 37 29 00  # "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 38 2E 36 2D 32 38 2E 34 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/parse.h0: 28.6-28.48: @ensures annotation failed"
73 74 72 69 6E 67 5F 63 68 61 72 61 74 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 31 39 2E 33 33 2D 31 39 2E 34 39 29 00  # "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 31 39 2E 36 2D 31 39 2E 35 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 19.6-19.50: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 6A 6F 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 33 2E 31 34 2D 32 33 2E 33 36 29 00  # "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)"
73 74 72 69 6E 67 5F 6A 6F 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 34 2E 31 39 2D 32 34 2E 33 35 29 00  # "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)"
73 74 72 69 6E 67 5F 6A 6F 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 34 2E 33 38 2D 32 34 2E 35 34 29 00  # "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 33 2E 36 2D 32 34 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 23.6-24.55: @ensures annotation failed"
73 74 72 69 6E 67 5F 73 75 62 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 31 2E 35 32 2D 33 31 2E 36 38 29 00  # "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 31 2E 36 2D 33 31 2E 36 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 31.6-31.69: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 73 75 62 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 32 2E 31 34 2D 33 32 2E 33 36 29 00  # "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 32 2E 36 2D 33 32 2E 35 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 32.6-32.52: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 37 2E 36 2D 33 37 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 37.6-37.44: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 33 2E 36 2D 34 33 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 43.6-43.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 66 72 6F 6D 63 68 61 72 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 34 2E 31 34 2D 34 34 2E 33 36 29 00  # "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 34 2E 36 2D 34 34 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 44.6-44.42: @ensures annotation failed"
73 74 72 69 6E 67 5F 66 72 6F 6D 63 68 61 72 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 35 2E 31 34 2D 34 35 2E 33 39 29 00  # "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 35 2E 36 2D 34 35 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 45.6-45.45: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 32 2E 36 2D 35 32 2E 34 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 52.6-52.41: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 74 6F 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 36 2E 33 34 2D 35 36 2E 35 30 29 00  # "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 36 2E 36 2D 35 36 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 56.6-56.55: @ensures annotation failed"
73 74 72 69 6E 67 5F 74 6F 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 37 2E 34 31 2D 35 37 2E 35 37 29 00  # "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)"
73 74 72 69 6E 67 5F 74 6F 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 37 2E 31 34 2D 35 37 2E 36 32 29 00  # "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 37 2E 36 2D 35 37 2E 36 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 57.6-57.63: @ensures annotation failed"
73 74 72 69 6E 67 5F 66 72 6F 6D 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 32 2E 31 35 2D 36 32 2E 34 37 29 00  # "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 32 2E 36 2D 36 32 2E 34 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 62.6-62.48: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 66 72 6F 6D 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 33 2E 31 34 2D 36 33 2E 33 36 29 00  # "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 33 2E 36 2D 36 33 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 63.6-63.55: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 37 2E 36 2D 36 37 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 67.6-67.45: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 39 2E 36 2D 36 39 2E 33 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 69.6-69.34: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 31 30 2E 36 2D 31 30 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 10.6-10.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 72 65 61 64 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 31 35 2E 33 34 2D 31 35 2E 35 34 29 00  # "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 31 35 2E 36 2D 31 35 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/file.h0: 15.6-15.55: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 30 2E 36 2D 32 30 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 20.6-20.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 63 6C 6F 73 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 31 2E 31 36 2D 32 31 2E 33 30 29 00  # "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 31 2E 36 2D 32 31 2E 33 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 21.6-21.31: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 63 6C 6F 73 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 32 2E 31 34 2D 32 32 2E 32 38 29 00  # "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 32 2E 36 2D 32 32 2E 32 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/file.h0: 22.6-22.29: @ensures annotation failed"
66 69 6C 65 5F 63 6C 6F 73 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 32 2E 31 34 2D 32 32 2E 32 38 29 00  # "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 32 2E 36 2D 32 32 2E 32 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/file.h0: 22.6-22.29: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 36 2E 36 2D 32 36 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 26.6-26.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 65 6F 66 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 37 2E 31 36 2D 32 37 2E 33 30 29 00  # "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 37 2E 36 2D 32 37 2E 33 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 27.6-27.31: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 34 2E 36 2D 33 34 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 34.6-34.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 72 65 61 64 6C 69 6E 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 35 2E 31 36 2D 33 35 2E 33 30 29 00  # "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 35 2E 36 2D 33 35 2E 33 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 35.6-35.31: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 72 65 61 64 6C 69 6E 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 36 2E 31 36 2D 33 36 2E 32 37 29 00  # "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 36 2E 36 2D 33 36 2E 32 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 36.6-36.28: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 73 5F 61 6C 70 68 61 6E 75 6D 65 72 69 63 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 33 33 2E 31 30 2D 33 33 2E 32 33 29 00  # "is_alphanumeric (.tmp0/utils.c0: 33.10-33.23)"
69 73 5F 61 6C 70 68 61 6E 75 6D 65 72 69 63 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 33 33 2E 32 37 2D 33 33 2E 33 38 29 00  # "is_alphanumeric (.tmp0/utils.c0: 33.27-33.38)"
2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 33 38 2E 34 2D 33 38 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/utils.c0: 38.4-38.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 34 31 2E 36 2D 34 31 2E 33 38 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/utils.c0: 41.6-41.38: @loop_invariant annotation failed"
69 73 5F 69 6E 66 69 78 5F 61 72 72 61 79 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 34 34 2E 31 36 2D 34 34 2E 32 39 29 00  # "is_infix_array (.tmp0/utils.c0: 44.16-44.29)"
69 73 5F 69 6E 66 69 78 5F 61 72 72 61 79 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 34 35 2E 31 38 2D 34 35 2E 33 33 29 00  # "is_infix_array (.tmp0/utils.c0: 45.18-45.33)"
2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 34 38 2E 38 2D 34 38 2E 34 33 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/utils.c0: 48.8-48.43: @loop_invariant annotation failed"
69 73 5F 69 6E 66 69 78 5F 61 72 72 61 79 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 35 33 2E 34 30 2D 35 33 2E 35 38 29 00  # "is_infix_array (.tmp0/utils.c0: 53.40-53.58)"
2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 35 33 2E 31 30 2D 35 33 2E 35 39 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/utils.c0: 53.10-53.59: @loop_invariant annotation failed"
69 73 5F 69 6E 66 69 78 5F 61 72 72 61 79 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 35 32 2E 32 37 2D 35 32 2E 34 35 29 00  # "is_infix_array (.tmp0/utils.c0: 52.27-52.45)"
69 73 5F 69 6E 66 69 78 5F 61 72 72 61 79 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 35 35 2E 32 36 2D 35 35 2E 34 37 29 00  # "is_infix_array (.tmp0/utils.c0: 55.26-55.47)"
69 73 5F 69 6E 66 69 78 5F 61 72 72 61 79 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 35 35 2E 31 34 2D 35 35 2E 34 38 29 00  # "is_infix_array (.tmp0/utils.c0: 55.14-55.48)"
74 6F 6B 65 6E 69 7A 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 36 35 2E 31 31 2D 36 35 2E 32 37 29 00  # "tokenize (.tmp0/utils.c0: 65.11-65.27)"
74 6F 6B 65 6E 69 7A 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 36 36 2E 31 35 2D 36 36 2E 32 36 29 00  # "tokenize (.tmp0/utils.c0: 66.15-66.26)"
2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 36 39 2E 36 2D 36 39 2E 34 30 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/utils.c0: 69.6-69.40: @loop_invariant annotation failed"
74 6F 6B 65 6E 69 7A 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 37 31 2E 31 34 2D 37 31 2E 33 34 29 00  # "tokenize (.tmp0/utils.c0: 71.14-71.34)"
74 6F 6B 65 6E 69 7A 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 38 30 2E 31 31 2D 38 30 2E 32 34 29 00  # "tokenize (.tmp0/utils.c0: 80.11-80.24)"
74 6F 6B 65 6E 69 7A 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 38 32 2E 34 38 2D 38 32 2E 36 38 29 00  # "tokenize (.tmp0/utils.c0: 82.48-82.68)"
74 6F 6B 65 6E 69 7A 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 38 32 2E 33 37 2D 38 32 2E 36 39 29 00  # "tokenize (.tmp0/utils.c0: 82.37-82.69)"
2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 38 35 2E 31 32 2D 38 35 2E 34 36 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/utils.c0: 85.12-85.46: @loop_invariant annotation failed"
74 6F 6B 65 6E 69 7A 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 38 34 2E 33 37 2D 38 34 2E 35 37 29 00  # "tokenize (.tmp0/utils.c0: 84.37-84.57)"
74 6F 6B 65 6E 69 7A 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 38 34 2E 32 36 2D 38 34 2E 35 38 29 00  # "tokenize (.tmp0/utils.c0: 84.26-84.58)"
74 6F 6B 65 6E 69 7A 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 39 31 2E 31 38 2D 39 31 2E 33 32 29 00  # "tokenize (.tmp0/utils.c0: 91.18-91.32)"
2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 39 33 2E 31 32 2D 39 33 2E 34 36 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/utils.c0: 93.12-93.46: @loop_invariant annotation failed"
74 6F 6B 65 6E 69 7A 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 39 32 2E 33 38 2D 39 32 2E 35 38 29 00  # "tokenize (.tmp0/utils.c0: 92.38-92.58)"
74 6F 6B 65 6E 69 7A 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 39 32 2E 32 36 2D 39 32 2E 35 39 29 00  # "tokenize (.tmp0/utils.c0: 92.26-92.59)"
74 6F 6B 65 6E 69 7A 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 39 39 2E 31 38 2D 39 39 2E 32 39 29 00  # "tokenize (.tmp0/utils.c0: 99.18-99.29)"
2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 31 30 31 2E 31 32 2D 31 30 31 2E 34 36 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/utils.c0: 101.12-101.46: @loop_invariant annotation failed"
74 6F 6B 65 6E 69 7A 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 31 30 30 2E 34 32 2D 31 30 30 2E 36 32 29 00  # "tokenize (.tmp0/utils.c0: 100.42-100.62)"
74 6F 6B 65 6E 69 7A 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 31 30 30 2E 32 36 2D 31 30 30 2E 36 33 29 00  # "tokenize (.tmp0/utils.c0: 100.26-100.63)"
74 6F 6B 65 6E 69 7A 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 31 30 39 2E 31 34 2D 31 30 39 2E 33 35 29 00  # "tokenize (.tmp0/utils.c0: 109.14-109.35)"
74 6F 6B 65 6E 69 7A 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 31 30 39 2E 37 2D 31 30 39 2E 33 36 29 00  # "tokenize (.tmp0/utils.c0: 109.7-109.36)"
69 6E 70 75 74 5F 66 69 6C 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 31 31 38 2E 31 35 2D 31 31 38 2E 32 36 29 00  # "input_file (.tmp0/utils.c0: 118.15-118.26)"
69 6E 70 75 74 5F 66 69 6C 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 31 31 39 2E 31 37 2D 31 31 39 2E 33 32 29 00  # "input_file (.tmp0/utils.c0: 119.17-119.32)"
45 72 72 6F 72 3A 20 66 69 6C 65 20 64 6F 65 73 20 6E 6F 74 20 65 78 69 73 74 00  # "Error: file does not exist"
69 6E 70 75 74 5F 66 69 6C 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 31 32 32 2E 31 31 2D 31 32 32 2E 32 35 29 00  # "input_file (.tmp0/utils.c0: 122.11-122.25)"
69 6E 70 75 74 5F 66 69 6C 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 31 32 33 2E 31 39 2D 31 32 33 2E 33 38 29 00  # "input_file (.tmp0/utils.c0: 123.19-123.38)"
69 6E 70 75 74 5F 66 69 6C 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 31 32 34 2E 31 39 2D 31 32 34 2E 33 33 29 00  # "input_file (.tmp0/utils.c0: 124.19-124.33)"
69 6E 70 75 74 5F 66 69 6C 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 31 32 35 2E 31 33 2D 31 32 35 2E 32 39 29 00  # "input_file (.tmp0/utils.c0: 125.13-125.29)"
69 6E 70 75 74 5F 66 69 6C 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 31 32 35 2E 33 38 2D 31 32 35 2E 34 36 29 00  # "input_file (.tmp0/utils.c0: 125.38-125.46)"
69 6E 70 75 74 5F 66 69 6C 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 31 32 35 2E 33 31 2D 31 32 35 2E 34 37 29 00  # "input_file (.tmp0/utils.c0: 125.31-125.47)"
69 6E 70 75 74 5F 66 69 6C 65 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 31 32 38 2E 33 2D 31 32 38 2E 31 39 29 00  # "input_file (.tmp0/utils.c0: 128.3-128.19)"
2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 31 34 30 2E 36 2D 31 34 30 2E 33 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/utils.c0: 140.6-140.31: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 73 5F 69 6E 66 69 78 5F 61 72 72 61 79 5F 5F 31 20 28 2E 74 6D 70 30 2F 75 74 69 6C 73 2E 63 30 3A 20 31 33 39 2E 31 2D 31 34 30 2E 33 37 29 00  # "is_infix_array__1 (.tmp0/utils.c0: 139.1-140.37)"
64 69 63 74 2E 63 30 3A 20 32 39 2E 34 2D 33 31 2E 33 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dict.c0: 29.4-31.30: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 73 5F 69 6E 5F 73 74 72 69 6E 67 20 28 64 69 63 74 2E 63 30 3A 20 33 34 2E 31 30 2D 33 34 2E 33 32 29 00  # "is_in_string (dict.c0: 34.10-34.32)"
69 73 5F 69 6E 5F 73 74 72 69 6E 67 20 28 64 69 63 74 2E 63 30 3A 20 33 34 2E 33 36 2D 33 34 2E 36 31 29 00  # "is_in_string (dict.c0: 34.36-34.61)"
64 69 63 74 2E 63 30 3A 20 33 39 2E 34 2D 33 39 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dict.c0: 39.4-39.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 69 63 74 2E 63 30 3A 20 34 35 2E 36 2D 34 35 2E 33 38 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dict.c0: 45.6-45.38: @loop_invariant annotation failed"
6C 69 6E 73 65 61 72 63 68 5F 73 74 72 69 6E 67 20 28 64 69 63 74 2E 63 30 3A 20 34 36 2E 32 32 2D 34 36 2E 34 33 29 00  # "linsearch_string (dict.c0: 46.22-46.43)"
64 69 63 74 2E 63 30 3A 20 34 36 2E 36 2D 34 36 2E 34 34 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dict.c0: 46.6-46.44: @loop_invariant annotation failed"
6C 69 6E 73 65 61 72 63 68 5F 73 74 72 69 6E 67 20 28 64 69 63 74 2E 63 30 3A 20 34 38 2E 32 35 2D 34 38 2E 34 33 29 00  # "linsearch_string (dict.c0: 48.25-48.43)"
6C 69 6E 73 65 61 72 63 68 5F 73 74 72 69 6E 67 20 28 64 69 63 74 2E 63 30 3A 20 34 39 2E 32 37 2D 34 39 2E 34 33 29 00  # "linsearch_string (dict.c0: 49.27-49.43)"
6C 69 6E 73 65 61 72 63 68 5F 73 74 72 69 6E 67 20 28 64 69 63 74 2E 63 30 3A 20 35 31 2E 31 31 2D 35 31 2E 33 39 29 00  # "linsearch_string (dict.c0: 51.11-51.39)"
6C 69 6E 73 65 61 72 63 68 5F 73 74 72 69 6E 67 20 28 64 69 63 74 2E 63 30 3A 20 34 30 2E 33 31 2D 34 30 2E 35 35 29 00  # "linsearch_string (dict.c0: 40.31-40.55)"
64 69 63 74 2E 63 30 3A 20 34 30 2E 34 2D 34 31 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dict.c0: 40.4-41.44: @ensures annotation failed"
6C 69 6E 73 65 61 72 63 68 5F 73 74 72 69 6E 67 20 28 64 69 63 74 2E 63 30 3A 20 35 35 2E 31 34 2D 35 35 2E 33 35 29 00  # "linsearch_string (dict.c0: 55.14-55.35)"
64 69 63 74 2E 63 30 3A 20 35 35 2E 36 2D 35 35 2E 33 36 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dict.c0: 55.6-55.36: @assert annotation failed"
6C 69 6E 73 65 61 72 63 68 5F 73 74 72 69 6E 67 20 28 64 69 63 74 2E 63 30 3A 20 34 30 2E 33 31 2D 34 30 2E 35 35 29 00  # "linsearch_string (dict.c0: 40.31-40.55)"
64 69 63 74 2E 63 30 3A 20 34 30 2E 34 2D 34 31 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dict.c0: 40.4-41.44: @ensures annotation failed"
64 69 63 74 2E 63 30 3A 20 36 31 2E 36 2D 36 31 2E 34 33 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dict.c0: 61.6-61.43: @assert annotation failed"
64 69 63 74 2E 63 30 3A 20 36 36 2E 34 2D 36 36 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dict.c0: 66.4-66.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 6F 6B 65 6E 73 5F 6E 6F 74 5F 72 65 70 65 61 74 65 64 20 28 64 69 63 74 2E 63 30 3A 20 36 38 2E 32 32 2D 36 38 2E 33 33 29 00  # "tokens_not_repeated (dict.c0: 68.22-68.33)"
74 6F 6B 65 6E 73 5F 6E 6F 74 5F 72 65 70 65 61 74 65 64 20 28 64 69 63 74 2E 63 30 3A 20 36 39 2E 31 38 2D 36 39 2E 32 39 29 00  # "tokens_not_repeated (dict.c0: 69.18-69.29)"
64 69 63 74 2E 63 30 3A 20 37 32 2E 36 2D 37 32 2E 33 38 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dict.c0: 72.6-72.38: @loop_invariant annotation failed"
74 6F 6B 65 6E 73 5F 6E 6F 74 5F 72 65 70 65 61 74 65 64 20 28 64 69 63 74 2E 63 30 3A 20 37 34 2E 32 35 2D 37 34 2E 34 33 29 00  # "tokens_not_repeated (dict.c0: 74.25-74.43)"
74 6F 6B 65 6E 73 5F 6E 6F 74 5F 72 65 70 65 61 74 65 64 20 28 64 69 63 74 2E 63 30 3A 20 37 35 2E 32 37 2D 37 35 2E 34 33 29 00  # "tokens_not_repeated (dict.c0: 75.27-75.43)"
74 6F 6B 65 6E 73 5F 6E 6F 74 5F 72 65 70 65 61 74 65 64 20 28 64 69 63 74 2E 63 30 3A 20 37 38 2E 31 35 2D 37 38 2E 33 36 29 00  # "tokens_not_repeated (dict.c0: 78.15-78.36)"
74 6F 6B 65 6E 73 5F 6E 6F 74 5F 72 65 70 65 61 74 65 64 20 28 64 69 63 74 2E 63 30 3A 20 37 39 2E 33 32 2D 37 39 2E 34 35 29 00  # "tokens_not_repeated (dict.c0: 79.32-79.45)"
74 6F 6B 65 6E 73 5F 6E 6F 74 5F 72 65 70 65 61 74 65 64 20 28 64 69 63 74 2E 63 30 3A 20 38 30 2E 31 33 2D 38 30 2E 34 39 29 00  # "tokens_not_repeated (dict.c0: 80.13-80.49)"
74 6F 6B 65 6E 73 5F 6E 6F 74 5F 72 65 70 65 61 74 65 64 20 28 64 69 63 74 2E 63 30 3A 20 38 32 2E 39 2D 38 32 2E 33 34 29 00  # "tokens_not_repeated (dict.c0: 82.9-82.34)"
74 6F 6B 65 6E 73 5F 6E 6F 74 5F 72 65 70 65 61 74 65 64 20 28 64 69 63 74 2E 63 30 3A 20 38 34 2E 37 2D 38 34 2E 32 36 29 00  # "tokens_not_repeated (dict.c0: 84.7-84.26)"
74 6F 6B 65 6E 73 5F 6E 6F 74 5F 72 65 70 65 61 74 65 64 20 28 64 69 63 74 2E 63 30 3A 20 38 35 2E 31 34 2D 38 35 2E 33 31 29 00  # "tokens_not_repeated (dict.c0: 85.14-85.31)"
74 6F 6B 65 6E 73 5F 6E 6F 74 5F 72 65 70 65 61 74 65 64 20 28 64 69 63 74 2E 63 30 3A 20 38 36 2E 33 31 2D 38 36 2E 34 30 29 00  # "tokens_not_repeated (dict.c0: 86.31-86.40)"
74 6F 6B 65 6E 73 5F 6E 6F 74 5F 72 65 70 65 61 74 65 64 20 28 64 69 63 74 2E 63 30 3A 20 38 37 2E 39 2D 38 37 2E 33 37 29 00  # "tokens_not_repeated (dict.c0: 87.9-87.37)"
64 69 63 74 2E 63 30 3A 20 39 34 2E 34 2D 39 34 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dict.c0: 94.4-94.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 69 63 74 5F 6E 65 77 20 28 64 69 63 74 2E 63 30 3A 20 39 35 2E 31 33 2D 39 35 2E 33 33 29 00  # "dict_new (dict.c0: 95.13-95.33)"
64 69 63 74 2E 63 30 3A 20 39 35 2E 34 2D 39 35 2E 33 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dict.c0: 95.4-95.34: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 69 63 74 5F 6E 65 77 20 28 64 69 63 74 2E 63 30 3A 20 39 39 2E 38 2D 39 39 2E 33 33 29 00  # "dict_new (dict.c0: 99.8-99.33)"
64 69 63 74 5F 6E 65 77 20 28 64 69 63 74 2E 63 30 3A 20 39 36 2E 33 31 2D 39 36 2E 34 37 29 00  # "dict_new (dict.c0: 96.31-96.47)"
64 69 63 74 2E 63 30 3A 20 39 36 2E 34 2D 39 36 2E 34 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dict.c0: 96.4-96.48: @ensures annotation failed"
64 69 63 74 5F 6E 65 77 20 28 64 69 63 74 2E 63 30 3A 20 39 36 2E 33 31 2D 39 36 2E 34 37 29 00  # "dict_new (dict.c0: 96.31-96.47)"
64 69 63 74 2E 63 30 3A 20 39 36 2E 34 2D 39 36 2E 34 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dict.c0: 96.4-96.48: @ensures annotation failed"
64 69 63 74 5F 6C 6F 6F 6B 75 70 20 28 64 69 63 74 2E 63 30 3A 20 31 30 38 2E 31 33 2D 31 30 38 2E 32 33 29 00  # "dict_lookup (dict.c0: 108.13-108.23)"
64 69 63 74 2E 63 30 3A 20 31 30 38 2E 34 2D 31 30 38 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dict.c0: 108.4-108.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 69 63 74 5F 6C 6F 6F 6B 75 70 20 28 64 69 63 74 2E 63 30 3A 20 31 31 32 2E 31 30 2D 31 31 32 2E 35 30 29 00  # "dict_lookup (dict.c0: 112.10-112.50)"
64 69 63 74 2E 63 30 3A 20 31 30 39 2E 34 2D 31 30 39 2E 32 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dict.c0: 109.4-109.26: @ensures annotation failed"
64 69 63 74 2E 63 30 3A 20 31 33 32 2E 36 2D 31 33 32 2E 33 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dict.c0: 132.6-132.31: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 69 63 74 5F 6E 65 77 5F 5F 31 20 28 64 69 63 74 2E 63 30 3A 20 31 33 33 2E 31 35 2D 31 33 33 2E 33 35 29 00  # "dict_new__1 (dict.c0: 133.15-133.35)"
64 69 63 74 2E 63 30 3A 20 31 33 33 2E 36 2D 31 33 33 2E 33 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dict.c0: 133.6-133.36: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 69 63 74 5F 6E 65 77 5F 5F 31 20 28 64 69 63 74 2E 63 30 3A 20 31 33 31 2E 31 2D 31 33 33 2E 34 32 29 00  # "dict_new__1 (dict.c0: 131.1-133.42)"
64 69 63 74 2E 63 30 3A 20 31 33 37 2E 36 2D 31 33 37 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dict.c0: 137.6-137.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 69 63 74 5F 6C 6F 6F 6B 75 70 5F 5F 31 20 28 64 69 63 74 2E 63 30 3A 20 31 33 36 2E 31 2D 31 33 38 2E 33 34 29 00  # "dict_lookup__1 (dict.c0: 136.1-138.34)"
64 69 63 74 2E 63 30 3A 20 31 33 38 2E 36 2D 31 33 38 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dict.c0: 138.6-138.28: @ensures annotation failed"
70 61 72 73 65 2E 63 30 3A 20 32 2E 34 2D 32 2E 33 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "parse.c0: 2.4-2.36: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 73 5F 70 72 65 63 73 74 61 63 6B 20 28 70 61 72 73 65 2E 63 30 3A 20 35 2E 31 38 2D 35 2E 32 39 29 00  # "is_precstack (parse.c0: 5.18-5.29)"
69 73 5F 70 72 65 63 73 74 61 63 6B 20 28 70 61 72 73 65 2E 63 30 3A 20 38 2E 31 31 2D 38 2E 32 35 29 00  # "is_precstack (parse.c0: 8.11-8.25)"
69 73 5F 70 72 65 63 73 74 61 63 6B 20 28 70 61 72 73 65 2E 63 30 3A 20 39 2E 31 38 2D 39 2E 32 34 29 00  # "is_precstack (parse.c0: 9.18-9.24)"
69 73 5F 70 72 65 63 73 74 61 63 6B 20 28 70 61 72 73 65 2E 63 30 3A 20 31 31 2E 31 38 2D 31 31 2E 33 37 29 00  # "is_precstack (parse.c0: 11.18-11.37)"
69 73 5F 70 72 65 63 73 74 61 63 6B 20 28 70 61 72 73 65 2E 63 30 3A 20 31 34 2E 31 38 2D 31 34 2E 33 37 29 00  # "is_precstack (parse.c0: 14.18-14.37)"
69 73 5F 70 72 65 63 73 74 61 63 6B 20 28 70 61 72 73 65 2E 63 30 3A 20 31 38 2E 35 2D 31 38 2E 32 30 29 00  # "is_precstack (parse.c0: 18.5-18.20)"
69 73 5F 70 72 65 63 73 74 61 63 6B 20 28 70 61 72 73 65 2E 63 30 3A 20 32 30 2E 31 31 2D 32 30 2E 32 38 29 00  # "is_precstack (parse.c0: 20.11-20.28)"
69 73 5F 70 72 65 63 73 74 61 63 6B 20 28 70 61 72 73 65 2E 63 30 3A 20 32 31 2E 31 33 2D 32 31 2E 32 32 29 00  # "is_precstack (parse.c0: 21.13-21.22)"
69 73 5F 70 72 65 63 73 74 61 63 6B 20 28 70 61 72 73 65 2E 63 30 3A 20 32 31 2E 35 2D 32 31 2E 32 33 29 00  # "is_precstack (parse.c0: 21.5-21.23)"
70 61 72 73 65 2E 63 30 3A 20 32 38 2E 34 2D 32 38 2E 34 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "parse.c0: 28.4-28.40: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 33 32 2E 37 2D 33 32 2E 32 35 29 00  # "parse (parse.c0: 32.7-32.25)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 32 39 2E 33 31 2D 32 39 2E 34 39 29 00  # "parse (parse.c0: 29.31-29.49)"
70 61 72 73 65 2E 63 30 3A 20 32 39 2E 34 2D 32 39 2E 35 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "parse.c0: 29.4-29.50: @ensures annotation failed"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 33 34 2E 32 36 2D 33 34 2E 33 37 29 00  # "parse (parse.c0: 34.26-34.37)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 33 35 2E 32 32 2D 33 35 2E 33 33 29 00  # "parse (parse.c0: 35.22-35.33)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 33 38 2E 31 31 2D 33 38 2E 32 39 29 00  # "parse (parse.c0: 38.11-38.29)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 33 39 2E 31 38 2D 33 39 2E 32 38 29 00  # "parse (parse.c0: 39.18-39.28)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 34 31 2E 39 2D 34 31 2E 32 37 29 00  # "parse (parse.c0: 41.9-41.27)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 34 32 2E 31 31 2D 34 32 2E 32 39 29 00  # "parse (parse.c0: 42.11-42.29)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 32 39 2E 33 31 2D 32 39 2E 34 39 29 00  # "parse (parse.c0: 29.31-29.49)"
70 61 72 73 65 2E 63 30 3A 20 32 39 2E 34 2D 32 39 2E 35 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "parse.c0: 29.4-29.50: @ensures annotation failed"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 34 37 2E 31 31 2D 34 37 2E 32 39 29 00  # "parse (parse.c0: 47.11-47.29)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 32 39 2E 33 31 2D 32 39 2E 34 39 29 00  # "parse (parse.c0: 29.31-29.49)"
70 61 72 73 65 2E 63 30 3A 20 32 39 2E 34 2D 32 39 2E 35 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "parse.c0: 29.4-29.50: @ensures annotation failed"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 35 31 2E 37 2D 35 31 2E 32 39 29 00  # "parse (parse.c0: 51.7-51.29)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 35 35 2E 31 31 2D 35 35 2E 32 39 29 00  # "parse (parse.c0: 55.11-55.29)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 32 39 2E 33 31 2D 32 39 2E 34 39 29 00  # "parse (parse.c0: 29.31-29.49)"
70 61 72 73 65 2E 63 30 3A 20 32 39 2E 34 2D 32 39 2E 35 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "parse.c0: 29.4-29.50: @ensures annotation failed"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 36 30 2E 32 32 2D 36 30 2E 34 31 29 00  # "parse (parse.c0: 60.22-60.41)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 32 39 2E 33 31 2D 32 39 2E 34 39 29 00  # "parse (parse.c0: 29.31-29.49)"
70 61 72 73 65 2E 63 30 3A 20 32 39 2E 34 2D 32 39 2E 35 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "parse.c0: 29.4-29.50: @ensures annotation failed"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 36 32 2E 31 31 2D 36 32 2E 33 32 29 00  # "parse (parse.c0: 62.11-62.32)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 36 33 2E 39 2D 36 33 2E 32 38 29 00  # "parse (parse.c0: 63.9-63.28)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 36 38 2E 32 38 2D 36 38 2E 34 31 29 00  # "parse (parse.c0: 68.28-68.41)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 36 39 2E 33 30 2D 36 39 2E 35 35 29 00  # "parse (parse.c0: 69.30-69.55)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 37 33 2E 31 31 2D 37 33 2E 33 36 29 00  # "parse (parse.c0: 73.11-73.36)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 37 34 2E 31 31 2D 37 34 2E 33 30 29 00  # "parse (parse.c0: 74.11-74.30)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 37 38 2E 31 31 2D 37 38 2E 33 36 29 00  # "parse (parse.c0: 78.11-78.36)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 38 32 2E 32 35 2D 38 32 2E 33 38 29 00  # "parse (parse.c0: 82.25-82.38)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 38 33 2E 33 30 2D 38 33 2E 35 35 29 00  # "parse (parse.c0: 83.30-83.55)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 39 30 2E 31 35 2D 39 30 2E 34 30 29 00  # "parse (parse.c0: 90.15-90.40)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 39 31 2E 31 35 2D 39 31 2E 33 34 29 00  # "parse (parse.c0: 91.15-91.34)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 39 34 2E 32 32 2D 39 34 2E 34 33 29 00  # "parse (parse.c0: 94.22-94.43)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 39 35 2E 31 35 2D 39 35 2E 34 33 29 00  # "parse (parse.c0: 95.15-95.43)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 39 36 2E 31 35 2D 39 36 2E 33 34 29 00  # "parse (parse.c0: 96.15-96.34)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 31 30 30 2E 31 35 2D 31 30 30 2E 34 33 29 00  # "parse (parse.c0: 100.15-100.43)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 31 30 38 2E 31 31 2D 31 30 38 2E 33 32 29 00  # "parse (parse.c0: 108.11-108.32)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 31 30 39 2E 32 33 2D 31 30 39 2E 33 36 29 00  # "parse (parse.c0: 109.23-109.36)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 31 30 39 2E 35 2D 31 30 39 2E 33 37 29 00  # "parse (parse.c0: 109.5-109.37)"
70 61 72 73 65 20 28 70 61 72 73 65 2E 63 30 3A 20 32 39 2E 33 31 2D 32 39 2E 34 39 29 00  # "parse (parse.c0: 29.31-29.49)"
70 61 72 73 65 2E 63 30 3A 20 32 39 2E 34 2D 32 39 2E 35 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "parse.c0: 29.4-29.50: @ensures annotation failed"
28 70 72 6F 67 72 61 6D 20 73 74 61 72 74 29 00  # "(program start)"
2A 2A 00  # "**"
2A 20 2F 00  # "* /"
2B 20 2D 00  # "+ -"
6D 61 69 6E 20 28 69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 31 39 2E 31 34 2D 31 39 2E 32 38 29 00  # "main (is_precstack-test.c0: 19.14-19.28)"
6D 61 69 6E 20 28 69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 32 32 2E 31 35 2D 32 32 2E 32 36 29 00  # "main (is_precstack-test.c0: 22.15-22.26)"
2D 00  # "-"
6D 61 69 6E 20 28 69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 32 33 2E 33 2D 32 33 2E 31 35 29 00  # "main (is_precstack-test.c0: 23.3-23.15)"
2A 00  # "*"
6D 61 69 6E 20 28 69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 32 34 2E 33 2D 32 34 2E 31 35 29 00  # "main (is_precstack-test.c0: 24.3-24.15)"
6D 61 69 6E 20 28 69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 32 37 2E 31 30 2D 32 37 2E 32 38 29 00  # "main (is_precstack-test.c0: 27.10-27.28)"
69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 32 37 2E 33 2D 32 37 2E 33 30 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "is_precstack-test.c0: 27.3-27.30: assert failed"
2A 00  # "*"
6D 61 69 6E 20 28 69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 33 30 2E 33 2D 33 30 2E 31 35 29 00  # "main (is_precstack-test.c0: 30.3-30.15)"
6D 61 69 6E 20 28 69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 33 31 2E 31 31 2D 33 31 2E 32 39 29 00  # "main (is_precstack-test.c0: 31.11-31.29)"
69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 33 31 2E 33 2D 33 31 2E 33 31 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "is_precstack-test.c0: 31.3-31.31: assert failed"
6D 61 69 6E 20 28 69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 33 33 2E 33 2D 33 33 2E 39 29 00  # "main (is_precstack-test.c0: 33.3-33.9)"
2F 00  # "/"
6D 61 69 6E 20 28 69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 33 34 2E 33 2D 33 34 2E 31 34 29 00  # "main (is_precstack-test.c0: 34.3-34.14)"
6D 61 69 6E 20 28 69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 33 35 2E 31 31 2D 33 35 2E 32 39 29 00  # "main (is_precstack-test.c0: 35.11-35.29)"
69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 33 35 2E 33 2D 33 35 2E 33 31 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "is_precstack-test.c0: 35.3-35.31: assert failed"
6D 61 69 6E 20 28 69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 33 37 2E 33 2D 33 37 2E 39 29 00  # "main (is_precstack-test.c0: 37.3-37.9)"
2A 2A 00  # "**"
6D 61 69 6E 20 28 69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 33 38 2E 33 2D 33 38 2E 31 35 29 00  # "main (is_precstack-test.c0: 38.3-38.15)"
6D 61 69 6E 20 28 69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 33 39 2E 31 30 2D 33 39 2E 32 38 29 00  # "main (is_precstack-test.c0: 39.10-39.28)"
69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 33 39 2E 33 2D 33 39 2E 33 30 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "is_precstack-test.c0: 39.3-39.30: assert failed"
6D 61 69 6E 20 28 69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 34 31 2E 33 2D 34 31 2E 39 29 00  # "main (is_precstack-test.c0: 41.3-41.9)"
6D 61 69 6E 20 28 69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 34 32 2E 33 2D 34 32 2E 39 29 00  # "main (is_precstack-test.c0: 42.3-42.9)"
2B 00  # "+"
6D 61 69 6E 20 28 69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 34 33 2E 33 2D 34 33 2E 31 35 29 00  # "main (is_precstack-test.c0: 43.3-43.15)"
2A 2A 00  # "**"
6D 61 69 6E 20 28 69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 34 34 2E 33 2D 34 34 2E 31 36 29 00  # "main (is_precstack-test.c0: 44.3-44.16)"
6D 61 69 6E 20 28 69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 34 35 2E 31 31 2D 34 35 2E 32 39 29 00  # "main (is_precstack-test.c0: 45.11-45.29)"
69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 34 35 2E 33 2D 34 35 2E 33 31 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "is_precstack-test.c0: 45.3-45.31: assert failed"
6D 61 69 6E 20 28 69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 34 37 2E 33 2D 34 37 2E 39 29 00  # "main (is_precstack-test.c0: 47.3-47.9)"
6D 61 69 6E 20 28 69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 34 38 2E 33 2D 34 38 2E 39 29 00  # "main (is_precstack-test.c0: 48.3-48.9)"
2A 2A 00  # "**"
6D 61 69 6E 20 28 69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 34 39 2E 33 2D 34 39 2E 31 36 29 00  # "main (is_precstack-test.c0: 49.3-49.16)"
2F 00  # "/"
6D 61 69 6E 20 28 69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 35 30 2E 33 2D 35 30 2E 31 35 29 00  # "main (is_precstack-test.c0: 50.3-50.15)"
6D 61 69 6E 20 28 69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 35 31 2E 31 31 2D 35 31 2E 32 39 29 00  # "main (is_precstack-test.c0: 51.11-51.29)"
69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 35 31 2E 33 2D 35 31 2E 33 31 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "is_precstack-test.c0: 51.3-51.31: assert failed"
41 6C 6C 20 74 65 73 74 73 20 70 61 73 73 65 64 21 0A 00  # "All tests passed!\n"
6D 61 69 6E 20 28 69 73 5F 70 72 65 63 73 74 61 63 6B 2D 74 65 73 74 2E 63 30 3A 20 35 33 2E 33 2D 35 33 2E 33 32 29 00  # "main (is_precstack-test.c0: 53.3-53.32)"

00 69             # function count
# function_pool

#<main>
00                # number of arguments = 0
05                # number of local variables = 5
01 4D             # code length = 333 bytes
14 5A 5B # aldc 23131         # s[23131] = "(program start)"
36 00    # vstore 0           # _caller = "(program start)";
10 03    # bipush 3           # 3
BC 08    # newarray 8         # alloc_array(string, 3)
36 02    # vstore 2           # A = alloc_array(string, 3);
15 02    # vload 2            # A
10 02    # bipush 2           # 2
63       # aadds              # &A[2]
14 5A 6B # aldc 23147         # s[23147] = "**"
4F       # amstore            # A[2] = "**";
15 02    # vload 2            # A
10 01    # bipush 1           # 1
63       # aadds              # &A[1]
14 5A 6E # aldc 23150         # s[23150] = "* /"
4F       # amstore            # A[1] = "* /";
15 02    # vload 2            # A
10 00    # bipush 0           # 0
63       # aadds              # &A[0]
14 5A 72 # aldc 23154         # s[23154] = "+ -"
4F       # amstore            # A[0] = "+ -";
15 02    # vload 2            # A
10 03    # bipush 3           # 3
14 5A 76 # aldc 23158         # s[23158] = "main (is_precstack-test.c0: 19.14-19.28)"
B8 00 65 # invokestatic 101   # dict_new__1(A, 3, "main (is_precstack-test.c0: 19.14-19.28)")
36 03    # vstore 3           # D = dict_new__1(A, 3, "main (is_precstack-test.c0: 19.14-19.28)");
14 5A 9F # aldc 23199         # s[23199] = "main (is_precstack-test.c0: 22.15-22.26)"
B8 00 2D # invokestatic 45    # stack_new__1("main (is_precstack-test.c0: 22.15-22.26)")
36 04    # vstore 4           # S = stack_new__1("main (is_precstack-test.c0: 22.15-22.26)");
15 04    # vload 4            # S
14 5A C8 # aldc 23240         # s[23240] = "-"
14 5A CA # aldc 23242         # s[23242] = "main (is_precstack-test.c0: 23.3-23.15)"
B8 00 2E # invokestatic 46    # push__1(S, "-", "main (is_precstack-test.c0: 23.3-23.15)")
57       # pop                # (ignore result)
15 04    # vload 4            # S
14 5A F2 # aldc 23282         # s[23282] = "*"
14 5A F4 # aldc 23284         # s[23284] = "main (is_precstack-test.c0: 24.3-24.15)"
B8 00 2E # invokestatic 46    # push__1(S, "*", "main (is_precstack-test.c0: 24.3-24.15)")
57       # pop                # (ignore result)
15 03    # vload 3            # D
15 04    # vload 4            # S
14 5B 1C # aldc 23324         # s[23324] = "main (is_precstack-test.c0: 27.10-27.28)"
B8 00 67 # invokestatic 103   # is_precstack(D, S, "main (is_precstack-test.c0: 27.10-27.28)")
14 5B 45 # aldc 23365         # s[23365] = "is_precstack-test.c0: 27.3-27.30: assert failed"
CF       # assert             # assert is_precstack(D, S, "main (is_precstack-test.c0: 27.10-27.28)") [failure message on stack]
15 04    # vload 4            # S
14 5B 75 # aldc 23413         # s[23413] = "*"
14 5B 77 # aldc 23415         # s[23415] = "main (is_precstack-test.c0: 30.3-30.15)"
B8 00 2E # invokestatic 46    # push__1(S, "*", "main (is_precstack-test.c0: 30.3-30.15)")
57       # pop                # (ignore result)
15 03    # vload 3            # D
15 04    # vload 4            # S
14 5B 9F # aldc 23455         # s[23455] = "main (is_precstack-test.c0: 31.11-31.29)"
B8 00 67 # invokestatic 103   # is_precstack(D, S, "main (is_precstack-test.c0: 31.11-31.29)")
10 01    # bipush 1           # 
82       # ixor               # !(is_precstack(D, S, "main (is_precstack-test.c0: 31.11-31.29)"))
14 5B C8 # aldc 23496         # s[23496] = "is_precstack-test.c0: 31.3-31.31: assert failed"
CF       # assert             # assert !(is_precstack(D, S, "main (is_precstack-test.c0: 31.11-31.29)")) [failure message on stack]
15 04    # vload 4            # S
14 5B F8 # aldc 23544         # s[23544] = "main (is_precstack-test.c0: 33.3-33.9)"
B8 00 2F # invokestatic 47    # pop__1(S, "main (is_precstack-test.c0: 33.3-33.9)")
57       # pop                # (ignore result)
15 04    # vload 4            # S
14 5C 1F # aldc 23583         # s[23583] = "/"
14 5C 21 # aldc 23585         # s[23585] = "main (is_precstack-test.c0: 34.3-34.14)"
B8 00 2E # invokestatic 46    # push__1(S, "/", "main (is_precstack-test.c0: 34.3-34.14)")
57       # pop                # (ignore result)
15 03    # vload 3            # D
15 04    # vload 4            # S
14 5C 49 # aldc 23625         # s[23625] = "main (is_precstack-test.c0: 35.11-35.29)"
B8 00 67 # invokestatic 103   # is_precstack(D, S, "main (is_precstack-test.c0: 35.11-35.29)")
10 01    # bipush 1           # 
82       # ixor               # !(is_precstack(D, S, "main (is_precstack-test.c0: 35.11-35.29)"))
14 5C 72 # aldc 23666         # s[23666] = "is_precstack-test.c0: 35.3-35.31: assert failed"
CF       # assert             # assert !(is_precstack(D, S, "main (is_precstack-test.c0: 35.11-35.29)")) [failure message on stack]
15 04    # vload 4            # S
14 5C A2 # aldc 23714         # s[23714] = "main (is_precstack-test.c0: 37.3-37.9)"
B8 00 2F # invokestatic 47    # pop__1(S, "main (is_precstack-test.c0: 37.3-37.9)")
57       # pop                # (ignore result)
15 04    # vload 4            # S
14 5C C9 # aldc 23753         # s[23753] = "**"
14 5C CC # aldc 23756         # s[23756] = "main (is_precstack-test.c0: 38.3-38.15)"
B8 00 2E # invokestatic 46    # push__1(S, "**", "main (is_precstack-test.c0: 38.3-38.15)")
57       # pop                # (ignore result)
15 03    # vload 3            # D
15 04    # vload 4            # S
14 5C F4 # aldc 23796         # s[23796] = "main (is_precstack-test.c0: 39.10-39.28)"
B8 00 67 # invokestatic 103   # is_precstack(D, S, "main (is_precstack-test.c0: 39.10-39.28)")
14 5D 1D # aldc 23837         # s[23837] = "is_precstack-test.c0: 39.3-39.30: assert failed"
CF       # assert             # assert is_precstack(D, S, "main (is_precstack-test.c0: 39.10-39.28)") [failure message on stack]
15 04    # vload 4            # S
14 5D 4D # aldc 23885         # s[23885] = "main (is_precstack-test.c0: 41.3-41.9)"
B8 00 2F # invokestatic 47    # pop__1(S, "main (is_precstack-test.c0: 41.3-41.9)")
57       # pop                # (ignore result)
15 04    # vload 4            # S
14 5D 74 # aldc 23924         # s[23924] = "main (is_precstack-test.c0: 42.3-42.9)"
B8 00 2F # invokestatic 47    # pop__1(S, "main (is_precstack-test.c0: 42.3-42.9)")
57       # pop                # (ignore result)
15 04    # vload 4            # S
14 5D 9B # aldc 23963         # s[23963] = "+"
14 5D 9D # aldc 23965         # s[23965] = "main (is_precstack-test.c0: 43.3-43.15)"
B8 00 2E # invokestatic 46    # push__1(S, "+", "main (is_precstack-test.c0: 43.3-43.15)")
57       # pop                # (ignore result)
15 04    # vload 4            # S
14 5D C5 # aldc 24005         # s[24005] = "**"
14 5D C8 # aldc 24008         # s[24008] = "main (is_precstack-test.c0: 44.3-44.16)"
B8 00 2E # invokestatic 46    # push__1(S, "**", "main (is_precstack-test.c0: 44.3-44.16)")
57       # pop                # (ignore result)
15 03    # vload 3            # D
15 04    # vload 4            # S
14 5D F0 # aldc 24048         # s[24048] = "main (is_precstack-test.c0: 45.11-45.29)"
B8 00 67 # invokestatic 103   # is_precstack(D, S, "main (is_precstack-test.c0: 45.11-45.29)")
10 01    # bipush 1           # 
82       # ixor               # !(is_precstack(D, S, "main (is_precstack-test.c0: 45.11-45.29)"))
14 5E 19 # aldc 24089         # s[24089] = "is_precstack-test.c0: 45.3-45.31: assert failed"
CF       # assert             # assert !(is_precstack(D, S, "main (is_precstack-test.c0: 45.11-45.29)")) [failure message on stack]
15 04    # vload 4            # S
14 5E 49 # aldc 24137         # s[24137] = "main (is_precstack-test.c0: 47.3-47.9)"
B8 00 2F # invokestatic 47    # pop__1(S, "main (is_precstack-test.c0: 47.3-47.9)")
57       # pop                # (ignore result)
15 04    # vload 4            # S
14 5E 70 # aldc 24176         # s[24176] = "main (is_precstack-test.c0: 48.3-48.9)"
B8 00 2F # invokestatic 47    # pop__1(S, "main (is_precstack-test.c0: 48.3-48.9)")
57       # pop                # (ignore result)
15 04    # vload 4            # S
14 5E 97 # aldc 24215         # s[24215] = "**"
14 5E 9A # aldc 24218         # s[24218] = "main (is_precstack-test.c0: 49.3-49.16)"
B8 00 2E # invokestatic 46    # push__1(S, "**", "main (is_precstack-test.c0: 49.3-49.16)")
57       # pop                # (ignore result)
15 04    # vload 4            # S
14 5E C2 # aldc 24258         # s[24258] = "/"
14 5E C4 # aldc 24260         # s[24260] = "main (is_precstack-test.c0: 50.3-50.15)"
B8 00 2E # invokestatic 46    # push__1(S, "/", "main (is_precstack-test.c0: 50.3-50.15)")
57       # pop                # (ignore result)
15 03    # vload 3            # D
15 04    # vload 4            # S
14 5E EC # aldc 24300         # s[24300] = "main (is_precstack-test.c0: 51.11-51.29)"
B8 00 67 # invokestatic 103   # is_precstack(D, S, "main (is_precstack-test.c0: 51.11-51.29)")
10 01    # bipush 1           # 
82       # ixor               # !(is_precstack(D, S, "main (is_precstack-test.c0: 51.11-51.29)"))
14 5F 15 # aldc 24341         # s[24341] = "is_precstack-test.c0: 51.3-51.31: assert failed"
CF       # assert             # assert !(is_precstack(D, S, "main (is_precstack-test.c0: 51.11-51.29)")) [failure message on stack]
14 5F 45 # aldc 24389         # s[24389] = "All tests passed!\n"
14 5F 58 # aldc 24408         # s[24408] = "main (is_precstack-test.c0: 53.3-53.32)"
B8 00 01 # invokestatic 1     # print__1("All tests passed!\n", "main (is_precstack-test.c0: 53.3-53.32)")
57       # pop                # (ignore result)
10 00    # bipush 0           # 0
36 01    # vstore 1           # _result = 0;
15 01    # vload 1            # _result
B0       # return             # 


#<print__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # s
B7 00 00 # invokenative 0     # print(s)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<println__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # s
B7 00 01 # invokenative 1     # println(s)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printint__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # i
B7 00 02 # invokenative 2     # printint(i)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printbool__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # b
B7 00 03 # invokenative 3     # printbool(b)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printchar__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # c
B7 00 04 # invokenative 4     # printchar(c)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<flush__1>
01                # number of arguments = 1
01                # number of local variables = 1
00 0A             # code length = 10 bytes
B7 00 05 # invokenative 5     # flush()
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<eof__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 08             # code length = 8 bytes
B7 00 06 # invokenative 6     # eof()
36 01    # vstore 1           # _result = eof();
15 01    # vload 1            # _result
B0       # return             # 


#<readline__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 20             # code length = 32 bytes
14 00 00 # aldc 0             # s[0] = "readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)"
B8 00 07 # invokestatic 7     # eof__1("readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)")
10 01    # bipush 1           # 
82       # ixor               # !(eof__1("readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)"))
14 00 42 # aldc 66            # s[66] = "/afs/andrew/course/15/122/lib/conio.h0: 14.6-14.22: @requires annotation failed\n"
15 00    # vload 0            # _caller
14 00 93 # aldc 147           # s[147] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/conio.h0: 14.6-14.22: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(eof__1("readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)")) [failure message on stack]
B7 00 08 # invokenative 8     # readline()
36 01    # vstore 1           # _result = readline();
15 01    # vload 1            # _result
B0       # return             # 


#<is_segment_slist>
03                # number of arguments = 3
04                # number of local variables = 4
00 39             # code length = 57 bytes
15 00    # vload 0            # start
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (start == NULL) goto <00:then>
A7 00 0D # goto +13           # goto <01:else>
# <00:then>
10 00    # bipush 0           # false
36 03    # vstore 3           # _result = false;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <02:endif>
# <01:else>
# <02:endif>
15 00    # vload 0            # start
15 01    # vload 1            # end
9F 00 06 # if_cmpeq +6        # if (start == end) goto <03:then>
A7 00 0D # goto +13           # goto <04:else>
# <03:then>
10 01    # bipush 1           # true
36 03    # vstore 3           # _result = true;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <05:endif>
# <04:else>
# <05:endif>
15 00    # vload 0            # start
62 08    # aaddf 8            # &start->next
2F       # amload             # start->next
15 01    # vload 1            # end
14 00 A5 # aldc 165           # s[165] = "is_segment_slist (.tmp0/queue_of_string.c0: 23.10-23.44)"
B8 00 09 # invokestatic 9     # is_segment_slist(start->next, end, "is_segment_slist (.tmp0/queue_of_string.c0: 23.10-23.44)")
36 03    # vstore 3           # _result = is_segment_slist(start->next, end, "is_segment_slist (.tmp0/queue_of_string.c0: 23.10-23.44)");
15 03    # vload 3            # _result
B0       # return             # 


#<is_queue>
02                # number of arguments = 2
03                # number of local variables = 3
00 23             # code length = 35 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <06:cond_true>
A7 00 16 # goto +22           # goto <07:cond_false>
# <06:cond_true>
15 00    # vload 0            # Q
62 08    # aaddf 8            # &Q->front
2F       # amload             # Q->front
15 00    # vload 0            # Q
62 10    # aaddf 16           # &Q->back
2F       # amload             # Q->back
14 00 DE # aldc 222           # s[222] = "is_queue (.tmp0/queue_of_string.c0: 37.8-37.43)"
B8 00 09 # invokestatic 9     # is_segment_slist(Q->front, Q->back, "is_queue (.tmp0/queue_of_string.c0: 37.8-37.43)")
A7 00 05 # goto +5            # goto <08:cond_end>
# <07:cond_false>
10 00    # bipush 0           # false
# <08:cond_end>
36 02    # vstore 2           # _result = ((Q != NULL) && is_segment_slist(Q->front, Q->back, "is_queue (.tmp0/queue_of_string.c0: 37.8-37.43)"));
15 02    # vload 2            # _result
B0       # return             # 


#<queue_empty>
02                # number of arguments = 2
03                # number of local variables = 3
00 33             # code length = 51 bytes
15 00    # vload 0            # Q
14 01 0E # aldc 270           # s[270] = "queue_empty (.tmp0/queue_of_string.c0: 41.13-41.24)"
B8 00 0A # invokestatic 10    # is_queue(Q, "queue_empty (.tmp0/queue_of_string.c0: 41.13-41.24)")
14 01 42 # aldc 322           # s[322] = ".tmp0/queue_of_string.c0: 41.4-41.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 01 85 # aldc 389           # s[389] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/queue_of_string.c0: 41.4-41.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_queue(Q, "queue_empty (.tmp0/queue_of_string.c0: 41.13-41.24)") [failure message on stack]
15 00    # vload 0            # Q
62 08    # aaddf 8            # &Q->front
2F       # amload             # Q->front
15 00    # vload 0            # Q
62 10    # aaddf 16           # &Q->back
2F       # amload             # Q->back
9F 00 06 # if_cmpeq +6        # if (Q->front == Q->back) goto <09:cond_true>
A7 00 08 # goto +8            # goto <10:cond_false>
# <09:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <11:cond_end>
# <10:cond_false>
10 00    # bipush 0           # false
# <11:cond_end>
36 02    # vstore 2           # _result = (Q->front == Q->back);
15 02    # vload 2            # _result
B0       # return             # 


#<queue_is_read_only>
02                # number of arguments = 2
03                # number of local variables = 3
00 21             # code length = 33 bytes
15 00    # vload 0            # Q
14 01 97 # aldc 407           # s[407] = "queue_is_read_only (.tmp0/queue_of_string.c0: 47.13-47.24)"
B8 00 0A # invokestatic 10    # is_queue(Q, "queue_is_read_only (.tmp0/queue_of_string.c0: 47.13-47.24)")
14 01 D2 # aldc 466           # s[466] = ".tmp0/queue_of_string.c0: 47.4-47.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 02 15 # aldc 533           # s[533] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/queue_of_string.c0: 47.4-47.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_queue(Q, "queue_is_read_only (.tmp0/queue_of_string.c0: 47.13-47.24)") [failure message on stack]
15 00    # vload 0            # Q
62 00    # aaddf 0            # &Q->is_read_only
34       # cmload             # Q->is_read_only
36 02    # vstore 2           # _result = Q->is_read_only;
15 02    # vload 2            # _result
B0       # return             # 


#<queue_new>
01                # number of arguments = 1
04                # number of local variables = 4
00 3C             # code length = 60 bytes
BB 18    # new 24             # alloc(queue)
36 02    # vstore 2           # Q = alloc(queue);
BB 10    # new 16             # alloc(slist)
36 03    # vstore 3           # l = alloc(slist);
15 02    # vload 2            # Q
62 00    # aaddf 0            # &Q->is_read_only
10 00    # bipush 0           # false
55       # cmstore            # Q->is_read_only = false;
15 02    # vload 2            # Q
62 08    # aaddf 8            # &Q->front
15 03    # vload 3            # l
4F       # amstore            # Q->front = l;
15 02    # vload 2            # Q
62 10    # aaddf 16           # &Q->back
15 03    # vload 3            # l
4F       # amstore            # Q->back = l;
15 02    # vload 2            # Q
36 01    # vstore 1           # _result = Q;
15 01    # vload 1            # _result
14 02 27 # aldc 551           # s[551] = "queue_new (.tmp0/queue_of_string.c0: 53.12-53.29)"
B8 00 0A # invokestatic 10    # is_queue(_result, "queue_new (.tmp0/queue_of_string.c0: 53.12-53.29)")
14 02 59 # aldc 601           # s[601] = ".tmp0/queue_of_string.c0: 53.4-53.30: @ensures annotation failed"
CF       # assert             # assert is_queue(_result, "queue_new (.tmp0/queue_of_string.c0: 53.12-53.29)") [failure message on stack]
15 01    # vload 1            # _result
14 02 9A # aldc 666           # s[666] = "queue_new (.tmp0/queue_of_string.c0: 54.12-54.32)"
B8 00 0B # invokestatic 11    # queue_empty(_result, "queue_new (.tmp0/queue_of_string.c0: 54.12-54.32)")
14 02 CC # aldc 716           # s[716] = ".tmp0/queue_of_string.c0: 54.4-54.33: @ensures annotation failed"
CF       # assert             # assert queue_empty(_result, "queue_new (.tmp0/queue_of_string.c0: 54.12-54.32)") [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<enq>
03                # number of arguments = 3
04                # number of local variables = 4
00 72             # code length = 114 bytes
15 00    # vload 0            # Q
14 03 0D # aldc 781           # s[781] = "enq (.tmp0/queue_of_string.c0: 65.13-65.24)"
B8 00 0A # invokestatic 10    # is_queue(Q, "enq (.tmp0/queue_of_string.c0: 65.13-65.24)")
14 03 39 # aldc 825           # s[825] = ".tmp0/queue_of_string.c0: 65.4-65.25: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 03 7C # aldc 892           # s[892] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/queue_of_string.c0: 65.4-65.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_queue(Q, "enq (.tmp0/queue_of_string.c0: 65.13-65.24)") [failure message on stack]
BB 10    # new 16             # alloc(slist)
36 03    # vstore 3           # l = alloc(slist);
15 00    # vload 0            # Q
62 10    # aaddf 16           # &Q->back
2F       # amload             # Q->back
62 00    # aaddf 0            # &Q->back->data
15 01    # vload 1            # s
4F       # amstore            # Q->back->data = s;
15 00    # vload 0            # Q
62 10    # aaddf 16           # &Q->back
2F       # amload             # Q->back
62 08    # aaddf 8            # &Q->back->next
15 03    # vload 3            # l
4F       # amstore            # Q->back->next = l;
15 00    # vload 0            # Q
62 10    # aaddf 16           # &Q->back
15 03    # vload 3            # l
4F       # amstore            # Q->back = l;
15 00    # vload 0            # Q
14 03 8E # aldc 910           # s[910] = "enq (.tmp0/queue_of_string.c0: 66.12-66.23)"
B8 00 0A # invokestatic 10    # is_queue(Q, "enq (.tmp0/queue_of_string.c0: 66.12-66.23)")
14 03 BA # aldc 954           # s[954] = ".tmp0/queue_of_string.c0: 66.4-66.24: @ensures annotation failed"
CF       # assert             # assert is_queue(Q, "enq (.tmp0/queue_of_string.c0: 66.12-66.23)") [failure message on stack]
15 00    # vload 0            # Q
14 03 FB # aldc 1019          # s[1019] = "enq (.tmp0/queue_of_string.c0: 67.13-67.27)"
B8 00 0B # invokestatic 11    # queue_empty(Q, "enq (.tmp0/queue_of_string.c0: 67.13-67.27)")
10 01    # bipush 1           # 
82       # ixor               # !(queue_empty(Q, "enq (.tmp0/queue_of_string.c0: 67.13-67.27)"))
14 04 27 # aldc 1063          # s[1063] = ".tmp0/queue_of_string.c0: 67.4-67.28: @ensures annotation failed"
CF       # assert             # assert !(queue_empty(Q, "enq (.tmp0/queue_of_string.c0: 67.13-67.27)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 
15 00    # vload 0            # Q
14 04 68 # aldc 1128          # s[1128] = "enq (.tmp0/queue_of_string.c0: 66.12-66.23)"
B8 00 0A # invokestatic 10    # is_queue(Q, "enq (.tmp0/queue_of_string.c0: 66.12-66.23)")
14 04 94 # aldc 1172          # s[1172] = ".tmp0/queue_of_string.c0: 66.4-66.24: @ensures annotation failed"
CF       # assert             # assert is_queue(Q, "enq (.tmp0/queue_of_string.c0: 66.12-66.23)") [failure message on stack]
15 00    # vload 0            # Q
14 04 D5 # aldc 1237          # s[1237] = "enq (.tmp0/queue_of_string.c0: 67.13-67.27)"
B8 00 0B # invokestatic 11    # queue_empty(Q, "enq (.tmp0/queue_of_string.c0: 67.13-67.27)")
10 01    # bipush 1           # 
82       # ixor               # !(queue_empty(Q, "enq (.tmp0/queue_of_string.c0: 67.13-67.27)"))
14 05 01 # aldc 1281          # s[1281] = ".tmp0/queue_of_string.c0: 67.4-67.28: @ensures annotation failed"
CF       # assert             # assert !(queue_empty(Q, "enq (.tmp0/queue_of_string.c0: 67.13-67.27)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<deq>
02                # number of arguments = 2
04                # number of local variables = 4
00 5B             # code length = 91 bytes
15 00    # vload 0            # Q
14 05 42 # aldc 1346          # s[1346] = "deq (.tmp0/queue_of_string.c0: 77.13-77.24)"
B8 00 0A # invokestatic 10    # is_queue(Q, "deq (.tmp0/queue_of_string.c0: 77.13-77.24)")
14 05 6E # aldc 1390          # s[1390] = ".tmp0/queue_of_string.c0: 77.4-77.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 05 B1 # aldc 1457          # s[1457] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/queue_of_string.c0: 77.4-77.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_queue(Q, "deq (.tmp0/queue_of_string.c0: 77.13-77.24)") [failure message on stack]
15 00    # vload 0            # Q
14 05 C3 # aldc 1475          # s[1475] = "deq (.tmp0/queue_of_string.c0: 78.14-78.28)"
B8 00 0B # invokestatic 11    # queue_empty(Q, "deq (.tmp0/queue_of_string.c0: 78.14-78.28)")
10 01    # bipush 1           # 
82       # ixor               # !(queue_empty(Q, "deq (.tmp0/queue_of_string.c0: 78.14-78.28)"))
14 05 EF # aldc 1519          # s[1519] = ".tmp0/queue_of_string.c0: 78.4-78.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 06 32 # aldc 1586          # s[1586] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/queue_of_string.c0: 78.4-78.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(queue_empty(Q, "deq (.tmp0/queue_of_string.c0: 78.14-78.28)")) [failure message on stack]
15 00    # vload 0            # Q
62 08    # aaddf 8            # &Q->front
2F       # amload             # Q->front
62 00    # aaddf 0            # &Q->front->data
2F       # amload             # Q->front->data
36 03    # vstore 3           # s = Q->front->data;
15 00    # vload 0            # Q
62 08    # aaddf 8            # &Q->front
15 00    # vload 0            # Q
62 08    # aaddf 8            # &Q->front
2F       # amload             # Q->front
62 08    # aaddf 8            # &Q->front->next
2F       # amload             # Q->front->next
4F       # amstore            # Q->front = Q->front->next;
15 03    # vload 3            # s
36 02    # vstore 2           # _result = s;
15 00    # vload 0            # Q
14 06 44 # aldc 1604          # s[1604] = "deq (.tmp0/queue_of_string.c0: 79.12-79.23)"
B8 00 0A # invokestatic 10    # is_queue(Q, "deq (.tmp0/queue_of_string.c0: 79.12-79.23)")
14 06 70 # aldc 1648          # s[1648] = ".tmp0/queue_of_string.c0: 79.4-79.24: @ensures annotation failed"
CF       # assert             # assert is_queue(Q, "deq (.tmp0/queue_of_string.c0: 79.12-79.23)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<queue_print>
02                # number of arguments = 2
03                # number of local variables = 3
00 92             # code length = 146 bytes
15 00    # vload 0            # Q
14 06 B1 # aldc 1713          # s[1713] = "queue_print (.tmp0/queue_of_string.c0: 87.13-87.24)"
B8 00 0A # invokestatic 10    # is_queue(Q, "queue_print (.tmp0/queue_of_string.c0: 87.13-87.24)")
14 06 E5 # aldc 1765          # s[1765] = ".tmp0/queue_of_string.c0: 87.4-87.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 07 28 # aldc 1832          # s[1832] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/queue_of_string.c0: 87.4-87.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_queue(Q, "queue_print (.tmp0/queue_of_string.c0: 87.13-87.24)") [failure message on stack]
14 07 3A # aldc 1850          # s[1850] = "[front] "
14 07 43 # aldc 1859          # s[1859] = "queue_print (.tmp0/queue_of_string.c0: 89.3-89.21)"
B8 00 01 # invokestatic 1     # print__1("[front] ", "queue_print (.tmp0/queue_of_string.c0: 89.3-89.21)")
57       # pop                # (ignore result)
15 00    # vload 0            # Q
62 08    # aaddf 8            # &Q->front
2F       # amload             # Q->front
36 02    # vstore 2           # l = Q->front;
# <12:loop>
A7 00 03 # goto +3            # goto <13:body>
# <13:body>
15 02    # vload 2            # l
15 00    # vload 0            # Q
62 10    # aaddf 16           # &Q->back
2F       # amload             # Q->back
A0 00 06 # if_cmpne +6        # if (l != Q->back) goto <15:then>
A7 00 4A # goto +74           # goto <16:else>
# <15:then>
14 07 76 # aldc 1910          # s[1910] = ""
14 07 77 # aldc 1911          # s[1911] = "queue_print (.tmp0/queue_of_string.c0: 91.5-91.26)"
B8 00 01 # invokestatic 1     # print__1("", "queue_print (.tmp0/queue_of_string.c0: 91.5-91.26)")
57       # pop                # (ignore result)
15 02    # vload 2            # l
62 00    # aaddf 0            # &l->data
2F       # amload             # l->data
14 07 AA # aldc 1962          # s[1962] = "queue_print (.tmp0/queue_of_string.c0: 91.5-91.26)"
B8 00 01 # invokestatic 1     # print__1(l->data, "queue_print (.tmp0/queue_of_string.c0: 91.5-91.26)")
57       # pop                # (ignore result)
14 07 DD # aldc 2013          # s[2013] = ""
14 07 DE # aldc 2014          # s[2014] = "queue_print (.tmp0/queue_of_string.c0: 91.5-91.26)"
B8 00 01 # invokestatic 1     # print__1("", "queue_print (.tmp0/queue_of_string.c0: 91.5-91.26)")
57       # pop                # (ignore result)
15 02    # vload 2            # l
62 08    # aaddf 8            # &l->next
2F       # amload             # l->next
15 00    # vload 0            # Q
62 10    # aaddf 16           # &Q->back
2F       # amload             # Q->back
A0 00 06 # if_cmpne +6        # if (l->next != Q->back) goto <18:then>
A7 00 10 # goto +16           # goto <19:else>
# <18:then>
14 08 11 # aldc 2065          # s[2065] = " << "
14 08 16 # aldc 2070          # s[2070] = "queue_print (.tmp0/queue_of_string.c0: 92.29-92.43)"
B8 00 01 # invokestatic 1     # print__1(" << ", "queue_print (.tmp0/queue_of_string.c0: 92.29-92.43)")
57       # pop                # (ignore result)
A7 00 03 # goto +3            # goto <20:endif>
# <19:else>
# <20:endif>
15 02    # vload 2            # l
62 08    # aaddf 8            # &l->next
2F       # amload             # l->next
36 02    # vstore 2           # l = l->next;
A7 00 06 # goto +6            # goto <17:endif>
# <16:else>
A7 00 06 # goto +6            # break
# <17:endif>
A7 FF A6 # goto -90           # goto <12:loop>
# <14:exit>
14 08 4A # aldc 2122          # s[2122] = " [back]"
14 08 52 # aldc 2130          # s[2130] = "queue_print (.tmp0/queue_of_string.c0: 94.3-94.20)"
B8 00 01 # invokestatic 1     # print__1(" [back]", "queue_print (.tmp0/queue_of_string.c0: 94.3-94.20)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<queue_read_only_copy>
02                # number of arguments = 2
04                # number of local variables = 4
00 61             # code length = 97 bytes
15 00    # vload 0            # Q
14 08 85 # aldc 2181          # s[2181] = "queue_read_only_copy (.tmp0/queue_of_string.c0: 98.13-98.24)"
B8 00 0A # invokestatic 10    # is_queue(Q, "queue_read_only_copy (.tmp0/queue_of_string.c0: 98.13-98.24)")
14 08 C2 # aldc 2242          # s[2242] = ".tmp0/queue_of_string.c0: 98.4-98.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 09 05 # aldc 2309          # s[2309] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/queue_of_string.c0: 98.4-98.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_queue(Q, "queue_read_only_copy (.tmp0/queue_of_string.c0: 98.13-98.24)") [failure message on stack]
BB 18    # new 24             # alloc(queue)
36 03    # vstore 3           # QC = alloc(queue);
15 03    # vload 3            # QC
62 00    # aaddf 0            # &QC->is_read_only
10 01    # bipush 1           # true
55       # cmstore            # QC->is_read_only = true;
15 03    # vload 3            # QC
62 08    # aaddf 8            # &QC->front
15 00    # vload 0            # Q
62 08    # aaddf 8            # &Q->front
2F       # amload             # Q->front
4F       # amstore            # QC->front = Q->front;
15 03    # vload 3            # QC
62 10    # aaddf 16           # &QC->back
15 00    # vload 0            # Q
62 10    # aaddf 16           # &Q->back
2F       # amload             # Q->back
4F       # amstore            # QC->back = Q->back;
15 03    # vload 3            # QC
36 02    # vstore 2           # _result = QC;
15 00    # vload 0            # Q
14 09 17 # aldc 2327          # s[2327] = "queue_read_only_copy (.tmp0/queue_of_string.c0: 99.12-99.23)"
B8 00 0A # invokestatic 10    # is_queue(Q, "queue_read_only_copy (.tmp0/queue_of_string.c0: 99.12-99.23)")
14 09 54 # aldc 2388          # s[2388] = ".tmp0/queue_of_string.c0: 99.4-99.24: @ensures annotation failed"
CF       # assert             # assert is_queue(Q, "queue_read_only_copy (.tmp0/queue_of_string.c0: 99.12-99.23)") [failure message on stack]
15 02    # vload 2            # _result
14 09 95 # aldc 2453          # s[2453] = "queue_read_only_copy (.tmp0/queue_of_string.c0: 100.12-100.29)"
B8 00 0A # invokestatic 10    # is_queue(_result, "queue_read_only_copy (.tmp0/queue_of_string.c0: 100.12-100.29)")
14 09 D4 # aldc 2516          # s[2516] = ".tmp0/queue_of_string.c0: 100.4-100.30: @ensures annotation failed"
CF       # assert             # assert is_queue(_result, "queue_read_only_copy (.tmp0/queue_of_string.c0: 100.12-100.29)") [failure message on stack]
15 02    # vload 2            # _result
14 0A 17 # aldc 2583          # s[2583] = "queue_read_only_copy (.tmp0/queue_of_string.c0: 101.12-101.39)"
B8 00 0C # invokestatic 12    # queue_is_read_only(_result, "queue_read_only_copy (.tmp0/queue_of_string.c0: 101.12-101.39)")
14 0A 56 # aldc 2646          # s[2646] = ".tmp0/queue_of_string.c0: 101.4-101.40: @ensures annotation failed"
CF       # assert             # assert queue_is_read_only(_result, "queue_read_only_copy (.tmp0/queue_of_string.c0: 101.12-101.39)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<queue_empty__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 2C             # code length = 44 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <21:cond_true>
A7 00 08 # goto +8            # goto <22:cond_false>
# <21:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <23:cond_end>
# <22:cond_false>
10 00    # bipush 0           # false
# <23:cond_end>
14 0A 99 # aldc 2713          # s[2713] = ".tmp0/queue_of_string.c0: 122.4-122.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 0A DE # aldc 2782          # s[2782] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/queue_of_string.c0: 122.4-122.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
15 00    # vload 0            # Q
14 0A F0 # aldc 2800          # s[2800] = "queue_empty__1 (.tmp0/queue_of_string.c0: 121.1-122.39)"
B8 00 0B # invokestatic 11    # queue_empty(Q, "queue_empty__1 (.tmp0/queue_of_string.c0: 121.1-122.39)")
36 02    # vstore 2           # _result = queue_empty(Q, "queue_empty__1 (.tmp0/queue_of_string.c0: 121.1-122.39)");
15 02    # vload 2            # _result
B0       # return             # 


#<queue_is_read_only__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 2C             # code length = 44 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <24:cond_true>
A7 00 08 # goto +8            # goto <25:cond_false>
# <24:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <26:cond_end>
# <25:cond_false>
10 00    # bipush 0           # false
# <26:cond_end>
14 0B 28 # aldc 2856          # s[2856] = ".tmp0/queue_of_string.c0: 125.4-125.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 0B 6D # aldc 2925          # s[2925] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/queue_of_string.c0: 125.4-125.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
15 00    # vload 0            # Q
14 0B 7F # aldc 2943          # s[2943] = "queue_is_read_only__1 (.tmp0/queue_of_string.c0: 124.1-125.39)"
B8 00 0C # invokestatic 12    # queue_is_read_only(Q, "queue_is_read_only__1 (.tmp0/queue_of_string.c0: 124.1-125.39)")
36 02    # vstore 2           # _result = queue_is_read_only(Q, "queue_is_read_only__1 (.tmp0/queue_of_string.c0: 124.1-125.39)");
15 02    # vload 2            # _result
B0       # return             # 


#<queue_new__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 2B             # code length = 43 bytes
14 0B BE # aldc 3006          # s[3006] = "queue_new__1 (.tmp0/queue_of_string.c0: 127.1-129.39)"
B8 00 0D # invokestatic 13    # queue_new("queue_new__1 (.tmp0/queue_of_string.c0: 127.1-129.39)")
36 01    # vstore 1           # _result = queue_new("queue_new__1 (.tmp0/queue_of_string.c0: 127.1-129.39)");
15 01    # vload 1            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <27:cond_true>
A7 00 08 # goto +8            # goto <28:cond_false>
# <27:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <29:cond_end>
# <28:cond_false>
10 00    # bipush 0           # false
# <29:cond_end>
14 0B F4 # aldc 3060          # s[3060] = ".tmp0/queue_of_string.c0: 128.4-128.28: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 01    # vload 1            # _result
14 0C 37 # aldc 3127          # s[3127] = "queue_new__1 (.tmp0/queue_of_string.c0: 129.12-129.32)"
B8 00 12 # invokestatic 18    # queue_empty__1(_result, "queue_new__1 (.tmp0/queue_of_string.c0: 129.12-129.32)")
14 0C 6E # aldc 3182          # s[3182] = ".tmp0/queue_of_string.c0: 129.4-129.33: @ensures annotation failed"
CF       # assert             # assert queue_empty__1(_result, "queue_new__1 (.tmp0/queue_of_string.c0: 129.12-129.32)") [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<enq__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 4E             # code length = 78 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <30:cond_true>
A7 00 08 # goto +8            # goto <31:cond_false>
# <30:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <32:cond_end>
# <31:cond_false>
10 00    # bipush 0           # false
# <32:cond_end>
14 0C B1 # aldc 3249          # s[3249] = ".tmp0/queue_of_string.c0: 132.4-132.23: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 0C F6 # aldc 3318          # s[3318] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/queue_of_string.c0: 132.4-132.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
15 00    # vload 0            # Q
15 01    # vload 1            # e
14 0D 08 # aldc 3336          # s[3336] = "enq__1 (.tmp0/queue_of_string.c0: 131.1-133.39)"
B8 00 0E # invokestatic 14    # enq(Q, e, "enq__1 (.tmp0/queue_of_string.c0: 131.1-133.39)")
57       # pop                # (ignore result)
15 00    # vload 0            # Q
14 0D 38 # aldc 3384          # s[3384] = "enq__1 (.tmp0/queue_of_string.c0: 133.13-133.27)"
B8 00 12 # invokestatic 18    # queue_empty__1(Q, "enq__1 (.tmp0/queue_of_string.c0: 133.13-133.27)")
10 01    # bipush 1           # 
82       # ixor               # !(queue_empty__1(Q, "enq__1 (.tmp0/queue_of_string.c0: 133.13-133.27)"))
14 0D 69 # aldc 3433          # s[3433] = ".tmp0/queue_of_string.c0: 133.4-133.28: @ensures annotation failed"
CF       # assert             # assert !(queue_empty__1(Q, "enq__1 (.tmp0/queue_of_string.c0: 133.13-133.27)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 
15 00    # vload 0            # Q
14 0D AC # aldc 3500          # s[3500] = "enq__1 (.tmp0/queue_of_string.c0: 133.13-133.27)"
B8 00 12 # invokestatic 18    # queue_empty__1(Q, "enq__1 (.tmp0/queue_of_string.c0: 133.13-133.27)")
10 01    # bipush 1           # 
82       # ixor               # !(queue_empty__1(Q, "enq__1 (.tmp0/queue_of_string.c0: 133.13-133.27)"))
14 0D DD # aldc 3549          # s[3549] = ".tmp0/queue_of_string.c0: 133.4-133.28: @ensures annotation failed"
CF       # assert             # assert !(queue_empty__1(Q, "enq__1 (.tmp0/queue_of_string.c0: 133.13-133.27)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<deq__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 46             # code length = 70 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <33:cond_true>
A7 00 08 # goto +8            # goto <34:cond_false>
# <33:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <35:cond_end>
# <34:cond_false>
10 00    # bipush 0           # false
# <35:cond_end>
14 0E 20 # aldc 3616          # s[3616] = ".tmp0/queue_of_string.c0: 136.4-136.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 0E 65 # aldc 3685          # s[3685] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/queue_of_string.c0: 136.4-136.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
15 00    # vload 0            # Q
14 0E 77 # aldc 3703          # s[3703] = "deq__1 (.tmp0/queue_of_string.c0: 137.14-137.28)"
B8 00 12 # invokestatic 18    # queue_empty__1(Q, "deq__1 (.tmp0/queue_of_string.c0: 137.14-137.28)")
10 01    # bipush 1           # 
82       # ixor               # !(queue_empty__1(Q, "deq__1 (.tmp0/queue_of_string.c0: 137.14-137.28)"))
14 0E A8 # aldc 3752          # s[3752] = ".tmp0/queue_of_string.c0: 137.4-137.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 0E ED # aldc 3821          # s[3821] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/queue_of_string.c0: 137.4-137.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(queue_empty__1(Q, "deq__1 (.tmp0/queue_of_string.c0: 137.14-137.28)")) [failure message on stack]
15 00    # vload 0            # Q
14 0E FF # aldc 3839          # s[3839] = "deq__1 (.tmp0/queue_of_string.c0: 135.1-137.39)"
B8 00 0F # invokestatic 15    # deq(Q, "deq__1 (.tmp0/queue_of_string.c0: 135.1-137.39)")
36 02    # vstore 2           # _result = deq(Q, "deq__1 (.tmp0/queue_of_string.c0: 135.1-137.39)");
15 02    # vload 2            # _result
B0       # return             # 


#<queue_print__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 2E             # code length = 46 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <36:cond_true>
A7 00 08 # goto +8            # goto <37:cond_false>
# <36:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <38:cond_end>
# <37:cond_false>
10 00    # bipush 0           # false
# <38:cond_end>
14 0F 2F # aldc 3887          # s[3887] = ".tmp0/queue_of_string.c0: 140.4-140.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 0F 74 # aldc 3956          # s[3956] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/queue_of_string.c0: 140.4-140.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
15 00    # vload 0            # Q
14 0F 86 # aldc 3974          # s[3974] = "queue_print__1 (.tmp0/queue_of_string.c0: 139.1-140.39)"
B8 00 10 # invokestatic 16    # queue_print(Q, "queue_print__1 (.tmp0/queue_of_string.c0: 139.1-140.39)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<queue_read_only_copy__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 2D             # code length = 45 bytes
15 00    # vload 0            # Q
14 0F BE # aldc 4030          # s[4030] = "queue_read_only_copy__1 (.tmp0/queue_of_string.c0: 145.1-147.46)"
B8 00 11 # invokestatic 17    # queue_read_only_copy(Q, "queue_read_only_copy__1 (.tmp0/queue_of_string.c0: 145.1-147.46)")
36 02    # vstore 2           # _result = queue_read_only_copy(Q, "queue_read_only_copy__1 (.tmp0/queue_of_string.c0: 145.1-147.46)");
15 02    # vload 2            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <39:cond_true>
A7 00 08 # goto +8            # goto <40:cond_false>
# <39:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <41:cond_end>
# <40:cond_false>
10 00    # bipush 0           # false
# <41:cond_end>
14 0F FF # aldc 4095          # s[4095] = ".tmp0/queue_of_string.c0: 146.4-146.28: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 02    # vload 2            # _result
14 10 42 # aldc 4162          # s[4162] = "queue_read_only_copy__1 (.tmp0/queue_of_string.c0: 147.12-147.39)"
B8 00 13 # invokestatic 19    # queue_is_read_only__1(_result, "queue_read_only_copy__1 (.tmp0/queue_of_string.c0: 147.12-147.39)")
14 10 84 # aldc 4228          # s[4228] = ".tmp0/queue_of_string.c0: 147.4-147.40: @ensures annotation failed"
CF       # assert             # assert queue_is_read_only__1(_result, "queue_read_only_copy__1 (.tmp0/queue_of_string.c0: 147.12-147.39)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<is_segment_intlist>
03                # number of arguments = 3
04                # number of local variables = 4
00 39             # code length = 57 bytes
15 00    # vload 0            # start
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (start == NULL) goto <42:then>
A7 00 0D # goto +13           # goto <43:else>
# <42:then>
10 00    # bipush 0           # false
36 03    # vstore 3           # _result = false;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <44:endif>
# <43:else>
# <44:endif>
15 00    # vload 0            # start
15 01    # vload 1            # end
9F 00 06 # if_cmpeq +6        # if (start == end) goto <45:then>
A7 00 0D # goto +13           # goto <46:else>
# <45:then>
10 01    # bipush 1           # true
36 03    # vstore 3           # _result = true;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <47:endif>
# <46:else>
# <47:endif>
15 00    # vload 0            # start
62 08    # aaddf 8            # &start->next
2F       # amload             # start->next
15 01    # vload 1            # end
14 10 C7 # aldc 4295          # s[4295] = "is_segment_intlist (.tmp0/stack_of_int.c0: 23.10-23.46)"
B8 00 19 # invokestatic 25    # is_segment_intlist(start->next, end, "is_segment_intlist (.tmp0/stack_of_int.c0: 23.10-23.46)")
36 03    # vstore 3           # _result = is_segment_intlist(start->next, end, "is_segment_intlist (.tmp0/stack_of_int.c0: 23.10-23.46)");
15 03    # vload 3            # _result
B0       # return             # 


#<is_istack>
02                # number of arguments = 2
03                # number of local variables = 3
00 23             # code length = 35 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <48:cond_true>
A7 00 16 # goto +22           # goto <49:cond_false>
# <48:cond_true>
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
14 10 FF # aldc 4351          # s[4351] = "is_istack (.tmp0/stack_of_int.c0: 36.8-36.44)"
B8 00 19 # invokestatic 25    # is_segment_intlist(S->top, S->floor, "is_istack (.tmp0/stack_of_int.c0: 36.8-36.44)")
A7 00 05 # goto +5            # goto <50:cond_end>
# <49:cond_false>
10 00    # bipush 0           # false
# <50:cond_end>
36 02    # vstore 2           # _result = ((S != NULL) && is_segment_intlist(S->top, S->floor, "is_istack (.tmp0/stack_of_int.c0: 36.8-36.44)"));
15 02    # vload 2            # _result
B0       # return             # 


#<istack_empty>
02                # number of arguments = 2
03                # number of local variables = 3
00 33             # code length = 51 bytes
15 00    # vload 0            # S
14 11 2D # aldc 4397          # s[4397] = "istack_empty (.tmp0/stack_of_int.c0: 40.13-40.25)"
B8 00 1A # invokestatic 26    # is_istack(S, "istack_empty (.tmp0/stack_of_int.c0: 40.13-40.25)")
14 11 5F # aldc 4447          # s[4447] = ".tmp0/stack_of_int.c0: 40.4-40.26: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 11 9F # aldc 4511          # s[4511] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_int.c0: 40.4-40.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_istack(S, "istack_empty (.tmp0/stack_of_int.c0: 40.13-40.25)") [failure message on stack]
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
9F 00 06 # if_cmpeq +6        # if (S->top == S->floor) goto <51:cond_true>
A7 00 08 # goto +8            # goto <52:cond_false>
# <51:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <53:cond_end>
# <52:cond_false>
10 00    # bipush 0           # false
# <53:cond_end>
36 02    # vstore 2           # _result = (S->top == S->floor);
15 02    # vload 2            # _result
B0       # return             # 


#<istack_new>
01                # number of arguments = 1
04                # number of local variables = 4
00 35             # code length = 53 bytes
BB 10    # new 16             # alloc(istack)
36 02    # vstore 2           # S = alloc(istack);
BB 10    # new 16             # alloc(intlist)
36 03    # vstore 3           # l = alloc(intlist);
15 02    # vload 2            # S
62 00    # aaddf 0            # &S->top
15 03    # vload 3            # l
4F       # amstore            # S->top = l;
15 02    # vload 2            # S
62 08    # aaddf 8            # &S->floor
15 03    # vload 3            # l
4F       # amstore            # S->floor = l;
15 02    # vload 2            # S
36 01    # vstore 1           # _result = S;
15 01    # vload 1            # _result
14 11 B1 # aldc 4529          # s[4529] = "istack_new (.tmp0/stack_of_int.c0: 46.12-46.30)"
B8 00 1A # invokestatic 26    # is_istack(_result, "istack_new (.tmp0/stack_of_int.c0: 46.12-46.30)")
14 11 E1 # aldc 4577          # s[4577] = ".tmp0/stack_of_int.c0: 46.4-46.31: @ensures annotation failed"
CF       # assert             # assert is_istack(_result, "istack_new (.tmp0/stack_of_int.c0: 46.12-46.30)") [failure message on stack]
15 01    # vload 1            # _result
14 12 1F # aldc 4639          # s[4639] = "istack_new (.tmp0/stack_of_int.c0: 47.12-47.33)"
B8 00 1B # invokestatic 27    # istack_empty(_result, "istack_new (.tmp0/stack_of_int.c0: 47.12-47.33)")
14 12 4F # aldc 4687          # s[4687] = ".tmp0/stack_of_int.c0: 47.4-47.34: @ensures annotation failed"
CF       # assert             # assert istack_empty(_result, "istack_new (.tmp0/stack_of_int.c0: 47.12-47.33)") [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<ipush>
03                # number of arguments = 3
04                # number of local variables = 4
00 42             # code length = 66 bytes
15 00    # vload 0            # S
14 12 8D # aldc 4749          # s[4749] = "ipush (.tmp0/stack_of_int.c0: 57.13-57.25)"
B8 00 1A # invokestatic 26    # is_istack(S, "ipush (.tmp0/stack_of_int.c0: 57.13-57.25)")
14 12 B8 # aldc 4792          # s[4792] = ".tmp0/stack_of_int.c0: 57.4-57.26: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 12 F8 # aldc 4856          # s[4856] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_int.c0: 57.4-57.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_istack(S, "ipush (.tmp0/stack_of_int.c0: 57.13-57.25)") [failure message on stack]
BB 10    # new 16             # alloc(intlist)
36 03    # vstore 3           # l = alloc(intlist);
15 03    # vload 3            # l
62 00    # aaddf 0            # &l->data
15 01    # vload 1            # x
4E       # imstore            # l->data = x;
15 03    # vload 3            # l
62 08    # aaddf 8            # &l->next
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
4F       # amstore            # l->next = S->top;
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
15 03    # vload 3            # l
4F       # amstore            # S->top = l;
15 00    # vload 0            # S
14 13 0A # aldc 4874          # s[4874] = "ipush (.tmp0/stack_of_int.c0: 58.12-58.24)"
B8 00 1A # invokestatic 26    # is_istack(S, "ipush (.tmp0/stack_of_int.c0: 58.12-58.24)")
14 13 35 # aldc 4917          # s[4917] = ".tmp0/stack_of_int.c0: 58.4-58.25: @ensures annotation failed"
CF       # assert             # assert is_istack(S, "ipush (.tmp0/stack_of_int.c0: 58.12-58.24)") [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<ipop>
02                # number of arguments = 2
04                # number of local variables = 4
00 5B             # code length = 91 bytes
15 00    # vload 0            # S
14 13 73 # aldc 4979          # s[4979] = "ipop (.tmp0/stack_of_int.c0: 67.13-67.25)"
B8 00 1A # invokestatic 26    # is_istack(S, "ipop (.tmp0/stack_of_int.c0: 67.13-67.25)")
14 13 9D # aldc 5021          # s[5021] = ".tmp0/stack_of_int.c0: 67.4-67.26: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 13 DD # aldc 5085          # s[5085] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_int.c0: 67.4-67.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_istack(S, "ipop (.tmp0/stack_of_int.c0: 67.13-67.25)") [failure message on stack]
15 00    # vload 0            # S
14 13 EF # aldc 5103          # s[5103] = "ipop (.tmp0/stack_of_int.c0: 68.14-68.29)"
B8 00 1B # invokestatic 27    # istack_empty(S, "ipop (.tmp0/stack_of_int.c0: 68.14-68.29)")
10 01    # bipush 1           # 
82       # ixor               # !(istack_empty(S, "ipop (.tmp0/stack_of_int.c0: 68.14-68.29)"))
14 14 19 # aldc 5145          # s[5145] = ".tmp0/stack_of_int.c0: 68.4-68.30: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 14 59 # aldc 5209          # s[5209] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_int.c0: 68.4-68.30: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(istack_empty(S, "ipop (.tmp0/stack_of_int.c0: 68.14-68.29)")) [failure message on stack]
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
62 00    # aaddf 0            # &S->top->data
2E       # imload             # S->top->data
36 03    # vstore 3           # x = S->top->data;
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
62 08    # aaddf 8            # &S->top->next
2F       # amload             # S->top->next
4F       # amstore            # S->top = S->top->next;
15 03    # vload 3            # x
36 02    # vstore 2           # _result = x;
15 00    # vload 0            # S
14 14 6B # aldc 5227          # s[5227] = "ipop (.tmp0/stack_of_int.c0: 69.12-69.24)"
B8 00 1A # invokestatic 26    # is_istack(S, "ipop (.tmp0/stack_of_int.c0: 69.12-69.24)")
14 14 95 # aldc 5269          # s[5269] = ".tmp0/stack_of_int.c0: 69.4-69.25: @ensures annotation failed"
CF       # assert             # assert is_istack(S, "ipop (.tmp0/stack_of_int.c0: 69.12-69.24)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<istack_print>
02                # number of arguments = 2
03                # number of local variables = 3
00 88             # code length = 136 bytes
15 00    # vload 0            # S
14 14 D3 # aldc 5331          # s[5331] = "istack_print (.tmp0/stack_of_int.c0: 77.13-77.25)"
B8 00 1A # invokestatic 26    # is_istack(S, "istack_print (.tmp0/stack_of_int.c0: 77.13-77.25)")
14 15 05 # aldc 5381          # s[5381] = ".tmp0/stack_of_int.c0: 77.4-77.26: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 15 45 # aldc 5445          # s[5445] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_int.c0: 77.4-77.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_istack(S, "istack_print (.tmp0/stack_of_int.c0: 77.13-77.25)") [failure message on stack]
14 15 57 # aldc 5463          # s[5463] = "TOP: "
14 15 5D # aldc 5469          # s[5469] = "istack_print (.tmp0/stack_of_int.c0: 79.3-79.18)"
B8 00 01 # invokestatic 1     # print__1("TOP: ", "istack_print (.tmp0/stack_of_int.c0: 79.3-79.18)")
57       # pop                # (ignore result)
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
36 02    # vstore 2           # l = S->top;
# <54:loop>
A7 00 03 # goto +3            # goto <55:body>
# <55:body>
15 02    # vload 2            # l
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
A0 00 06 # if_cmpne +6        # if (l != S->floor) goto <57:then>
A7 00 4A # goto +74           # goto <58:else>
# <57:then>
14 15 8E # aldc 5518          # s[5518] = ""
14 15 8F # aldc 5519          # s[5519] = "istack_print (.tmp0/stack_of_int.c0: 81.5-81.26)"
B8 00 01 # invokestatic 1     # print__1("", "istack_print (.tmp0/stack_of_int.c0: 81.5-81.26)")
57       # pop                # (ignore result)
15 02    # vload 2            # l
62 00    # aaddf 0            # &l->data
2E       # imload             # l->data
14 15 C0 # aldc 5568          # s[5568] = "istack_print (.tmp0/stack_of_int.c0: 81.5-81.26)"
B8 00 03 # invokestatic 3     # printint__1(l->data, "istack_print (.tmp0/stack_of_int.c0: 81.5-81.26)")
57       # pop                # (ignore result)
14 15 F1 # aldc 5617          # s[5617] = ""
14 15 F2 # aldc 5618          # s[5618] = "istack_print (.tmp0/stack_of_int.c0: 81.5-81.26)"
B8 00 01 # invokestatic 1     # print__1("", "istack_print (.tmp0/stack_of_int.c0: 81.5-81.26)")
57       # pop                # (ignore result)
15 02    # vload 2            # l
62 08    # aaddf 8            # &l->next
2F       # amload             # l->next
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
A0 00 06 # if_cmpne +6        # if (l->next != S->floor) goto <60:then>
A7 00 10 # goto +16           # goto <61:else>
# <60:then>
14 16 23 # aldc 5667          # s[5667] = " | "
14 16 27 # aldc 5671          # s[5671] = "istack_print (.tmp0/stack_of_int.c0: 82.30-82.43)"
B8 00 01 # invokestatic 1     # print__1(" | ", "istack_print (.tmp0/stack_of_int.c0: 82.30-82.43)")
57       # pop                # (ignore result)
A7 00 03 # goto +3            # goto <62:endif>
# <61:else>
# <62:endif>
15 02    # vload 2            # l
62 08    # aaddf 8            # &l->next
2F       # amload             # l->next
36 02    # vstore 2           # l = l->next;
A7 00 06 # goto +6            # goto <59:endif>
# <58:else>
A7 00 06 # goto +6            # break
# <59:endif>
A7 FF A6 # goto -90           # goto <54:loop>
# <56:exit>
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<istack_empty__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 2C             # code length = 44 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <63:cond_true>
A7 00 08 # goto +8            # goto <64:cond_false>
# <63:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <65:cond_end>
# <64:cond_false>
10 00    # bipush 0           # false
# <65:cond_end>
14 16 59 # aldc 5721          # s[5721] = ".tmp0/stack_of_int.c0: 99.4-99.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 16 99 # aldc 5785          # s[5785] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_int.c0: 99.4-99.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
14 16 AB # aldc 5803          # s[5803] = "istack_empty__1 (.tmp0/stack_of_int.c0: 98.1-99.40)"
B8 00 1B # invokestatic 27    # istack_empty(S, "istack_empty__1 (.tmp0/stack_of_int.c0: 98.1-99.40)")
36 02    # vstore 2           # _result = istack_empty(S, "istack_empty__1 (.tmp0/stack_of_int.c0: 98.1-99.40)");
15 02    # vload 2            # _result
B0       # return             # 


#<istack_new__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 2B             # code length = 43 bytes
14 16 DF # aldc 5855          # s[5855] = "istack_new__1 (.tmp0/stack_of_int.c0: 101.1-103.40)"
B8 00 1C # invokestatic 28    # istack_new("istack_new__1 (.tmp0/stack_of_int.c0: 101.1-103.40)")
36 01    # vstore 1           # _result = istack_new("istack_new__1 (.tmp0/stack_of_int.c0: 101.1-103.40)");
15 01    # vload 1            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <66:cond_true>
A7 00 08 # goto +8            # goto <67:cond_false>
# <66:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <68:cond_end>
# <67:cond_false>
10 00    # bipush 0           # false
# <68:cond_end>
14 17 13 # aldc 5907          # s[5907] = ".tmp0/stack_of_int.c0: 102.4-102.28: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 01    # vload 1            # _result
14 17 53 # aldc 5971          # s[5971] = "istack_new__1 (.tmp0/stack_of_int.c0: 103.12-103.33)"
B8 00 20 # invokestatic 32    # istack_empty__1(_result, "istack_new__1 (.tmp0/stack_of_int.c0: 103.12-103.33)")
14 17 88 # aldc 6024          # s[6024] = ".tmp0/stack_of_int.c0: 103.4-103.34: @ensures annotation failed"
CF       # assert             # assert istack_empty__1(_result, "istack_new__1 (.tmp0/stack_of_int.c0: 103.12-103.33)") [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<ipush__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 4E             # code length = 78 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <69:cond_true>
A7 00 08 # goto +8            # goto <70:cond_false>
# <69:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <71:cond_end>
# <70:cond_false>
10 00    # bipush 0           # false
# <71:cond_end>
14 17 C8 # aldc 6088          # s[6088] = ".tmp0/stack_of_int.c0: 106.4-106.23: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 18 0A # aldc 6154          # s[6154] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_int.c0: 106.4-106.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
15 01    # vload 1            # x
14 18 1C # aldc 6172          # s[6172] = "ipush__1 (.tmp0/stack_of_int.c0: 105.1-107.40)"
B8 00 1D # invokestatic 29    # ipush(S, x, "ipush__1 (.tmp0/stack_of_int.c0: 105.1-107.40)")
57       # pop                # (ignore result)
15 00    # vload 0            # S
14 18 4B # aldc 6219          # s[6219] = "ipush__1 (.tmp0/stack_of_int.c0: 107.13-107.28)"
B8 00 20 # invokestatic 32    # istack_empty__1(S, "ipush__1 (.tmp0/stack_of_int.c0: 107.13-107.28)")
10 01    # bipush 1           # 
82       # ixor               # !(istack_empty__1(S, "ipush__1 (.tmp0/stack_of_int.c0: 107.13-107.28)"))
14 18 7B # aldc 6267          # s[6267] = ".tmp0/stack_of_int.c0: 107.4-107.29: @ensures annotation failed"
CF       # assert             # assert !(istack_empty__1(S, "ipush__1 (.tmp0/stack_of_int.c0: 107.13-107.28)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 
15 00    # vload 0            # S
14 18 BB # aldc 6331          # s[6331] = "ipush__1 (.tmp0/stack_of_int.c0: 107.13-107.28)"
B8 00 20 # invokestatic 32    # istack_empty__1(S, "ipush__1 (.tmp0/stack_of_int.c0: 107.13-107.28)")
10 01    # bipush 1           # 
82       # ixor               # !(istack_empty__1(S, "ipush__1 (.tmp0/stack_of_int.c0: 107.13-107.28)"))
14 18 EB # aldc 6379          # s[6379] = ".tmp0/stack_of_int.c0: 107.4-107.29: @ensures annotation failed"
CF       # assert             # assert !(istack_empty__1(S, "ipush__1 (.tmp0/stack_of_int.c0: 107.13-107.28)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<ipop__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 46             # code length = 70 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <72:cond_true>
A7 00 08 # goto +8            # goto <73:cond_false>
# <72:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <74:cond_end>
# <73:cond_false>
10 00    # bipush 0           # false
# <74:cond_end>
14 19 2B # aldc 6443          # s[6443] = ".tmp0/stack_of_int.c0: 110.4-110.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 19 6D # aldc 6509          # s[6509] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_int.c0: 110.4-110.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
14 19 7F # aldc 6527          # s[6527] = "ipop__1 (.tmp0/stack_of_int.c0: 111.14-111.29)"
B8 00 20 # invokestatic 32    # istack_empty__1(S, "ipop__1 (.tmp0/stack_of_int.c0: 111.14-111.29)")
10 01    # bipush 1           # 
82       # ixor               # !(istack_empty__1(S, "ipop__1 (.tmp0/stack_of_int.c0: 111.14-111.29)"))
14 19 AE # aldc 6574          # s[6574] = ".tmp0/stack_of_int.c0: 111.4-111.30: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 19 F0 # aldc 6640          # s[6640] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_int.c0: 111.4-111.30: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(istack_empty__1(S, "ipop__1 (.tmp0/stack_of_int.c0: 111.14-111.29)")) [failure message on stack]
15 00    # vload 0            # S
14 1A 02 # aldc 6658          # s[6658] = "ipop__1 (.tmp0/stack_of_int.c0: 109.1-111.40)"
B8 00 1E # invokestatic 30    # ipop(S, "ipop__1 (.tmp0/stack_of_int.c0: 109.1-111.40)")
36 02    # vstore 2           # _result = ipop(S, "ipop__1 (.tmp0/stack_of_int.c0: 109.1-111.40)");
15 02    # vload 2            # _result
B0       # return             # 


#<istack_print__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 2E             # code length = 46 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <75:cond_true>
A7 00 08 # goto +8            # goto <76:cond_false>
# <75:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <77:cond_end>
# <76:cond_false>
10 00    # bipush 0           # false
# <77:cond_end>
14 1A 30 # aldc 6704          # s[6704] = ".tmp0/stack_of_int.c0: 114.4-114.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 1A 72 # aldc 6770          # s[6770] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_int.c0: 114.4-114.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
14 1A 84 # aldc 6788          # s[6788] = "istack_print__1 (.tmp0/stack_of_int.c0: 113.1-114.40)"
B8 00 1F # invokestatic 31    # istack_print(S, "istack_print__1 (.tmp0/stack_of_int.c0: 113.1-114.40)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<is_segment_stringlist>
03                # number of arguments = 3
04                # number of local variables = 4
00 39             # code length = 57 bytes
15 00    # vload 0            # start
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (start == NULL) goto <78:then>
A7 00 0D # goto +13           # goto <79:else>
# <78:then>
10 00    # bipush 0           # false
36 03    # vstore 3           # _result = false;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <80:endif>
# <79:else>
# <80:endif>
15 00    # vload 0            # start
15 01    # vload 1            # end
9F 00 06 # if_cmpeq +6        # if (start == end) goto <81:then>
A7 00 0D # goto +13           # goto <82:else>
# <81:then>
10 01    # bipush 1           # true
36 03    # vstore 3           # _result = true;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <83:endif>
# <82:else>
# <83:endif>
15 00    # vload 0            # start
62 08    # aaddf 8            # &start->next
2F       # amload             # start->next
15 01    # vload 1            # end
14 1A BA # aldc 6842          # s[6842] = "is_segment_stringlist (.tmp0/stack_of_string.c0: 22.10-22.49)"
B8 00 25 # invokestatic 37    # is_segment_stringlist(start->next, end, "is_segment_stringlist (.tmp0/stack_of_string.c0: 22.10-22.49)")
36 03    # vstore 3           # _result = is_segment_stringlist(start->next, end, "is_segment_stringlist (.tmp0/stack_of_string.c0: 22.10-22.49)");
15 03    # vload 3            # _result
B0       # return             # 


#<is_stack>
02                # number of arguments = 2
03                # number of local variables = 3
00 23             # code length = 35 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <84:cond_true>
A7 00 16 # goto +22           # goto <85:cond_false>
# <84:cond_true>
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
14 1A F8 # aldc 6904          # s[6904] = "is_stack (.tmp0/stack_of_string.c0: 35.8-35.47)"
B8 00 25 # invokestatic 37    # is_segment_stringlist(S->top, S->floor, "is_stack (.tmp0/stack_of_string.c0: 35.8-35.47)")
A7 00 05 # goto +5            # goto <86:cond_end>
# <85:cond_false>
10 00    # bipush 0           # false
# <86:cond_end>
36 02    # vstore 2           # _result = ((S != NULL) && is_segment_stringlist(S->top, S->floor, "is_stack (.tmp0/stack_of_string.c0: 35.8-35.47)"));
15 02    # vload 2            # _result
B0       # return             # 


#<stack_empty>
02                # number of arguments = 2
03                # number of local variables = 3
00 33             # code length = 51 bytes
15 00    # vload 0            # S
14 1B 28 # aldc 6952          # s[6952] = "stack_empty (.tmp0/stack_of_string.c0: 39.13-39.24)"
B8 00 26 # invokestatic 38    # is_stack(S, "stack_empty (.tmp0/stack_of_string.c0: 39.13-39.24)")
14 1B 5C # aldc 7004          # s[7004] = ".tmp0/stack_of_string.c0: 39.4-39.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 1B 9F # aldc 7071          # s[7071] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_string.c0: 39.4-39.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_stack(S, "stack_empty (.tmp0/stack_of_string.c0: 39.13-39.24)") [failure message on stack]
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
9F 00 06 # if_cmpeq +6        # if (S->top == S->floor) goto <87:cond_true>
A7 00 08 # goto +8            # goto <88:cond_false>
# <87:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <89:cond_end>
# <88:cond_false>
10 00    # bipush 0           # false
# <89:cond_end>
36 02    # vstore 2           # _result = (S->top == S->floor);
15 02    # vload 2            # _result
B0       # return             # 


#<stack_new>
01                # number of arguments = 1
04                # number of local variables = 4
00 35             # code length = 53 bytes
BB 10    # new 16             # alloc(stack)
36 02    # vstore 2           # S = alloc(stack);
BB 10    # new 16             # alloc(stringlist)
36 03    # vstore 3           # l = alloc(stringlist);
15 02    # vload 2            # S
62 00    # aaddf 0            # &S->top
15 03    # vload 3            # l
4F       # amstore            # S->top = l;
15 02    # vload 2            # S
62 08    # aaddf 8            # &S->floor
15 03    # vload 3            # l
4F       # amstore            # S->floor = l;
15 02    # vload 2            # S
36 01    # vstore 1           # _result = S;
15 01    # vload 1            # _result
14 1B B1 # aldc 7089          # s[7089] = "stack_new (.tmp0/stack_of_string.c0: 45.12-45.29)"
B8 00 26 # invokestatic 38    # is_stack(_result, "stack_new (.tmp0/stack_of_string.c0: 45.12-45.29)")
14 1B E3 # aldc 7139          # s[7139] = ".tmp0/stack_of_string.c0: 45.4-45.30: @ensures annotation failed"
CF       # assert             # assert is_stack(_result, "stack_new (.tmp0/stack_of_string.c0: 45.12-45.29)") [failure message on stack]
15 01    # vload 1            # _result
14 1C 24 # aldc 7204          # s[7204] = "stack_new (.tmp0/stack_of_string.c0: 46.12-46.32)"
B8 00 27 # invokestatic 39    # stack_empty(_result, "stack_new (.tmp0/stack_of_string.c0: 46.12-46.32)")
14 1C 56 # aldc 7254          # s[7254] = ".tmp0/stack_of_string.c0: 46.4-46.33: @ensures annotation failed"
CF       # assert             # assert stack_empty(_result, "stack_new (.tmp0/stack_of_string.c0: 46.12-46.32)") [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<push>
03                # number of arguments = 3
04                # number of local variables = 4
00 42             # code length = 66 bytes
15 00    # vload 0            # S
14 1C 97 # aldc 7319          # s[7319] = "push (.tmp0/stack_of_string.c0: 56.13-56.24)"
B8 00 26 # invokestatic 38    # is_stack(S, "push (.tmp0/stack_of_string.c0: 56.13-56.24)")
14 1C C4 # aldc 7364          # s[7364] = ".tmp0/stack_of_string.c0: 56.4-56.25: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 1D 07 # aldc 7431          # s[7431] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_string.c0: 56.4-56.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_stack(S, "push (.tmp0/stack_of_string.c0: 56.13-56.24)") [failure message on stack]
BB 10    # new 16             # alloc(stringlist)
36 03    # vstore 3           # l = alloc(stringlist);
15 03    # vload 3            # l
62 00    # aaddf 0            # &l->data
15 01    # vload 1            # x
4F       # amstore            # l->data = x;
15 03    # vload 3            # l
62 08    # aaddf 8            # &l->next
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
4F       # amstore            # l->next = S->top;
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
15 03    # vload 3            # l
4F       # amstore            # S->top = l;
15 00    # vload 0            # S
14 1D 19 # aldc 7449          # s[7449] = "push (.tmp0/stack_of_string.c0: 57.12-57.23)"
B8 00 26 # invokestatic 38    # is_stack(S, "push (.tmp0/stack_of_string.c0: 57.12-57.23)")
14 1D 46 # aldc 7494          # s[7494] = ".tmp0/stack_of_string.c0: 57.4-57.24: @ensures annotation failed"
CF       # assert             # assert is_stack(S, "push (.tmp0/stack_of_string.c0: 57.12-57.23)") [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<pop>
02                # number of arguments = 2
04                # number of local variables = 4
00 5B             # code length = 91 bytes
15 00    # vload 0            # S
14 1D 87 # aldc 7559          # s[7559] = "pop (.tmp0/stack_of_string.c0: 66.13-66.24)"
B8 00 26 # invokestatic 38    # is_stack(S, "pop (.tmp0/stack_of_string.c0: 66.13-66.24)")
14 1D B3 # aldc 7603          # s[7603] = ".tmp0/stack_of_string.c0: 66.4-66.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 1D F6 # aldc 7670          # s[7670] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_string.c0: 66.4-66.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_stack(S, "pop (.tmp0/stack_of_string.c0: 66.13-66.24)") [failure message on stack]
15 00    # vload 0            # S
14 1E 08 # aldc 7688          # s[7688] = "pop (.tmp0/stack_of_string.c0: 67.14-67.28)"
B8 00 27 # invokestatic 39    # stack_empty(S, "pop (.tmp0/stack_of_string.c0: 67.14-67.28)")
10 01    # bipush 1           # 
82       # ixor               # !(stack_empty(S, "pop (.tmp0/stack_of_string.c0: 67.14-67.28)"))
14 1E 34 # aldc 7732          # s[7732] = ".tmp0/stack_of_string.c0: 67.4-67.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 1E 77 # aldc 7799          # s[7799] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_string.c0: 67.4-67.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(stack_empty(S, "pop (.tmp0/stack_of_string.c0: 67.14-67.28)")) [failure message on stack]
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
62 00    # aaddf 0            # &S->top->data
2F       # amload             # S->top->data
36 03    # vstore 3           # x = S->top->data;
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
62 08    # aaddf 8            # &S->top->next
2F       # amload             # S->top->next
4F       # amstore            # S->top = S->top->next;
15 03    # vload 3            # x
36 02    # vstore 2           # _result = x;
15 00    # vload 0            # S
14 1E 89 # aldc 7817          # s[7817] = "pop (.tmp0/stack_of_string.c0: 68.12-68.23)"
B8 00 26 # invokestatic 38    # is_stack(S, "pop (.tmp0/stack_of_string.c0: 68.12-68.23)")
14 1E B5 # aldc 7861          # s[7861] = ".tmp0/stack_of_string.c0: 68.4-68.24: @ensures annotation failed"
CF       # assert             # assert is_stack(S, "pop (.tmp0/stack_of_string.c0: 68.12-68.23)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<stack_print>
02                # number of arguments = 2
03                # number of local variables = 3
00 88             # code length = 136 bytes
15 00    # vload 0            # S
14 1E F6 # aldc 7926          # s[7926] = "stack_print (.tmp0/stack_of_string.c0: 76.13-76.24)"
B8 00 26 # invokestatic 38    # is_stack(S, "stack_print (.tmp0/stack_of_string.c0: 76.13-76.24)")
14 1F 2A # aldc 7978          # s[7978] = ".tmp0/stack_of_string.c0: 76.4-76.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 1F 6D # aldc 8045          # s[8045] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_string.c0: 76.4-76.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_stack(S, "stack_print (.tmp0/stack_of_string.c0: 76.13-76.24)") [failure message on stack]
14 1F 7F # aldc 8063          # s[8063] = "TOP: "
14 1F 85 # aldc 8069          # s[8069] = "stack_print (.tmp0/stack_of_string.c0: 78.3-78.18)"
B8 00 01 # invokestatic 1     # print__1("TOP: ", "stack_print (.tmp0/stack_of_string.c0: 78.3-78.18)")
57       # pop                # (ignore result)
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
36 02    # vstore 2           # l = S->top;
# <90:loop>
A7 00 03 # goto +3            # goto <91:body>
# <91:body>
15 02    # vload 2            # l
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
A0 00 06 # if_cmpne +6        # if (l != S->floor) goto <93:then>
A7 00 4A # goto +74           # goto <94:else>
# <93:then>
14 1F B8 # aldc 8120          # s[8120] = ""
14 1F B9 # aldc 8121          # s[8121] = "stack_print (.tmp0/stack_of_string.c0: 80.5-80.26)"
B8 00 01 # invokestatic 1     # print__1("", "stack_print (.tmp0/stack_of_string.c0: 80.5-80.26)")
57       # pop                # (ignore result)
15 02    # vload 2            # l
62 00    # aaddf 0            # &l->data
2F       # amload             # l->data
14 1F EC # aldc 8172          # s[8172] = "stack_print (.tmp0/stack_of_string.c0: 80.5-80.26)"
B8 00 01 # invokestatic 1     # print__1(l->data, "stack_print (.tmp0/stack_of_string.c0: 80.5-80.26)")
57       # pop                # (ignore result)
14 20 1F # aldc 8223          # s[8223] = ""
14 20 20 # aldc 8224          # s[8224] = "stack_print (.tmp0/stack_of_string.c0: 80.5-80.26)"
B8 00 01 # invokestatic 1     # print__1("", "stack_print (.tmp0/stack_of_string.c0: 80.5-80.26)")
57       # pop                # (ignore result)
15 02    # vload 2            # l
62 08    # aaddf 8            # &l->next
2F       # amload             # l->next
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
A0 00 06 # if_cmpne +6        # if (l->next != S->floor) goto <96:then>
A7 00 10 # goto +16           # goto <97:else>
# <96:then>
14 20 53 # aldc 8275          # s[8275] = " | "
14 20 57 # aldc 8279          # s[8279] = "stack_print (.tmp0/stack_of_string.c0: 81.30-81.43)"
B8 00 01 # invokestatic 1     # print__1(" | ", "stack_print (.tmp0/stack_of_string.c0: 81.30-81.43)")
57       # pop                # (ignore result)
A7 00 03 # goto +3            # goto <98:endif>
# <97:else>
# <98:endif>
15 02    # vload 2            # l
62 08    # aaddf 8            # &l->next
2F       # amload             # l->next
36 02    # vstore 2           # l = l->next;
A7 00 06 # goto +6            # goto <95:endif>
# <94:else>
A7 00 06 # goto +6            # break
# <95:endif>
A7 FF A6 # goto -90           # goto <90:loop>
# <92:exit>
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<stack_empty__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 2C             # code length = 44 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <99:cond_true>
A7 00 08 # goto +8            # goto <100:cond_false>
# <99:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <101:cond_end>
# <100:cond_false>
10 00    # bipush 0           # false
# <101:cond_end>
14 20 8B # aldc 8331          # s[8331] = ".tmp0/stack_of_string.c0: 99.4-99.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 20 CE # aldc 8398          # s[8398] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_string.c0: 99.4-99.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
14 20 E0 # aldc 8416          # s[8416] = "stack_empty__1 (.tmp0/stack_of_string.c0: 98.1-99.39)"
B8 00 27 # invokestatic 39    # stack_empty(S, "stack_empty__1 (.tmp0/stack_of_string.c0: 98.1-99.39)")
36 02    # vstore 2           # _result = stack_empty(S, "stack_empty__1 (.tmp0/stack_of_string.c0: 98.1-99.39)");
15 02    # vload 2            # _result
B0       # return             # 


#<stack_new__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 2B             # code length = 43 bytes
14 21 16 # aldc 8470          # s[8470] = "stack_new__1 (.tmp0/stack_of_string.c0: 101.1-103.39)"
B8 00 28 # invokestatic 40    # stack_new("stack_new__1 (.tmp0/stack_of_string.c0: 101.1-103.39)")
36 01    # vstore 1           # _result = stack_new("stack_new__1 (.tmp0/stack_of_string.c0: 101.1-103.39)");
15 01    # vload 1            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <102:cond_true>
A7 00 08 # goto +8            # goto <103:cond_false>
# <102:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <104:cond_end>
# <103:cond_false>
10 00    # bipush 0           # false
# <104:cond_end>
14 21 4C # aldc 8524          # s[8524] = ".tmp0/stack_of_string.c0: 102.4-102.28: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 01    # vload 1            # _result
14 21 8F # aldc 8591          # s[8591] = "stack_new__1 (.tmp0/stack_of_string.c0: 103.12-103.32)"
B8 00 2C # invokestatic 44    # stack_empty__1(_result, "stack_new__1 (.tmp0/stack_of_string.c0: 103.12-103.32)")
14 21 C6 # aldc 8646          # s[8646] = ".tmp0/stack_of_string.c0: 103.4-103.33: @ensures annotation failed"
CF       # assert             # assert stack_empty__1(_result, "stack_new__1 (.tmp0/stack_of_string.c0: 103.12-103.32)") [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<push__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 4E             # code length = 78 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <105:cond_true>
A7 00 08 # goto +8            # goto <106:cond_false>
# <105:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <107:cond_end>
# <106:cond_false>
10 00    # bipush 0           # false
# <107:cond_end>
14 22 09 # aldc 8713          # s[8713] = ".tmp0/stack_of_string.c0: 106.4-106.23: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 22 4E # aldc 8782          # s[8782] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_string.c0: 106.4-106.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
15 01    # vload 1            # x
14 22 60 # aldc 8800          # s[8800] = "push__1 (.tmp0/stack_of_string.c0: 105.1-107.39)"
B8 00 29 # invokestatic 41    # push(S, x, "push__1 (.tmp0/stack_of_string.c0: 105.1-107.39)")
57       # pop                # (ignore result)
15 00    # vload 0            # S
14 22 91 # aldc 8849          # s[8849] = "push__1 (.tmp0/stack_of_string.c0: 107.13-107.27)"
B8 00 2C # invokestatic 44    # stack_empty__1(S, "push__1 (.tmp0/stack_of_string.c0: 107.13-107.27)")
10 01    # bipush 1           # 
82       # ixor               # !(stack_empty__1(S, "push__1 (.tmp0/stack_of_string.c0: 107.13-107.27)"))
14 22 C3 # aldc 8899          # s[8899] = ".tmp0/stack_of_string.c0: 107.4-107.28: @ensures annotation failed"
CF       # assert             # assert !(stack_empty__1(S, "push__1 (.tmp0/stack_of_string.c0: 107.13-107.27)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 
15 00    # vload 0            # S
14 23 06 # aldc 8966          # s[8966] = "push__1 (.tmp0/stack_of_string.c0: 107.13-107.27)"
B8 00 2C # invokestatic 44    # stack_empty__1(S, "push__1 (.tmp0/stack_of_string.c0: 107.13-107.27)")
10 01    # bipush 1           # 
82       # ixor               # !(stack_empty__1(S, "push__1 (.tmp0/stack_of_string.c0: 107.13-107.27)"))
14 23 38 # aldc 9016          # s[9016] = ".tmp0/stack_of_string.c0: 107.4-107.28: @ensures annotation failed"
CF       # assert             # assert !(stack_empty__1(S, "push__1 (.tmp0/stack_of_string.c0: 107.13-107.27)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<pop__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 46             # code length = 70 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <108:cond_true>
A7 00 08 # goto +8            # goto <109:cond_false>
# <108:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <110:cond_end>
# <109:cond_false>
10 00    # bipush 0           # false
# <110:cond_end>
14 23 7B # aldc 9083          # s[9083] = ".tmp0/stack_of_string.c0: 110.4-110.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 23 C0 # aldc 9152          # s[9152] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_string.c0: 110.4-110.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
14 23 D2 # aldc 9170          # s[9170] = "pop__1 (.tmp0/stack_of_string.c0: 111.14-111.28)"
B8 00 2C # invokestatic 44    # stack_empty__1(S, "pop__1 (.tmp0/stack_of_string.c0: 111.14-111.28)")
10 01    # bipush 1           # 
82       # ixor               # !(stack_empty__1(S, "pop__1 (.tmp0/stack_of_string.c0: 111.14-111.28)"))
14 24 03 # aldc 9219          # s[9219] = ".tmp0/stack_of_string.c0: 111.4-111.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 24 48 # aldc 9288          # s[9288] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_string.c0: 111.4-111.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(stack_empty__1(S, "pop__1 (.tmp0/stack_of_string.c0: 111.14-111.28)")) [failure message on stack]
15 00    # vload 0            # S
14 24 5A # aldc 9306          # s[9306] = "pop__1 (.tmp0/stack_of_string.c0: 109.1-111.39)"
B8 00 2A # invokestatic 42    # pop(S, "pop__1 (.tmp0/stack_of_string.c0: 109.1-111.39)")
36 02    # vstore 2           # _result = pop(S, "pop__1 (.tmp0/stack_of_string.c0: 109.1-111.39)");
15 02    # vload 2            # _result
B0       # return             # 


#<stack_print__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 2E             # code length = 46 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <111:cond_true>
A7 00 08 # goto +8            # goto <112:cond_false>
# <111:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <113:cond_end>
# <112:cond_false>
10 00    # bipush 0           # false
# <113:cond_end>
14 24 8A # aldc 9354          # s[9354] = ".tmp0/stack_of_string.c0: 114.4-114.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 24 CF # aldc 9423          # s[9423] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_string.c0: 114.4-114.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
14 24 E1 # aldc 9441          # s[9441] = "stack_print__1 (.tmp0/stack_of_string.c0: 113.1-114.39)"
B8 00 2B # invokestatic 43    # stack_print(S, "stack_print__1 (.tmp0/stack_of_string.c0: 113.1-114.39)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<is_segment_stacklist>
03                # number of arguments = 3
04                # number of local variables = 4
00 39             # code length = 57 bytes
15 00    # vload 0            # start
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (start == NULL) goto <114:then>
A7 00 0D # goto +13           # goto <115:else>
# <114:then>
10 00    # bipush 0           # false
36 03    # vstore 3           # _result = false;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <116:endif>
# <115:else>
# <116:endif>
15 00    # vload 0            # start
15 01    # vload 1            # end
9F 00 06 # if_cmpeq +6        # if (start == end) goto <117:then>
A7 00 0D # goto +13           # goto <118:else>
# <117:then>
10 01    # bipush 1           # true
36 03    # vstore 3           # _result = true;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <119:endif>
# <118:else>
# <119:endif>
15 00    # vload 0            # start
62 08    # aaddf 8            # &start->next
2F       # amload             # start->next
15 01    # vload 1            # end
14 25 19 # aldc 9497          # s[9497] = "is_segment_stacklist (.tmp0/stack_of_string_stacks.c0: 22.10-22.48)"
B8 00 31 # invokestatic 49    # is_segment_stacklist(start->next, end, "is_segment_stacklist (.tmp0/stack_of_string_stacks.c0: 22.10-22.48)")
36 03    # vstore 3           # _result = is_segment_stacklist(start->next, end, "is_segment_stacklist (.tmp0/stack_of_string_stacks.c0: 22.10-22.48)");
15 03    # vload 3            # _result
B0       # return             # 


#<is_sstack>
02                # number of arguments = 2
03                # number of local variables = 3
00 23             # code length = 35 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <120:cond_true>
A7 00 16 # goto +22           # goto <121:cond_false>
# <120:cond_true>
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
14 25 5D # aldc 9565          # s[9565] = "is_sstack (.tmp0/stack_of_string_stacks.c0: 35.8-35.46)"
B8 00 31 # invokestatic 49    # is_segment_stacklist(S->top, S->floor, "is_sstack (.tmp0/stack_of_string_stacks.c0: 35.8-35.46)")
A7 00 05 # goto +5            # goto <122:cond_end>
# <121:cond_false>
10 00    # bipush 0           # false
# <122:cond_end>
36 02    # vstore 2           # _result = ((S != NULL) && is_segment_stacklist(S->top, S->floor, "is_sstack (.tmp0/stack_of_string_stacks.c0: 35.8-35.46)"));
15 02    # vload 2            # _result
B0       # return             # 


#<sstack_empty>
02                # number of arguments = 2
03                # number of local variables = 3
00 33             # code length = 51 bytes
15 00    # vload 0            # S
14 25 95 # aldc 9621          # s[9621] = "sstack_empty (.tmp0/stack_of_string_stacks.c0: 39.13-39.25)"
B8 00 32 # invokestatic 50    # is_sstack(S, "sstack_empty (.tmp0/stack_of_string_stacks.c0: 39.13-39.25)")
14 25 D1 # aldc 9681          # s[9681] = ".tmp0/stack_of_string_stacks.c0: 39.4-39.26: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 26 1B # aldc 9755          # s[9755] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_string_stacks.c0: 39.4-39.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_sstack(S, "sstack_empty (.tmp0/stack_of_string_stacks.c0: 39.13-39.25)") [failure message on stack]
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
9F 00 06 # if_cmpeq +6        # if (S->top == S->floor) goto <123:cond_true>
A7 00 08 # goto +8            # goto <124:cond_false>
# <123:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <125:cond_end>
# <124:cond_false>
10 00    # bipush 0           # false
# <125:cond_end>
36 02    # vstore 2           # _result = (S->top == S->floor);
15 02    # vload 2            # _result
B0       # return             # 


#<sstack_new>
01                # number of arguments = 1
04                # number of local variables = 4
00 35             # code length = 53 bytes
BB 10    # new 16             # alloc(sstack)
36 02    # vstore 2           # S = alloc(sstack);
BB 10    # new 16             # alloc(stacklist)
36 03    # vstore 3           # l = alloc(stacklist);
15 02    # vload 2            # S
62 00    # aaddf 0            # &S->top
15 03    # vload 3            # l
4F       # amstore            # S->top = l;
15 02    # vload 2            # S
62 08    # aaddf 8            # &S->floor
15 03    # vload 3            # l
4F       # amstore            # S->floor = l;
15 02    # vload 2            # S
36 01    # vstore 1           # _result = S;
15 01    # vload 1            # _result
14 26 2D # aldc 9773          # s[9773] = "sstack_new (.tmp0/stack_of_string_stacks.c0: 45.12-45.30)"
B8 00 32 # invokestatic 50    # is_sstack(_result, "sstack_new (.tmp0/stack_of_string_stacks.c0: 45.12-45.30)")
14 26 67 # aldc 9831          # s[9831] = ".tmp0/stack_of_string_stacks.c0: 45.4-45.31: @ensures annotation failed"
CF       # assert             # assert is_sstack(_result, "sstack_new (.tmp0/stack_of_string_stacks.c0: 45.12-45.30)") [failure message on stack]
15 01    # vload 1            # _result
14 26 AF # aldc 9903          # s[9903] = "sstack_new (.tmp0/stack_of_string_stacks.c0: 46.12-46.33)"
B8 00 33 # invokestatic 51    # sstack_empty(_result, "sstack_new (.tmp0/stack_of_string_stacks.c0: 46.12-46.33)")
14 26 E9 # aldc 9961          # s[9961] = ".tmp0/stack_of_string_stacks.c0: 46.4-46.34: @ensures annotation failed"
CF       # assert             # assert sstack_empty(_result, "sstack_new (.tmp0/stack_of_string_stacks.c0: 46.12-46.33)") [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<spush>
03                # number of arguments = 3
04                # number of local variables = 4
00 42             # code length = 66 bytes
15 00    # vload 0            # S
14 27 31 # aldc 10033         # s[10033] = "spush (.tmp0/stack_of_string_stacks.c0: 56.13-56.25)"
B8 00 32 # invokestatic 50    # is_sstack(S, "spush (.tmp0/stack_of_string_stacks.c0: 56.13-56.25)")
14 27 66 # aldc 10086         # s[10086] = ".tmp0/stack_of_string_stacks.c0: 56.4-56.26: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 27 B0 # aldc 10160         # s[10160] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_string_stacks.c0: 56.4-56.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_sstack(S, "spush (.tmp0/stack_of_string_stacks.c0: 56.13-56.25)") [failure message on stack]
BB 10    # new 16             # alloc(stacklist)
36 03    # vstore 3           # l = alloc(stacklist);
15 03    # vload 3            # l
62 00    # aaddf 0            # &l->data
15 01    # vload 1            # x
4F       # amstore            # l->data = x;
15 03    # vload 3            # l
62 08    # aaddf 8            # &l->next
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
4F       # amstore            # l->next = S->top;
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
15 03    # vload 3            # l
4F       # amstore            # S->top = l;
15 00    # vload 0            # S
14 27 C2 # aldc 10178         # s[10178] = "spush (.tmp0/stack_of_string_stacks.c0: 57.12-57.24)"
B8 00 32 # invokestatic 50    # is_sstack(S, "spush (.tmp0/stack_of_string_stacks.c0: 57.12-57.24)")
14 27 F7 # aldc 10231         # s[10231] = ".tmp0/stack_of_string_stacks.c0: 57.4-57.25: @ensures annotation failed"
CF       # assert             # assert is_sstack(S, "spush (.tmp0/stack_of_string_stacks.c0: 57.12-57.24)") [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<spop>
02                # number of arguments = 2
04                # number of local variables = 4
00 5B             # code length = 91 bytes
15 00    # vload 0            # S
14 28 3F # aldc 10303         # s[10303] = "spop (.tmp0/stack_of_string_stacks.c0: 66.13-66.25)"
B8 00 32 # invokestatic 50    # is_sstack(S, "spop (.tmp0/stack_of_string_stacks.c0: 66.13-66.25)")
14 28 73 # aldc 10355         # s[10355] = ".tmp0/stack_of_string_stacks.c0: 66.4-66.26: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 28 BD # aldc 10429         # s[10429] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_string_stacks.c0: 66.4-66.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_sstack(S, "spop (.tmp0/stack_of_string_stacks.c0: 66.13-66.25)") [failure message on stack]
15 00    # vload 0            # S
14 28 CF # aldc 10447         # s[10447] = "spop (.tmp0/stack_of_string_stacks.c0: 67.14-67.29)"
B8 00 33 # invokestatic 51    # sstack_empty(S, "spop (.tmp0/stack_of_string_stacks.c0: 67.14-67.29)")
10 01    # bipush 1           # 
82       # ixor               # !(sstack_empty(S, "spop (.tmp0/stack_of_string_stacks.c0: 67.14-67.29)"))
14 29 03 # aldc 10499         # s[10499] = ".tmp0/stack_of_string_stacks.c0: 67.4-67.30: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 29 4D # aldc 10573         # s[10573] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_string_stacks.c0: 67.4-67.30: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(sstack_empty(S, "spop (.tmp0/stack_of_string_stacks.c0: 67.14-67.29)")) [failure message on stack]
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
62 00    # aaddf 0            # &S->top->data
2F       # amload             # S->top->data
36 03    # vstore 3           # x = S->top->data;
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
62 08    # aaddf 8            # &S->top->next
2F       # amload             # S->top->next
4F       # amstore            # S->top = S->top->next;
15 03    # vload 3            # x
36 02    # vstore 2           # _result = x;
15 00    # vload 0            # S
14 29 5F # aldc 10591         # s[10591] = "spop (.tmp0/stack_of_string_stacks.c0: 68.12-68.24)"
B8 00 32 # invokestatic 50    # is_sstack(S, "spop (.tmp0/stack_of_string_stacks.c0: 68.12-68.24)")
14 29 93 # aldc 10643         # s[10643] = ".tmp0/stack_of_string_stacks.c0: 68.4-68.25: @ensures annotation failed"
CF       # assert             # assert is_sstack(S, "spop (.tmp0/stack_of_string_stacks.c0: 68.12-68.24)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<sstack_print>
02                # number of arguments = 2
03                # number of local variables = 3
00 8E             # code length = 142 bytes
15 00    # vload 0            # S
14 29 DB # aldc 10715         # s[10715] = "sstack_print (.tmp0/stack_of_string_stacks.c0: 76.13-76.25)"
B8 00 32 # invokestatic 50    # is_sstack(S, "sstack_print (.tmp0/stack_of_string_stacks.c0: 76.13-76.25)")
14 2A 17 # aldc 10775         # s[10775] = ".tmp0/stack_of_string_stacks.c0: 76.4-76.26: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 2A 61 # aldc 10849         # s[10849] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_string_stacks.c0: 76.4-76.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_sstack(S, "sstack_print (.tmp0/stack_of_string_stacks.c0: 76.13-76.25)") [failure message on stack]
14 2A 73 # aldc 10867         # s[10867] = "TOP: "
14 2A 79 # aldc 10873         # s[10873] = "sstack_print (.tmp0/stack_of_string_stacks.c0: 78.3-78.18)"
B8 00 01 # invokestatic 1     # print__1("TOP: ", "sstack_print (.tmp0/stack_of_string_stacks.c0: 78.3-78.18)")
57       # pop                # (ignore result)
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
36 02    # vstore 2           # l = S->top;
# <126:loop>
A7 00 03 # goto +3            # goto <127:body>
# <127:body>
15 02    # vload 2            # l
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
A0 00 06 # if_cmpne +6        # if (l != S->floor) goto <129:then>
A7 00 50 # goto +80           # goto <130:else>
# <129:then>
15 02    # vload 2            # l
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
A0 00 06 # if_cmpne +6        # if (l != S->top) goto <132:then>
A7 00 10 # goto +16           # goto <133:else>
# <132:then>
14 2A B4 # aldc 10932         # s[10932] = "     "
14 2A BA # aldc 10938         # s[10938] = "sstack_print (.tmp0/stack_of_string_stacks.c0: 80.22-80.37)"
B8 00 01 # invokestatic 1     # print__1("     ", "sstack_print (.tmp0/stack_of_string_stacks.c0: 80.22-80.37)")
57       # pop                # (ignore result)
A7 00 03 # goto +3            # goto <134:endif>
# <133:else>
# <134:endif>
15 02    # vload 2            # l
62 00    # aaddf 0            # &l->data
2F       # amload             # l->data
14 2A F6 # aldc 10998         # s[10998] = "sstack_print (.tmp0/stack_of_string_stacks.c0: 81.5-81.25)"
B8 00 30 # invokestatic 48    # stack_print__1(l->data, "sstack_print (.tmp0/stack_of_string_stacks.c0: 81.5-81.25)")
57       # pop                # (ignore result)
15 02    # vload 2            # l
62 08    # aaddf 8            # &l->next
2F       # amload             # l->next
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
A0 00 06 # if_cmpne +6        # if (l->next != S->floor) goto <135:then>
A7 00 10 # goto +16           # goto <136:else>
# <135:then>
14 2B 31 # aldc 11057         # s[11057] = "\n"
14 2B 33 # aldc 11059         # s[11059] = "sstack_print (.tmp0/stack_of_string_stacks.c0: 82.30-82.42)"
B8 00 01 # invokestatic 1     # print__1("\n", "sstack_print (.tmp0/stack_of_string_stacks.c0: 82.30-82.42)")
57       # pop                # (ignore result)
A7 00 03 # goto +3            # goto <137:endif>
# <136:else>
# <137:endif>
15 02    # vload 2            # l
62 08    # aaddf 8            # &l->next
2F       # amload             # l->next
36 02    # vstore 2           # l = l->next;
A7 00 06 # goto +6            # goto <131:endif>
# <130:else>
A7 00 06 # goto +6            # break
# <131:endif>
A7 FF A0 # goto -96           # goto <126:loop>
# <128:exit>
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<sstack_empty__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 2C             # code length = 44 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <138:cond_true>
A7 00 08 # goto +8            # goto <139:cond_false>
# <138:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <140:cond_end>
# <139:cond_false>
10 00    # bipush 0           # false
# <140:cond_end>
14 2B 6F # aldc 11119         # s[11119] = ".tmp0/stack_of_string_stacks.c0: 99.4-99.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 2B B9 # aldc 11193         # s[11193] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_string_stacks.c0: 99.4-99.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
14 2B CB # aldc 11211         # s[11211] = "sstack_empty__1 (.tmp0/stack_of_string_stacks.c0: 98.1-99.43)"
B8 00 33 # invokestatic 51    # sstack_empty(S, "sstack_empty__1 (.tmp0/stack_of_string_stacks.c0: 98.1-99.43)")
36 02    # vstore 2           # _result = sstack_empty(S, "sstack_empty__1 (.tmp0/stack_of_string_stacks.c0: 98.1-99.43)");
15 02    # vload 2            # _result
B0       # return             # 


#<sstack_new__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 2B             # code length = 43 bytes
14 2C 09 # aldc 11273         # s[11273] = "sstack_new__1 (.tmp0/stack_of_string_stacks.c0: 101.1-103.43)"
B8 00 34 # invokestatic 52    # sstack_new("sstack_new__1 (.tmp0/stack_of_string_stacks.c0: 101.1-103.43)")
36 01    # vstore 1           # _result = sstack_new("sstack_new__1 (.tmp0/stack_of_string_stacks.c0: 101.1-103.43)");
15 01    # vload 1            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <141:cond_true>
A7 00 08 # goto +8            # goto <142:cond_false>
# <141:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <143:cond_end>
# <142:cond_false>
10 00    # bipush 0           # false
# <143:cond_end>
14 2C 47 # aldc 11335         # s[11335] = ".tmp0/stack_of_string_stacks.c0: 102.4-102.28: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 01    # vload 1            # _result
14 2C 91 # aldc 11409         # s[11409] = "sstack_new__1 (.tmp0/stack_of_string_stacks.c0: 103.12-103.33)"
B8 00 38 # invokestatic 56    # sstack_empty__1(_result, "sstack_new__1 (.tmp0/stack_of_string_stacks.c0: 103.12-103.33)")
14 2C D0 # aldc 11472         # s[11472] = ".tmp0/stack_of_string_stacks.c0: 103.4-103.34: @ensures annotation failed"
CF       # assert             # assert sstack_empty__1(_result, "sstack_new__1 (.tmp0/stack_of_string_stacks.c0: 103.12-103.33)") [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<spush__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 5C             # code length = 92 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <144:cond_true>
A7 00 16 # goto +22           # goto <145:cond_false>
# <144:cond_true>
15 01    # vload 1            # x
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (x != NULL) goto <147:cond_true>
A7 00 08 # goto +8            # goto <148:cond_false>
# <147:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <149:cond_end>
# <148:cond_false>
10 00    # bipush 0           # false
# <149:cond_end>
A7 00 05 # goto +5            # goto <146:cond_end>
# <145:cond_false>
10 00    # bipush 0           # false
# <146:cond_end>
14 2D 1A # aldc 11546         # s[11546] = ".tmp0/stack_of_string_stacks.c0: 106.4-106.36: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 2D 66 # aldc 11622         # s[11622] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_string_stacks.c0: 106.4-106.36: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((S != NULL) && (x != NULL)) [failure message on stack]
15 00    # vload 0            # S
15 01    # vload 1            # x
14 2D 78 # aldc 11640         # s[11640] = "spush__1 (.tmp0/stack_of_string_stacks.c0: 105.1-107.43)"
B8 00 35 # invokestatic 53    # spush(S, x, "spush__1 (.tmp0/stack_of_string_stacks.c0: 105.1-107.43)")
57       # pop                # (ignore result)
15 00    # vload 0            # S
14 2D B1 # aldc 11697         # s[11697] = "spush__1 (.tmp0/stack_of_string_stacks.c0: 107.13-107.28)"
B8 00 38 # invokestatic 56    # sstack_empty__1(S, "spush__1 (.tmp0/stack_of_string_stacks.c0: 107.13-107.28)")
10 01    # bipush 1           # 
82       # ixor               # !(sstack_empty__1(S, "spush__1 (.tmp0/stack_of_string_stacks.c0: 107.13-107.28)"))
14 2D EB # aldc 11755         # s[11755] = ".tmp0/stack_of_string_stacks.c0: 107.4-107.29: @ensures annotation failed"
CF       # assert             # assert !(sstack_empty__1(S, "spush__1 (.tmp0/stack_of_string_stacks.c0: 107.13-107.28)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 
15 00    # vload 0            # S
14 2E 35 # aldc 11829         # s[11829] = "spush__1 (.tmp0/stack_of_string_stacks.c0: 107.13-107.28)"
B8 00 38 # invokestatic 56    # sstack_empty__1(S, "spush__1 (.tmp0/stack_of_string_stacks.c0: 107.13-107.28)")
10 01    # bipush 1           # 
82       # ixor               # !(sstack_empty__1(S, "spush__1 (.tmp0/stack_of_string_stacks.c0: 107.13-107.28)"))
14 2E 6F # aldc 11887         # s[11887] = ".tmp0/stack_of_string_stacks.c0: 107.4-107.29: @ensures annotation failed"
CF       # assert             # assert !(sstack_empty__1(S, "spush__1 (.tmp0/stack_of_string_stacks.c0: 107.13-107.28)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<spop__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 5A             # code length = 90 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <150:cond_true>
A7 00 08 # goto +8            # goto <151:cond_false>
# <150:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <152:cond_end>
# <151:cond_false>
10 00    # bipush 0           # false
# <152:cond_end>
14 2E B9 # aldc 11961         # s[11961] = ".tmp0/stack_of_string_stacks.c0: 110.4-110.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 2F 05 # aldc 12037         # s[12037] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_string_stacks.c0: 110.4-110.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
14 2F 17 # aldc 12055         # s[12055] = "spop__1 (.tmp0/stack_of_string_stacks.c0: 111.14-111.29)"
B8 00 38 # invokestatic 56    # sstack_empty__1(S, "spop__1 (.tmp0/stack_of_string_stacks.c0: 111.14-111.29)")
10 01    # bipush 1           # 
82       # ixor               # !(sstack_empty__1(S, "spop__1 (.tmp0/stack_of_string_stacks.c0: 111.14-111.29)"))
14 2F 50 # aldc 12112         # s[12112] = ".tmp0/stack_of_string_stacks.c0: 111.4-111.30: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 2F 9C # aldc 12188         # s[12188] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_string_stacks.c0: 111.4-111.30: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(sstack_empty__1(S, "spop__1 (.tmp0/stack_of_string_stacks.c0: 111.14-111.29)")) [failure message on stack]
15 00    # vload 0            # S
14 2F AE # aldc 12206         # s[12206] = "spop__1 (.tmp0/stack_of_string_stacks.c0: 109.1-112.43)"
B8 00 36 # invokestatic 54    # spop(S, "spop__1 (.tmp0/stack_of_string_stacks.c0: 109.1-112.43)")
36 02    # vstore 2           # _result = spop(S, "spop__1 (.tmp0/stack_of_string_stacks.c0: 109.1-112.43)");
15 02    # vload 2            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <153:cond_true>
A7 00 08 # goto +8            # goto <154:cond_false>
# <153:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <155:cond_end>
# <154:cond_false>
10 00    # bipush 0           # false
# <155:cond_end>
14 2F E6 # aldc 12262         # s[12262] = ".tmp0/stack_of_string_stacks.c0: 112.4-112.28: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<sstack_print__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 2E             # code length = 46 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <156:cond_true>
A7 00 08 # goto +8            # goto <157:cond_false>
# <156:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <158:cond_end>
# <157:cond_false>
10 00    # bipush 0           # false
# <158:cond_end>
14 30 30 # aldc 12336         # s[12336] = ".tmp0/stack_of_string_stacks.c0: 115.4-115.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 30 7C # aldc 12412         # s[12412] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/stack_of_string_stacks.c0: 115.4-115.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
14 30 8E # aldc 12430         # s[12430] = "sstack_print__1 (.tmp0/stack_of_string_stacks.c0: 114.1-115.43)"
B8 00 37 # invokestatic 55    # sstack_print(S, "sstack_print__1 (.tmp0/stack_of_string_stacks.c0: 114.1-115.43)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<parse_bool__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 09 # invokenative 9     # parse_bool(s)
36 02    # vstore 2           # _result = parse_bool(s);
15 02    # vload 2            # _result
B0       # return             # 


#<parse_int__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 3B             # code length = 59 bytes
10 02    # bipush 2           # 2
15 01    # vload 1            # base
A4 00 06 # if_icmple +6       # if (2 <= base) goto <159:cond_true>
A7 00 17 # goto +23           # goto <160:cond_false>
# <159:cond_true>
15 01    # vload 1            # base
10 24    # bipush 36          # 36
A4 00 06 # if_icmple +6       # if (base <= 36) goto <162:cond_true>
A7 00 08 # goto +8            # goto <163:cond_false>
# <162:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <164:cond_end>
# <163:cond_false>
10 00    # bipush 0           # false
# <164:cond_end>
A7 00 05 # goto +5            # goto <161:cond_end>
# <160:cond_false>
10 00    # bipush 0           # false
# <161:cond_end>
14 30 CE # aldc 12494         # s[12494] = "/afs/andrew/course/15/122/lib/parse.h0: 13.6-13.39: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 31 1F # aldc 12575         # s[12575] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/parse.h0: 13.6-13.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((2 <= base) && (base <= 36)) [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # base
B7 00 0A # invokenative 10    # parse_int(s, base)
36 03    # vstore 3           # _result = parse_int(s, base);
15 03    # vload 3            # _result
B0       # return             # 


#<num_tokens__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 0B # invokenative 11    # num_tokens(s)
36 02    # vstore 2           # _result = num_tokens(s);
15 02    # vload 2            # _result
B0       # return             # 


#<int_tokens__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 3B             # code length = 59 bytes
10 02    # bipush 2           # 2
15 01    # vload 1            # base
A4 00 06 # if_icmple +6       # if (2 <= base) goto <165:cond_true>
A7 00 17 # goto +23           # goto <166:cond_false>
# <165:cond_true>
15 01    # vload 1            # base
10 24    # bipush 36          # 36
A4 00 06 # if_icmple +6       # if (base <= 36) goto <168:cond_true>
A7 00 08 # goto +8            # goto <169:cond_false>
# <168:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <170:cond_end>
# <169:cond_false>
10 00    # bipush 0           # false
# <170:cond_end>
A7 00 05 # goto +5            # goto <167:cond_end>
# <166:cond_false>
10 00    # bipush 0           # false
# <167:cond_end>
14 31 31 # aldc 12593         # s[12593] = "/afs/andrew/course/15/122/lib/parse.h0: 20.6-20.39: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 31 82 # aldc 12674         # s[12674] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/parse.h0: 20.6-20.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((2 <= base) && (base <= 36)) [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # base
B7 00 0C # invokenative 12    # int_tokens(s, base)
36 03    # vstore 3           # _result = int_tokens(s, base);
15 03    # vload 3            # _result
B0       # return             # 


#<parse_tokens__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 26             # code length = 38 bytes
15 00    # vload 0            # s
B7 00 0D # invokenative 13    # parse_tokens(s)
36 02    # vstore 2           # _result = parse_tokens(s);
15 02    # vload 2            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # s
14 31 94 # aldc 12692         # s[12692] = "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)"
B8 00 3F # invokestatic 63    # num_tokens__1(s, "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)")
9F 00 06 # if_cmpeq +6        # if (\length(_result) == num_tokens__1(s, "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)")) goto <171:cond_true>
A7 00 08 # goto +8            # goto <172:cond_false>
# <171:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <173:cond_end>
# <172:cond_false>
10 00    # bipush 0           # false
# <173:cond_end>
14 31 DA # aldc 12762         # s[12762] = "/afs/andrew/course/15/122/lib/parse.h0: 23.6-23.48: @ensures annotation failed"
CF       # assert             # assert (\length(_result) == num_tokens__1(s, "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)")) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<parse_ints__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 41             # code length = 65 bytes
15 00    # vload 0            # s
15 01    # vload 1            # base
14 32 29 # aldc 12841         # s[12841] = "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 27.15-27.34)"
B8 00 40 # invokestatic 64    # int_tokens__1(s, base, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 27.15-27.34)")
14 32 6D # aldc 12909         # s[12909] = "/afs/andrew/course/15/122/lib/parse.h0: 27.6-27.35: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 32 BE # aldc 12990         # s[12990] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/parse.h0: 27.6-27.35: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert int_tokens__1(s, base, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 27.15-27.34)") [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # base
B7 00 0E # invokenative 14    # parse_ints(s, base)
36 03    # vstore 3           # _result = parse_ints(s, base);
15 03    # vload 3            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # s
14 32 D0 # aldc 13008         # s[13008] = "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)"
B8 00 3F # invokestatic 63    # num_tokens__1(s, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)")
9F 00 06 # if_cmpeq +6        # if (\length(_result) == num_tokens__1(s, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)")) goto <174:cond_true>
A7 00 08 # goto +8            # goto <175:cond_false>
# <174:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <176:cond_end>
# <175:cond_false>
10 00    # bipush 0           # false
# <176:cond_end>
14 33 14 # aldc 13076         # s[13076] = "/afs/andrew/course/15/122/lib/parse.h0: 28.6-28.48: @ensures annotation failed"
CF       # assert             # assert (\length(_result) == num_tokens__1(s, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)")) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<string_length__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 0F # invokenative 15    # string_length(s)
36 02    # vstore 2           # _result = string_length(s);
15 02    # vload 2            # _result
B0       # return             # 


#<string_charat__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 41             # code length = 65 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # idx
A4 00 06 # if_icmple +6       # if (0 <= idx) goto <177:cond_true>
A7 00 1D # goto +29           # goto <178:cond_false>
# <177:cond_true>
15 01    # vload 1            # idx
15 00    # vload 0            # s
14 33 63 # aldc 13155         # s[13155] = "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)"
B8 00 43 # invokestatic 67    # string_length__1(s, "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)")
A1 00 06 # if_icmplt +6       # if (idx < string_length__1(s, "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)")) goto <180:cond_true>
A7 00 08 # goto +8            # goto <181:cond_false>
# <180:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <182:cond_end>
# <181:cond_false>
10 00    # bipush 0           # false
# <182:cond_end>
A7 00 05 # goto +5            # goto <179:cond_end>
# <178:cond_false>
10 00    # bipush 0           # false
# <179:cond_end>
14 33 AB # aldc 13227         # s[13227] = "/afs/andrew/course/15/122/lib/string.h0: 19.6-19.50: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 33 FD # aldc 13309         # s[13309] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/string.h0: 19.6-19.50: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= idx) && (idx < string_length__1(s, "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)"))) [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # idx
B7 00 10 # invokenative 16    # string_charat(s, idx)
36 03    # vstore 3           # _result = string_charat(s, idx);
15 03    # vload 3            # _result
B0       # return             # 


#<string_join__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 36             # code length = 54 bytes
15 00    # vload 0            # a
15 01    # vload 1            # b
B7 00 07 # invokenative 7     # string_join(a, b)
36 03    # vstore 3           # _result = string_join(a, b);
15 03    # vload 3            # _result
14 34 0F # aldc 13327         # s[13327] = "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)"
B8 00 43 # invokestatic 67    # string_length__1(_result, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)")
15 00    # vload 0            # a
14 34 55 # aldc 13397         # s[13397] = "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)"
B8 00 43 # invokestatic 67    # string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)")
15 01    # vload 1            # b
14 34 9B # aldc 13467         # s[13467] = "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"
B8 00 43 # invokestatic 67    # string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)")
60       # iadd               # (string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)") + string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"))
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)") == (string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)") + string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"))) goto <183:cond_true>
A7 00 08 # goto +8            # goto <184:cond_false>
# <183:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <185:cond_end>
# <184:cond_false>
10 00    # bipush 0           # false
# <185:cond_end>
14 34 E1 # aldc 13537         # s[13537] = "/afs/andrew/course/15/122/lib/string.h0: 23.6-24.55: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)") == (string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)") + string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"))) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<string_sub__1>
04                # number of arguments = 4
05                # number of local variables = 5
00 6B             # code length = 107 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # start
A4 00 06 # if_icmple +6       # if (0 <= start) goto <189:and>
A7 00 27 # goto +39           # goto <187:cond_false>
# <189:and>
15 01    # vload 1            # start
15 02    # vload 2            # end
A4 00 06 # if_icmple +6       # if (start <= end) goto <186:cond_true>
A7 00 1D # goto +29           # goto <187:cond_false>
# <186:cond_true>
15 02    # vload 2            # end
15 00    # vload 0            # a
14 35 31 # aldc 13617         # s[13617] = "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)"
B8 00 43 # invokestatic 67    # string_length__1(a, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)")
A4 00 06 # if_icmple +6       # if (end <= string_length__1(a, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)")) goto <190:cond_true>
A7 00 08 # goto +8            # goto <191:cond_false>
# <190:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <192:cond_end>
# <191:cond_false>
10 00    # bipush 0           # false
# <192:cond_end>
A7 00 05 # goto +5            # goto <188:cond_end>
# <187:cond_false>
10 00    # bipush 0           # false
# <188:cond_end>
14 35 76 # aldc 13686         # s[13686] = "/afs/andrew/course/15/122/lib/string.h0: 31.6-31.69: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 35 C8 # aldc 13768         # s[13768] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/string.h0: 31.6-31.69: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= start) && (start <= end)) && (end <= string_length__1(a, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)"))) [failure message on stack]
15 00    # vload 0            # a
15 01    # vload 1            # start
15 02    # vload 2            # end
B7 00 11 # invokenative 17    # string_sub(a, start, end)
36 04    # vstore 4           # _result = string_sub(a, start, end);
15 04    # vload 4            # _result
14 35 DA # aldc 13786         # s[13786] = "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)"
B8 00 43 # invokestatic 67    # string_length__1(_result, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)")
15 02    # vload 2            # end
15 01    # vload 1            # start
64       # isub               # (end - start)
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)") == (end - start)) goto <193:cond_true>
A7 00 08 # goto +8            # goto <194:cond_false>
# <193:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <195:cond_end>
# <194:cond_false>
10 00    # bipush 0           # false
# <195:cond_end>
14 36 1F # aldc 13855         # s[13855] = "/afs/andrew/course/15/122/lib/string.h0: 32.6-32.52: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)") == (end - start)) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 


#<string_equal__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 0C             # code length = 12 bytes
15 00    # vload 0            # a
15 01    # vload 1            # b
B7 00 12 # invokenative 18    # string_equal(a, b)
36 03    # vstore 3           # _result = string_equal(a, b);
15 03    # vload 3            # _result
B0       # return             # 


#<string_compare__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 30             # code length = 48 bytes
15 00    # vload 0            # a
15 01    # vload 1            # b
B7 00 13 # invokenative 19    # string_compare(a, b)
36 03    # vstore 3           # _result = string_compare(a, b);
10 FF    # bipush -1          # -1
15 03    # vload 3            # _result
A4 00 06 # if_icmple +6       # if (-(1) <= _result) goto <196:cond_true>
A7 00 17 # goto +23           # goto <197:cond_false>
# <196:cond_true>
15 03    # vload 3            # _result
10 01    # bipush 1           # 1
A4 00 06 # if_icmple +6       # if (_result <= 1) goto <199:cond_true>
A7 00 08 # goto +8            # goto <200:cond_false>
# <199:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <201:cond_end>
# <200:cond_false>
10 00    # bipush 0           # false
# <201:cond_end>
A7 00 05 # goto +5            # goto <198:cond_end>
# <197:cond_false>
10 00    # bipush 0           # false
# <198:cond_end>
14 36 6F # aldc 13935         # s[13935] = "/afs/andrew/course/15/122/lib/string.h0: 37.6-37.44: @ensures annotation failed"
CF       # assert             # assert ((-(1) <= _result) && (_result <= 1)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<string_fromint__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # i
B7 00 14 # invokenative 20    # string_fromint(i)
36 02    # vstore 2           # _result = string_fromint(i);
15 02    # vload 2            # _result
B0       # return             # 


#<string_frombool__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # b
B7 00 15 # invokenative 21    # string_frombool(b)
36 02    # vstore 2           # _result = string_frombool(b);
15 02    # vload 2            # _result
B0       # return             # 


#<string_fromchar__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 62             # code length = 98 bytes
15 00    # vload 0            # c
10 00    # bipush 0           # '\000'
A0 00 06 # if_cmpne +6        # if (c != '\0') goto <202:cond_true>
A7 00 08 # goto +8            # goto <203:cond_false>
# <202:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <204:cond_end>
# <203:cond_false>
10 00    # bipush 0           # false
# <204:cond_end>
14 36 BF # aldc 14015         # s[14015] = "/afs/andrew/course/15/122/lib/string.h0: 43.6-43.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 37 11 # aldc 14097         # s[14097] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/string.h0: 43.6-43.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (c != '\0') [failure message on stack]
15 00    # vload 0            # c
B7 00 16 # invokenative 22    # string_fromchar(c)
36 02    # vstore 2           # _result = string_fromchar(c);
15 02    # vload 2            # _result
14 37 23 # aldc 14115         # s[14115] = "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)"
B8 00 43 # invokestatic 67    # string_length__1(_result, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)")
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)") == 1) goto <205:cond_true>
A7 00 08 # goto +8            # goto <206:cond_false>
# <205:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <207:cond_end>
# <206:cond_false>
10 00    # bipush 0           # false
# <207:cond_end>
14 37 6D # aldc 14189         # s[14189] = "/afs/andrew/course/15/122/lib/string.h0: 44.6-44.42: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)") == 1) [failure message on stack]
15 02    # vload 2            # _result
10 00    # bipush 0           # 0
14 37 BD # aldc 14269         # s[14269] = "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)"
B8 00 44 # invokestatic 68    # string_charat__1(_result, 0, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)")
15 00    # vload 0            # c
9F 00 06 # if_cmpeq +6        # if (string_charat__1(_result, 0, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)") == c) goto <208:cond_true>
A7 00 08 # goto +8            # goto <209:cond_false>
# <208:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <210:cond_end>
# <209:cond_false>
10 00    # bipush 0           # false
# <210:cond_end>
14 38 07 # aldc 14343         # s[14343] = "/afs/andrew/course/15/122/lib/string.h0: 45.6-45.45: @ensures annotation failed"
CF       # assert             # assert (string_charat__1(_result, 0, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)") == c) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<string_tolower__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 17 # invokenative 23    # string_tolower(s)
36 02    # vstore 2           # _result = string_tolower(s);
15 02    # vload 2            # _result
B0       # return             # 


#<string_terminated__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 3C             # code length = 60 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # n
A4 00 06 # if_icmple +6       # if (0 <= n) goto <211:cond_true>
A7 00 18 # goto +24           # goto <212:cond_false>
# <211:cond_true>
15 01    # vload 1            # n
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (n <= \length(A)) goto <214:cond_true>
A7 00 08 # goto +8            # goto <215:cond_false>
# <214:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <216:cond_end>
# <215:cond_false>
10 00    # bipush 0           # false
# <216:cond_end>
A7 00 05 # goto +5            # goto <213:cond_end>
# <212:cond_false>
10 00    # bipush 0           # false
# <213:cond_end>
14 38 57 # aldc 14423         # s[14423] = "/afs/andrew/course/15/122/lib/string.h0: 52.6-52.41: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 38 A9 # aldc 14505         # s[14505] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/string.h0: 52.6-52.41: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= n) && (n <= \length(A))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # n
B7 00 18 # invokenative 24    # string_terminated(A, n)
36 03    # vstore 3           # _result = string_terminated(A, n);
15 03    # vload 3            # _result
B0       # return             # 


#<string_to_chararray__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 40             # code length = 64 bytes
15 00    # vload 0            # s
B7 00 19 # invokenative 25    # string_to_chararray(s)
36 02    # vstore 2           # _result = string_to_chararray(s);
15 02    # vload 2            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # s
14 38 BB # aldc 14523         # s[14523] = "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)"
B8 00 43 # invokestatic 67    # string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)")
10 01    # bipush 1           # 1
60       # iadd               # (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)") + 1)
A2 00 06 # if_icmpge +6       # if (\length(_result) >= (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)") + 1)) goto <217:cond_true>
A7 00 08 # goto +8            # goto <218:cond_false>
# <217:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <219:cond_end>
# <218:cond_false>
10 00    # bipush 0           # false
# <219:cond_end>
14 39 09 # aldc 14601         # s[14601] = "/afs/andrew/course/15/122/lib/string.h0: 56.6-56.55: @ensures annotation failed"
CF       # assert             # assert (\length(_result) >= (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)") + 1)) [failure message on stack]
15 02    # vload 2            # _result
15 00    # vload 0            # s
14 39 59 # aldc 14681         # s[14681] = "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)"
B8 00 43 # invokestatic 67    # string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)")
10 01    # bipush 1           # 1
60       # iadd               # (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)") + 1)
14 39 A7 # aldc 14759         # s[14759] = "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)"
B8 00 4D # invokestatic 77    # string_terminated__1(_result, (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)") + 1), "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)")
14 39 F5 # aldc 14837         # s[14837] = "/afs/andrew/course/15/122/lib/string.h0: 57.6-57.63: @ensures annotation failed"
CF       # assert             # assert string_terminated__1(_result, (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)") + 1), "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<string_from_chararray__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 43             # code length = 67 bytes
15 00    # vload 0            # A
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
14 3A 45 # aldc 14917         # s[14917] = "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)"
B8 00 4D # invokestatic 77    # string_terminated__1(A, \length(A), "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)")
14 3A 95 # aldc 14997         # s[14997] = "/afs/andrew/course/15/122/lib/string.h0: 62.6-62.48: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 3A E7 # aldc 15079         # s[15079] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/string.h0: 62.6-62.48: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert string_terminated__1(A, \length(A), "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)") [failure message on stack]
15 00    # vload 0            # A
B7 00 1A # invokenative 26    # string_from_chararray(A)
36 02    # vstore 2           # _result = string_from_chararray(A);
15 02    # vload 2            # _result
14 3A F9 # aldc 15097         # s[15097] = "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)"
B8 00 43 # invokestatic 67    # string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)")
10 01    # bipush 1           # 1
60       # iadd               # (string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)") + 1)
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if ((string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)") + 1) <= \length(A)) goto <220:cond_true>
A7 00 08 # goto +8            # goto <221:cond_false>
# <220:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <222:cond_end>
# <221:cond_false>
10 00    # bipush 0           # false
# <222:cond_end>
14 3B 49 # aldc 15177         # s[15177] = "/afs/andrew/course/15/122/lib/string.h0: 63.6-63.55: @ensures annotation failed"
CF       # assert             # assert ((string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)") + 1) <= \length(A)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<char_ord__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 2E             # code length = 46 bytes
15 00    # vload 0            # c
B7 00 1B # invokenative 27    # char_ord(c)
36 02    # vstore 2           # _result = char_ord(c);
10 00    # bipush 0           # 0
15 02    # vload 2            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <223:cond_true>
A7 00 17 # goto +23           # goto <224:cond_false>
# <223:cond_true>
15 02    # vload 2            # _result
10 7F    # bipush 127         # 127
A4 00 06 # if_icmple +6       # if (_result <= 127) goto <226:cond_true>
A7 00 08 # goto +8            # goto <227:cond_false>
# <226:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <228:cond_end>
# <227:cond_false>
10 00    # bipush 0           # false
# <228:cond_end>
A7 00 05 # goto +5            # goto <225:cond_end>
# <224:cond_false>
10 00    # bipush 0           # false
# <225:cond_end>
14 3B 99 # aldc 15257         # s[15257] = "/afs/andrew/course/15/122/lib/string.h0: 67.6-67.45: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result <= 127)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<char_chr__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 39             # code length = 57 bytes
10 00    # bipush 0           # 0
15 00    # vload 0            # n
A4 00 06 # if_icmple +6       # if (0 <= n) goto <229:cond_true>
A7 00 17 # goto +23           # goto <230:cond_false>
# <229:cond_true>
15 00    # vload 0            # n
10 7F    # bipush 127         # 127
A4 00 06 # if_icmple +6       # if (n <= 127) goto <232:cond_true>
A7 00 08 # goto +8            # goto <233:cond_false>
# <232:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <234:cond_end>
# <233:cond_false>
10 00    # bipush 0           # false
# <234:cond_end>
A7 00 05 # goto +5            # goto <231:cond_end>
# <230:cond_false>
10 00    # bipush 0           # false
# <231:cond_end>
14 3B E9 # aldc 15337         # s[15337] = "/afs/andrew/course/15/122/lib/string.h0: 69.6-69.34: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 3C 3B # aldc 15419         # s[15419] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/string.h0: 69.6-69.34: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= n) && (n <= 127)) [failure message on stack]
15 00    # vload 0            # n
B7 00 1C # invokenative 28    # char_chr(n)
36 02    # vstore 2           # _result = char_chr(n);
15 02    # vload 2            # _result
B0       # return             # 


#<file_closed__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 29             # code length = 41 bytes
15 00    # vload 0            # f
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (f != NULL) goto <235:cond_true>
A7 00 08 # goto +8            # goto <236:cond_false>
# <235:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <237:cond_end>
# <236:cond_false>
10 00    # bipush 0           # false
# <237:cond_end>
14 3C 4D # aldc 15437         # s[15437] = "/afs/andrew/course/15/122/lib/file.h0: 10.6-10.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 3C 9D # aldc 15517         # s[15517] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/file.h0: 10.6-10.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (f != NULL) [failure message on stack]
15 00    # vload 0            # f
B7 00 1D # invokenative 29    # file_closed(f)
36 02    # vstore 2           # _result = file_closed(f);
15 02    # vload 2            # _result
B0       # return             # 


#<file_read__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 27             # code length = 39 bytes
15 00    # vload 0            # path
B7 00 1E # invokenative 30    # file_read(path)
36 02    # vstore 2           # _result = file_read(path);
15 02    # vload 2            # _result
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (_result == NULL) goto <238:cond_true>
A7 00 08 # goto +8            # goto <239:cond_false>
# <238:cond_true>
10 01    # bipush 1           # true
A7 00 0E # goto +14           # goto <240:cond_end>
# <239:cond_false>
15 02    # vload 2            # _result
14 3C AF # aldc 15535         # s[15535] = "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)"
B8 00 52 # invokestatic 82    # file_closed__1(_result, "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)")
10 01    # bipush 1           # 
82       # ixor               # !(file_closed__1(_result, "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)"))
# <240:cond_end>
14 3C F1 # aldc 15601         # s[15601] = "/afs/andrew/course/15/122/lib/file.h0: 15.6-15.55: @ensures annotation failed"
CF       # assert             # assert ((_result == NULL) || !(file_closed__1(_result, "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)"))) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<file_close__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 5D             # code length = 93 bytes
15 00    # vload 0            # f
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (f != NULL) goto <241:cond_true>
A7 00 08 # goto +8            # goto <242:cond_false>
# <241:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <243:cond_end>
# <242:cond_false>
10 00    # bipush 0           # false
# <243:cond_end>
14 3D 3F # aldc 15679         # s[15679] = "/afs/andrew/course/15/122/lib/file.h0: 20.6-20.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 3D 8F # aldc 15759         # s[15759] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/file.h0: 20.6-20.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (f != NULL) [failure message on stack]
15 00    # vload 0            # f
14 3D A1 # aldc 15777         # s[15777] = "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)"
B8 00 52 # invokestatic 82    # file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)")
10 01    # bipush 1           # 
82       # ixor               # !(file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)"))
14 3D E4 # aldc 15844         # s[15844] = "/afs/andrew/course/15/122/lib/file.h0: 21.6-21.31: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 3E 34 # aldc 15924         # s[15924] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/file.h0: 21.6-21.31: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)")) [failure message on stack]
15 00    # vload 0            # f
B7 00 1F # invokenative 31    # file_close(f)
57       # pop                # (ignore result)
15 00    # vload 0            # f
14 3E 46 # aldc 15942         # s[15942] = "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)"
B8 00 52 # invokestatic 82    # file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)")
14 3E 89 # aldc 16009         # s[16009] = "/afs/andrew/course/15/122/lib/file.h0: 22.6-22.29: @ensures annotation failed"
CF       # assert             # assert file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)") [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 
15 00    # vload 0            # f
14 3E D7 # aldc 16087         # s[16087] = "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)"
B8 00 52 # invokestatic 82    # file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)")
14 3F 1A # aldc 16154         # s[16154] = "/afs/andrew/course/15/122/lib/file.h0: 22.6-22.29: @ensures annotation failed"
CF       # assert             # assert file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)") [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<file_eof__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 43             # code length = 67 bytes
15 00    # vload 0            # f
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (f != NULL) goto <244:cond_true>
A7 00 08 # goto +8            # goto <245:cond_false>
# <244:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <246:cond_end>
# <245:cond_false>
10 00    # bipush 0           # false
# <246:cond_end>
14 3F 68 # aldc 16232         # s[16232] = "/afs/andrew/course/15/122/lib/file.h0: 26.6-26.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 3F B8 # aldc 16312         # s[16312] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/file.h0: 26.6-26.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (f != NULL) [failure message on stack]
15 00    # vload 0            # f
14 3F CA # aldc 16330         # s[16330] = "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)"
B8 00 52 # invokestatic 82    # file_closed__1(f, "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)")
10 01    # bipush 1           # 
82       # ixor               # !(file_closed__1(f, "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)"))
14 40 0B # aldc 16395         # s[16395] = "/afs/andrew/course/15/122/lib/file.h0: 27.6-27.31: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 40 5B # aldc 16475         # s[16475] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/file.h0: 27.6-27.31: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(file_closed__1(f, "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)")) [failure message on stack]
15 00    # vload 0            # f
B7 00 20 # invokenative 32    # file_eof(f)
36 02    # vstore 2           # _result = file_eof(f);
15 02    # vload 2            # _result
B0       # return             # 


#<file_readline__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 5D             # code length = 93 bytes
15 00    # vload 0            # f
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (f != NULL) goto <247:cond_true>
A7 00 08 # goto +8            # goto <248:cond_false>
# <247:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <249:cond_end>
# <248:cond_false>
10 00    # bipush 0           # false
# <249:cond_end>
14 40 6D # aldc 16493         # s[16493] = "/afs/andrew/course/15/122/lib/file.h0: 34.6-34.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 40 BD # aldc 16573         # s[16573] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/file.h0: 34.6-34.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (f != NULL) [failure message on stack]
15 00    # vload 0            # f
14 40 CF # aldc 16591         # s[16591] = "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)"
B8 00 52 # invokestatic 82    # file_closed__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)")
10 01    # bipush 1           # 
82       # ixor               # !(file_closed__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)"))
14 41 15 # aldc 16661         # s[16661] = "/afs/andrew/course/15/122/lib/file.h0: 35.6-35.31: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 41 65 # aldc 16741         # s[16741] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/file.h0: 35.6-35.31: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(file_closed__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)")) [failure message on stack]
15 00    # vload 0            # f
14 41 77 # aldc 16759         # s[16759] = "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)"
B8 00 55 # invokestatic 85    # file_eof__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)")
10 01    # bipush 1           # 
82       # ixor               # !(file_eof__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)"))
14 41 BD # aldc 16829         # s[16829] = "/afs/andrew/course/15/122/lib/file.h0: 36.6-36.28: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 42 0D # aldc 16909         # s[16909] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/file.h0: 36.6-36.28: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(file_eof__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)")) [failure message on stack]
15 00    # vload 0            # f
B7 00 21 # invokenative 33    # file_readline(f)
36 02    # vstore 2           # _result = file_readline(f);
15 02    # vload 2            # _result
B0       # return             # 


#<is_symbolic>
02                # number of arguments = 2
03                # number of local variables = 3
00 7A             # code length = 122 bytes
10 21    # bipush 33          # '!'
15 00    # vload 0            # c
A4 00 06 # if_icmple +6       # if ('!' <= c) goto <256:and>
A7 00 0D # goto +13           # goto <255:or>
# <256:and>
15 00    # vload 0            # c
10 27    # bipush 39          # '\''
A4 00 42 # if_icmple +66      # if (c <= '\'') goto <250:cond_true>
A7 00 03 # goto +3            # goto <255:or>
# <255:or>
10 2A    # bipush 42          # '*'
15 00    # vload 0            # c
A4 00 06 # if_icmple +6       # if ('*' <= c) goto <257:and>
A7 00 0D # goto +13           # goto <254:or>
# <257:and>
15 00    # vload 0            # c
10 2F    # bipush 47          # '/'
A4 00 2E # if_icmple +46      # if (c <= '/') goto <250:cond_true>
A7 00 03 # goto +3            # goto <254:or>
# <254:or>
10 3A    # bipush 58          # ':'
15 00    # vload 0            # c
A4 00 06 # if_icmple +6       # if (':' <= c) goto <258:and>
A7 00 0D # goto +13           # goto <253:or>
# <258:and>
15 00    # vload 0            # c
10 40    # bipush 64          # '@'
A4 00 1A # if_icmple +26      # if (c <= '@') goto <250:cond_true>
A7 00 03 # goto +3            # goto <253:or>
# <253:or>
10 5B    # bipush 91          # '['
15 00    # vload 0            # c
A4 00 06 # if_icmple +6       # if ('[' <= c) goto <259:and>
A7 00 12 # goto +18           # goto <251:cond_false>
# <259:and>
15 00    # vload 0            # c
10 60    # bipush 96          # '`'
A4 00 06 # if_icmple +6       # if (c <= '`') goto <250:cond_true>
A7 00 08 # goto +8            # goto <251:cond_false>
# <250:cond_true>
10 01    # bipush 1           # true
A7 00 23 # goto +35           # goto <252:cond_end>
# <251:cond_false>
10 7B    # bipush 123         # '{'
15 00    # vload 0            # c
A4 00 06 # if_icmple +6       # if ('{' <= c) goto <260:cond_true>
A7 00 17 # goto +23           # goto <261:cond_false>
# <260:cond_true>
15 00    # vload 0            # c
10 7E    # bipush 126         # '~'
A4 00 06 # if_icmple +6       # if (c <= '~') goto <263:cond_true>
A7 00 08 # goto +8            # goto <264:cond_false>
# <263:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <265:cond_end>
# <264:cond_false>
10 00    # bipush 0           # false
# <265:cond_end>
A7 00 05 # goto +5            # goto <262:cond_end>
# <261:cond_false>
10 00    # bipush 0           # false
# <262:cond_end>
# <252:cond_end>
36 02    # vstore 2           # _result = (((((('!' <= c) && (c <= '\'')) || (('*' <= c) && (c <= '/'))) || ((':' <= c) && (c <= '@'))) || (('[' <= c) && (c <= '`'))) || (('{' <= c) && (c <= '~')));
15 02    # vload 2            # _result
B0       # return             # 


#<is_numeric>
02                # number of arguments = 2
03                # number of local variables = 3
00 25             # code length = 37 bytes
10 30    # bipush 48          # '0'
15 00    # vload 0            # c
A4 00 06 # if_icmple +6       # if ('0' <= c) goto <266:cond_true>
A7 00 17 # goto +23           # goto <267:cond_false>
# <266:cond_true>
15 00    # vload 0            # c
10 39    # bipush 57          # '9'
A4 00 06 # if_icmple +6       # if (c <= '9') goto <269:cond_true>
A7 00 08 # goto +8            # goto <270:cond_false>
# <269:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <271:cond_end>
# <270:cond_false>
10 00    # bipush 0           # false
# <271:cond_end>
A7 00 05 # goto +5            # goto <268:cond_end>
# <267:cond_false>
10 00    # bipush 0           # false
# <268:cond_end>
36 02    # vstore 2           # _result = (('0' <= c) && (c <= '9'));
15 02    # vload 2            # _result
B0       # return             # 


#<is_alpha>
02                # number of arguments = 2
03                # number of local variables = 3
00 3E             # code length = 62 bytes
10 41    # bipush 65          # 'A'
15 00    # vload 0            # c
A4 00 06 # if_icmple +6       # if ('A' <= c) goto <275:and>
A7 00 12 # goto +18           # goto <273:cond_false>
# <275:and>
15 00    # vload 0            # c
10 5A    # bipush 90          # 'Z'
A4 00 06 # if_icmple +6       # if (c <= 'Z') goto <272:cond_true>
A7 00 08 # goto +8            # goto <273:cond_false>
# <272:cond_true>
10 01    # bipush 1           # true
A7 00 23 # goto +35           # goto <274:cond_end>
# <273:cond_false>
10 61    # bipush 97          # 'a'
15 00    # vload 0            # c
A4 00 06 # if_icmple +6       # if ('a' <= c) goto <276:cond_true>
A7 00 17 # goto +23           # goto <277:cond_false>
# <276:cond_true>
15 00    # vload 0            # c
10 7A    # bipush 122         # 'z'
A4 00 06 # if_icmple +6       # if (c <= 'z') goto <279:cond_true>
A7 00 08 # goto +8            # goto <280:cond_false>
# <279:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <281:cond_end>
# <280:cond_false>
10 00    # bipush 0           # false
# <281:cond_end>
A7 00 05 # goto +5            # goto <278:cond_end>
# <277:cond_false>
10 00    # bipush 0           # false
# <278:cond_end>
# <274:cond_end>
36 02    # vstore 2           # _result = ((('A' <= c) && (c <= 'Z')) || (('a' <= c) && (c <= 'z')));
15 02    # vload 2            # _result
B0       # return             # 


#<is_alphanumeric>
02                # number of arguments = 2
03                # number of local variables = 3
00 22             # code length = 34 bytes
15 00    # vload 0            # c
14 42 1F # aldc 16927         # s[16927] = "is_alphanumeric (.tmp0/utils.c0: 33.10-33.23)"
B8 00 58 # invokestatic 88    # is_numeric(c, "is_alphanumeric (.tmp0/utils.c0: 33.10-33.23)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_numeric(c, "is_alphanumeric (.tmp0/utils.c0: 33.10-33.23)") == true) goto <282:cond_true>
A7 00 08 # goto +8            # goto <283:cond_false>
# <282:cond_true>
10 01    # bipush 1           # true
A7 00 0B # goto +11           # goto <284:cond_end>
# <283:cond_false>
15 00    # vload 0            # c
14 42 4D # aldc 16973         # s[16973] = "is_alphanumeric (.tmp0/utils.c0: 33.27-33.38)"
B8 00 59 # invokestatic 89    # is_alpha(c, "is_alphanumeric (.tmp0/utils.c0: 33.27-33.38)")
# <284:cond_end>
36 02    # vstore 2           # _result = (is_numeric(c, "is_alphanumeric (.tmp0/utils.c0: 33.10-33.23)") || is_alpha(c, "is_alphanumeric (.tmp0/utils.c0: 33.27-33.38)"));
15 02    # vload 2            # _result
B0       # return             # 


#<is_infix_array>
03                # number of arguments = 3
0B                # number of local variables = 11
01 49             # code length = 329 bytes
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
15 01    # vload 1            # n
9F 00 06 # if_cmpeq +6        # if (\length(A) == n) goto <285:cond_true>
A7 00 08 # goto +8            # goto <286:cond_false>
# <285:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <287:cond_end>
# <286:cond_false>
10 00    # bipush 0           # false
# <287:cond_end>
14 42 7B # aldc 17019         # s[17019] = ".tmp0/utils.c0: 38.4-38.29: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 42 B4 # aldc 17076         # s[17076] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/utils.c0: 38.4-38.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(A) == n) [failure message on stack]
10 00    # bipush 0           # 0
36 04    # vstore 4           # i = 0;
# <288:loop>
A7 00 03 # goto +3            # goto <289:body>
# <289:body>
10 00    # bipush 0           # 0
15 04    # vload 4            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <291:cond_true>
A7 00 17 # goto +23           # goto <292:cond_false>
# <291:cond_true>
15 04    # vload 4            # i
15 01    # vload 1            # n
A4 00 06 # if_icmple +6       # if (i <= n) goto <294:cond_true>
A7 00 08 # goto +8            # goto <295:cond_false>
# <294:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <296:cond_end>
# <295:cond_false>
10 00    # bipush 0           # false
# <296:cond_end>
A7 00 05 # goto +5            # goto <293:cond_end>
# <292:cond_false>
10 00    # bipush 0           # false
# <293:cond_end>
14 42 C6 # aldc 17094         # s[17094] = ".tmp0/utils.c0: 41.6-41.38: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= i) && (i <= n)) [failure message on stack]
15 04    # vload 4            # i
15 01    # vload 1            # n
A1 00 06 # if_icmplt +6       # if (i < n) goto <297:then>
A7 00 E9 # goto +233          # goto <298:else>
# <297:then>
15 00    # vload 0            # A
15 04    # vload 4            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
36 05    # vstore 5           # s = A[i];
15 05    # vload 5            # s
14 43 04 # aldc 17156         # s[17156] = "is_infix_array (.tmp0/utils.c0: 44.16-44.29)"
B8 00 3F # invokestatic 63    # num_tokens__1(s, "is_infix_array (.tmp0/utils.c0: 44.16-44.29)")
36 06    # vstore 6           # toks = num_tokens__1(s, "is_infix_array (.tmp0/utils.c0: 44.16-44.29)");
15 05    # vload 5            # s
14 43 31 # aldc 17201         # s[17201] = "is_infix_array (.tmp0/utils.c0: 45.18-45.33)"
B8 00 41 # invokestatic 65    # parse_tokens__1(s, "is_infix_array (.tmp0/utils.c0: 45.18-45.33)")
36 07    # vstore 7           # B = parse_tokens__1(s, "is_infix_array (.tmp0/utils.c0: 45.18-45.33)");
10 00    # bipush 0           # 0
36 08    # vstore 8           # j = 0;
# <300:loop>
A7 00 03 # goto +3            # goto <301:body>
# <301:body>
10 00    # bipush 0           # 0
15 08    # vload 8            # j
A4 00 06 # if_icmple +6       # if (0 <= j) goto <303:cond_true>
A7 00 17 # goto +23           # goto <304:cond_false>
# <303:cond_true>
15 08    # vload 8            # j
15 06    # vload 6            # toks
A4 00 06 # if_icmple +6       # if (j <= toks) goto <306:cond_true>
A7 00 08 # goto +8            # goto <307:cond_false>
# <306:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <308:cond_end>
# <307:cond_false>
10 00    # bipush 0           # false
# <308:cond_end>
A7 00 05 # goto +5            # goto <305:cond_end>
# <304:cond_false>
10 00    # bipush 0           # false
# <305:cond_end>
14 43 5E # aldc 17246         # s[17246] = ".tmp0/utils.c0: 48.8-48.43: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= j) && (j <= toks)) [failure message on stack]
15 08    # vload 8            # j
15 06    # vload 6            # toks
A1 00 06 # if_icmplt +6       # if (j < toks) goto <309:then>
A7 00 88 # goto +136          # goto <310:else>
# <309:then>
15 07    # vload 7            # B
15 08    # vload 8            # j
63       # aadds              # &B[j]
2F       # amload             # B[j]
36 09    # vstore 9           # tok = B[j];
10 00    # bipush 0           # 0
36 0A    # vstore 10          # k = 0;
# <312:loop>
A7 00 03 # goto +3            # goto <313:body>
# <313:body>
10 00    # bipush 0           # 0
15 0A    # vload 10           # k
A4 00 06 # if_icmple +6       # if (0 <= k) goto <315:cond_true>
A7 00 1D # goto +29           # goto <316:cond_false>
# <315:cond_true>
15 0A    # vload 10           # k
15 09    # vload 9            # tok
14 43 9C # aldc 17308         # s[17308] = "is_infix_array (.tmp0/utils.c0: 53.40-53.58)"
B8 00 43 # invokestatic 67    # string_length__1(tok, "is_infix_array (.tmp0/utils.c0: 53.40-53.58)")
A4 00 06 # if_icmple +6       # if (k <= string_length__1(tok, "is_infix_array (.tmp0/utils.c0: 53.40-53.58)")) goto <318:cond_true>
A7 00 08 # goto +8            # goto <319:cond_false>
# <318:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <320:cond_end>
# <319:cond_false>
10 00    # bipush 0           # false
# <320:cond_end>
A7 00 05 # goto +5            # goto <317:cond_end>
# <316:cond_false>
10 00    # bipush 0           # false
# <317:cond_end>
14 43 C9 # aldc 17353         # s[17353] = ".tmp0/utils.c0: 53.10-53.59: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= k) && (k <= string_length__1(tok, "is_infix_array (.tmp0/utils.c0: 53.40-53.58)"))) [failure message on stack]
15 0A    # vload 10           # k
15 09    # vload 9            # tok
14 44 08 # aldc 17416         # s[17416] = "is_infix_array (.tmp0/utils.c0: 52.27-52.45)"
B8 00 43 # invokestatic 67    # string_length__1(tok, "is_infix_array (.tmp0/utils.c0: 52.27-52.45)")
A1 00 06 # if_icmplt +6       # if (k < string_length__1(tok, "is_infix_array (.tmp0/utils.c0: 52.27-52.45)")) goto <321:then>
A7 00 2F # goto +47           # goto <322:else>
# <321:then>
15 09    # vload 9            # tok
15 0A    # vload 10           # k
14 44 35 # aldc 17461         # s[17461] = "is_infix_array (.tmp0/utils.c0: 55.26-55.47)"
B8 00 44 # invokestatic 68    # string_charat__1(tok, k, "is_infix_array (.tmp0/utils.c0: 55.26-55.47)")
14 44 62 # aldc 17506         # s[17506] = "is_infix_array (.tmp0/utils.c0: 55.14-55.48)"
B8 00 57 # invokestatic 87    # is_symbolic(string_charat__1(tok, k, "is_infix_array (.tmp0/utils.c0: 55.26-55.47)"), "is_infix_array (.tmp0/utils.c0: 55.14-55.48)")
10 01    # bipush 1           # true
9F 00 10 # if_cmpeq +16       # if (is_symbolic(string_charat__1(tok, k, "is_infix_array (.tmp0/utils.c0: 55.26-55.47)"), "is_infix_array (.tmp0/utils.c0: 55.14-55.48)") == true) goto <325:else>
A7 00 03 # goto +3            # goto <324:then>
# <324:then>
10 00    # bipush 0           # false
36 03    # vstore 3           # _result = false;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <326:endif>
# <325:else>
# <326:endif>
15 0A    # vload 10           # k
10 01    # bipush 1           # 1
60       # iadd               # 
36 0A    # vstore 10          # k += 1;
A7 00 06 # goto +6            # goto <323:endif>
# <322:else>
A7 00 06 # goto +6            # break
# <323:endif>
A7 FF 94 # goto -108          # goto <312:loop>
# <314:exit>
15 08    # vload 8            # j
10 01    # bipush 1           # 1
60       # iadd               # 
36 08    # vstore 8           # j += 1;
A7 00 06 # goto +6            # goto <311:endif>
# <310:else>
A7 00 06 # goto +6            # break
# <311:endif>
A7 FF 47 # goto -185          # goto <300:loop>
# <302:exit>
15 04    # vload 4            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 04    # vstore 4           # i += 1;
A7 00 06 # goto +6            # goto <299:endif>
# <298:else>
A7 00 06 # goto +6            # break
# <299:endif>
A7 FE E6 # goto -282          # goto <288:loop>
# <290:exit>
10 01    # bipush 1           # true
36 03    # vstore 3           # _result = true;
15 03    # vload 3            # _result
B0       # return             # 


#<tokenize>
02                # number of arguments = 2
08                # number of local variables = 8
02 07             # code length = 519 bytes
10 00    # bipush 0           # 0
36 03    # vstore 3           # lo = 0;
15 00    # vload 0            # s
14 44 8F # aldc 17551         # s[17551] = "tokenize (.tmp0/utils.c0: 65.11-65.27)"
B8 00 43 # invokestatic 67    # string_length__1(s, "tokenize (.tmp0/utils.c0: 65.11-65.27)")
36 04    # vstore 4           # n = string_length__1(s, "tokenize (.tmp0/utils.c0: 65.11-65.27)");
14 44 B6 # aldc 17590         # s[17590] = "tokenize (.tmp0/utils.c0: 66.15-66.26)"
B8 00 14 # invokestatic 20    # queue_new__1("tokenize (.tmp0/utils.c0: 66.15-66.26)")
36 05    # vstore 5           # Q = queue_new__1("tokenize (.tmp0/utils.c0: 66.15-66.26)");
# <327:loop>
A7 00 03 # goto +3            # goto <328:body>
# <328:body>
10 00    # bipush 0           # 0
15 03    # vload 3            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <330:cond_true>
A7 00 17 # goto +23           # goto <331:cond_false>
# <330:cond_true>
15 03    # vload 3            # lo
15 04    # vload 4            # n
A4 00 06 # if_icmple +6       # if (lo <= n) goto <333:cond_true>
A7 00 08 # goto +8            # goto <334:cond_false>
# <333:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <335:cond_end>
# <334:cond_false>
10 00    # bipush 0           # false
# <335:cond_end>
A7 00 05 # goto +5            # goto <332:cond_end>
# <331:cond_false>
10 00    # bipush 0           # false
# <332:cond_end>
14 44 DD # aldc 17629         # s[17629] = ".tmp0/utils.c0: 69.6-69.40: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= lo) && (lo <= n)) [failure message on stack]
15 03    # vload 3            # lo
15 04    # vload 4            # n
A1 00 06 # if_icmplt +6       # if (lo < n) goto <336:then>
A7 01 B6 # goto +438          # goto <337:else>
# <336:then>
15 00    # vload 0            # s
15 03    # vload 3            # lo
14 45 1B # aldc 17691         # s[17691] = "tokenize (.tmp0/utils.c0: 71.14-71.34)"
B8 00 44 # invokestatic 68    # string_charat__1(s, lo, "tokenize (.tmp0/utils.c0: 71.14-71.34)")
36 06    # vstore 6           # c = string_charat__1(s, lo, "tokenize (.tmp0/utils.c0: 71.14-71.34)");
15 06    # vload 6            # c
10 20    # bipush 32          # ' '
A4 00 06 # if_icmple +6       # if (c <= ' ') goto <339:then>
A7 00 0D # goto +13           # goto <340:else>
# <339:then>
15 03    # vload 3            # lo
10 01    # bipush 1           # 1
60       # iadd               # 
36 03    # vstore 3           # lo += 1;
A7 01 93 # goto +403          # goto <341:endif>
# <340:else>
15 03    # vload 3            # lo
10 01    # bipush 1           # 1
60       # iadd               # (lo + 1)
36 07    # vstore 7           # hi = (lo + 1);
15 06    # vload 6            # c
14 45 42 # aldc 17730         # s[17730] = "tokenize (.tmp0/utils.c0: 80.11-80.24)"
B8 00 58 # invokestatic 88    # is_numeric(c, "tokenize (.tmp0/utils.c0: 80.11-80.24)")
10 01    # bipush 1           # true
9F 00 32 # if_cmpeq +50       # if (is_numeric(c, "tokenize (.tmp0/utils.c0: 80.11-80.24)") == true) goto <342:then>
A7 00 03 # goto +3            # goto <345:or>
# <345:or>
15 06    # vload 6            # c
10 2D    # bipush 45          # '-'
9F 00 06 # if_cmpeq +6        # if (c == '-') goto <347:and>
A7 00 81 # goto +129          # goto <343:else>
# <347:and>
15 07    # vload 7            # hi
15 04    # vload 4            # n
A1 00 06 # if_icmplt +6       # if (hi < n) goto <346:and>
A7 00 77 # goto +119          # goto <343:else>
# <346:and>
15 00    # vload 0            # s
15 07    # vload 7            # hi
14 45 69 # aldc 17769         # s[17769] = "tokenize (.tmp0/utils.c0: 82.48-82.68)"
B8 00 44 # invokestatic 68    # string_charat__1(s, hi, "tokenize (.tmp0/utils.c0: 82.48-82.68)")
14 45 90 # aldc 17808         # s[17808] = "tokenize (.tmp0/utils.c0: 82.37-82.69)"
B8 00 58 # invokestatic 88    # is_numeric(string_charat__1(s, hi, "tokenize (.tmp0/utils.c0: 82.48-82.68)"), "tokenize (.tmp0/utils.c0: 82.37-82.69)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_numeric(string_charat__1(s, hi, "tokenize (.tmp0/utils.c0: 82.48-82.68)"), "tokenize (.tmp0/utils.c0: 82.37-82.69)") == true) goto <342:then>
A7 00 5F # goto +95           # goto <343:else>
# <342:then>
# <348:loop>
A7 00 03 # goto +3            # goto <349:body>
# <349:body>
10 00    # bipush 0           # 0
15 07    # vload 7            # hi
A4 00 06 # if_icmple +6       # if (0 <= hi) goto <351:cond_true>
A7 00 17 # goto +23           # goto <352:cond_false>
# <351:cond_true>
15 07    # vload 7            # hi
15 04    # vload 4            # n
A4 00 06 # if_icmple +6       # if (hi <= n) goto <354:cond_true>
A7 00 08 # goto +8            # goto <355:cond_false>
# <354:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <356:cond_end>
# <355:cond_false>
10 00    # bipush 0           # false
# <356:cond_end>
A7 00 05 # goto +5            # goto <353:cond_end>
# <352:cond_false>
10 00    # bipush 0           # false
# <353:cond_end>
14 45 B7 # aldc 17847         # s[17847] = ".tmp0/utils.c0: 85.12-85.46: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= hi) && (hi <= n)) [failure message on stack]
15 07    # vload 7            # hi
15 04    # vload 4            # n
A1 00 06 # if_icmplt +6       # if (hi < n) goto <360:and>
A7 00 25 # goto +37           # goto <358:else>
# <360:and>
15 00    # vload 0            # s
15 07    # vload 7            # hi
14 45 F6 # aldc 17910         # s[17910] = "tokenize (.tmp0/utils.c0: 84.37-84.57)"
B8 00 44 # invokestatic 68    # string_charat__1(s, hi, "tokenize (.tmp0/utils.c0: 84.37-84.57)")
14 46 1D # aldc 17949         # s[17949] = "tokenize (.tmp0/utils.c0: 84.26-84.58)"
B8 00 58 # invokestatic 88    # is_numeric(string_charat__1(s, hi, "tokenize (.tmp0/utils.c0: 84.37-84.57)"), "tokenize (.tmp0/utils.c0: 84.26-84.58)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_numeric(string_charat__1(s, hi, "tokenize (.tmp0/utils.c0: 84.37-84.57)"), "tokenize (.tmp0/utils.c0: 84.26-84.58)") == true) goto <357:then>
A7 00 0D # goto +13           # goto <358:else>
# <357:then>
15 07    # vload 7            # hi
10 01    # bipush 1           # 1
60       # iadd               # 
36 07    # vstore 7           # hi += 1;
A7 00 06 # goto +6            # goto <359:endif>
# <358:else>
A7 00 06 # goto +6            # break
# <359:endif>
A7 FF AA # goto -86           # goto <348:loop>
# <350:exit>
A7 00 DB # goto +219          # goto <344:endif>
# <343:else>
15 06    # vload 6            # c
14 46 44 # aldc 17988         # s[17988] = "tokenize (.tmp0/utils.c0: 91.18-91.32)"
B8 00 57 # invokestatic 87    # is_symbolic(c, "tokenize (.tmp0/utils.c0: 91.18-91.32)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_symbolic(c, "tokenize (.tmp0/utils.c0: 91.18-91.32)") == true) goto <361:then>
A7 00 5F # goto +95           # goto <362:else>
# <361:then>
# <364:loop>
A7 00 03 # goto +3            # goto <365:body>
# <365:body>
10 00    # bipush 0           # 0
15 07    # vload 7            # hi
A4 00 06 # if_icmple +6       # if (0 <= hi) goto <367:cond_true>
A7 00 17 # goto +23           # goto <368:cond_false>
# <367:cond_true>
15 07    # vload 7            # hi
15 04    # vload 4            # n
A4 00 06 # if_icmple +6       # if (hi <= n) goto <370:cond_true>
A7 00 08 # goto +8            # goto <371:cond_false>
# <370:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <372:cond_end>
# <371:cond_false>
10 00    # bipush 0           # false
# <372:cond_end>
A7 00 05 # goto +5            # goto <369:cond_end>
# <368:cond_false>
10 00    # bipush 0           # false
# <369:cond_end>
14 46 6B # aldc 18027         # s[18027] = ".tmp0/utils.c0: 93.12-93.46: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= hi) && (hi <= n)) [failure message on stack]
15 07    # vload 7            # hi
15 04    # vload 4            # n
A1 00 06 # if_icmplt +6       # if (hi < n) goto <376:and>
A7 00 25 # goto +37           # goto <374:else>
# <376:and>
15 00    # vload 0            # s
15 07    # vload 7            # hi
14 46 AA # aldc 18090         # s[18090] = "tokenize (.tmp0/utils.c0: 92.38-92.58)"
B8 00 44 # invokestatic 68    # string_charat__1(s, hi, "tokenize (.tmp0/utils.c0: 92.38-92.58)")
14 46 D1 # aldc 18129         # s[18129] = "tokenize (.tmp0/utils.c0: 92.26-92.59)"
B8 00 57 # invokestatic 87    # is_symbolic(string_charat__1(s, hi, "tokenize (.tmp0/utils.c0: 92.38-92.58)"), "tokenize (.tmp0/utils.c0: 92.26-92.59)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_symbolic(string_charat__1(s, hi, "tokenize (.tmp0/utils.c0: 92.38-92.58)"), "tokenize (.tmp0/utils.c0: 92.26-92.59)") == true) goto <373:then>
A7 00 0D # goto +13           # goto <374:else>
# <373:then>
15 07    # vload 7            # hi
10 01    # bipush 1           # 1
60       # iadd               # 
36 07    # vstore 7           # hi += 1;
A7 00 06 # goto +6            # goto <375:endif>
# <374:else>
A7 00 06 # goto +6            # break
# <375:endif>
A7 FF AA # goto -86           # goto <364:loop>
# <366:exit>
A7 00 6F # goto +111          # goto <363:endif>
# <362:else>
15 06    # vload 6            # c
14 46 F8 # aldc 18168         # s[18168] = "tokenize (.tmp0/utils.c0: 99.18-99.29)"
B8 00 59 # invokestatic 89    # is_alpha(c, "tokenize (.tmp0/utils.c0: 99.18-99.29)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_alpha(c, "tokenize (.tmp0/utils.c0: 99.18-99.29)") == true) goto <377:then>
A7 00 5F # goto +95           # goto <378:else>
# <377:then>
# <380:loop>
A7 00 03 # goto +3            # goto <381:body>
# <381:body>
10 00    # bipush 0           # 0
15 07    # vload 7            # hi
A4 00 06 # if_icmple +6       # if (0 <= hi) goto <383:cond_true>
A7 00 17 # goto +23           # goto <384:cond_false>
# <383:cond_true>
15 07    # vload 7            # hi
15 04    # vload 4            # n
A4 00 06 # if_icmple +6       # if (hi <= n) goto <386:cond_true>
A7 00 08 # goto +8            # goto <387:cond_false>
# <386:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <388:cond_end>
# <387:cond_false>
10 00    # bipush 0           # false
# <388:cond_end>
A7 00 05 # goto +5            # goto <385:cond_end>
# <384:cond_false>
10 00    # bipush 0           # false
# <385:cond_end>
14 47 1F # aldc 18207         # s[18207] = ".tmp0/utils.c0: 101.12-101.46: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= hi) && (hi <= n)) [failure message on stack]
15 07    # vload 7            # hi
15 04    # vload 4            # n
A1 00 06 # if_icmplt +6       # if (hi < n) goto <392:and>
A7 00 25 # goto +37           # goto <390:else>
# <392:and>
15 00    # vload 0            # s
15 07    # vload 7            # hi
14 47 60 # aldc 18272         # s[18272] = "tokenize (.tmp0/utils.c0: 100.42-100.62)"
B8 00 44 # invokestatic 68    # string_charat__1(s, hi, "tokenize (.tmp0/utils.c0: 100.42-100.62)")
14 47 89 # aldc 18313         # s[18313] = "tokenize (.tmp0/utils.c0: 100.26-100.63)"
B8 00 5A # invokestatic 90    # is_alphanumeric(string_charat__1(s, hi, "tokenize (.tmp0/utils.c0: 100.42-100.62)"), "tokenize (.tmp0/utils.c0: 100.26-100.63)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_alphanumeric(string_charat__1(s, hi, "tokenize (.tmp0/utils.c0: 100.42-100.62)"), "tokenize (.tmp0/utils.c0: 100.26-100.63)") == true) goto <389:then>
A7 00 0D # goto +13           # goto <390:else>
# <389:then>
15 07    # vload 7            # hi
10 01    # bipush 1           # 1
60       # iadd               # 
36 07    # vstore 7           # hi += 1;
A7 00 06 # goto +6            # goto <391:endif>
# <390:else>
A7 00 06 # goto +6            # break
# <391:endif>
A7 FF AA # goto -86           # goto <380:loop>
# <382:exit>
A7 00 03 # goto +3            # goto <379:endif>
# <378:else>
# <379:endif>
# <363:endif>
# <344:endif>
15 05    # vload 5            # Q
15 00    # vload 0            # s
15 03    # vload 3            # lo
15 07    # vload 7            # hi
14 47 B2 # aldc 18354         # s[18354] = "tokenize (.tmp0/utils.c0: 109.14-109.35)"
B8 00 46 # invokestatic 70    # string_sub__1(s, lo, hi, "tokenize (.tmp0/utils.c0: 109.14-109.35)")
14 47 DB # aldc 18395         # s[18395] = "tokenize (.tmp0/utils.c0: 109.7-109.36)"
B8 00 15 # invokestatic 21    # enq__1(Q, string_sub__1(s, lo, hi, "tokenize (.tmp0/utils.c0: 109.14-109.35)"), "tokenize (.tmp0/utils.c0: 109.7-109.36)")
57       # pop                # (ignore result)
15 07    # vload 7            # hi
36 03    # vstore 3           # lo = hi;
# <341:endif>
A7 00 06 # goto +6            # goto <338:endif>
# <337:else>
A7 00 06 # goto +6            # break
# <338:endif>
A7 FE 19 # goto -487          # goto <327:loop>
# <329:exit>
15 05    # vload 5            # Q
36 02    # vstore 2           # _result = Q;
15 02    # vload 2            # _result
B0       # return             # 


#<input_file>
02                # number of arguments = 2
07                # number of local variables = 7
00 8F             # code length = 143 bytes
14 48 03 # aldc 18435         # s[18435] = "input_file (.tmp0/utils.c0: 118.15-118.26)"
B8 00 14 # invokestatic 20    # queue_new__1("input_file (.tmp0/utils.c0: 118.15-118.26)")
36 03    # vstore 3           # Q = queue_new__1("input_file (.tmp0/utils.c0: 118.15-118.26)");
15 00    # vload 0            # path
14 48 2E # aldc 18478         # s[18478] = "input_file (.tmp0/utils.c0: 119.17-119.32)"
B8 00 53 # invokestatic 83    # file_read__1(path, "input_file (.tmp0/utils.c0: 119.17-119.32)")
36 04    # vstore 4           # file = file_read__1(path, "input_file (.tmp0/utils.c0: 119.17-119.32)");
15 04    # vload 4            # file
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (file == NULL) goto <393:then>
A7 00 0A # goto +10           # goto <394:else>
# <393:then>
14 48 59 # aldc 18521         # s[18521] = "Error: file does not exist"
BF       # athrow             # error "Error: file does not exist"
A7 00 03 # goto +3            # goto <395:endif>
# <394:else>
# <395:endif>
# <396:loop>
A7 00 03 # goto +3            # goto <397:body>
# <397:body>
15 04    # vload 4            # file
14 48 74 # aldc 18548         # s[18548] = "input_file (.tmp0/utils.c0: 122.11-122.25)"
B8 00 55 # invokestatic 85    # file_eof__1(file, "input_file (.tmp0/utils.c0: 122.11-122.25)")
10 01    # bipush 1           # true
9F 00 4A # if_cmpeq +74       # if (file_eof__1(file, "input_file (.tmp0/utils.c0: 122.11-122.25)") == true) goto <400:else>
A7 00 03 # goto +3            # goto <399:then>
# <399:then>
15 04    # vload 4            # file
14 48 9F # aldc 18591         # s[18591] = "input_file (.tmp0/utils.c0: 123.19-123.38)"
B8 00 56 # invokestatic 86    # file_readline__1(file, "input_file (.tmp0/utils.c0: 123.19-123.38)")
36 05    # vstore 5           # line = file_readline__1(file, "input_file (.tmp0/utils.c0: 123.19-123.38)");
15 05    # vload 5            # line
14 48 CA # aldc 18634         # s[18634] = "input_file (.tmp0/utils.c0: 124.19-124.33)"
B8 00 5C # invokestatic 92    # tokenize(line, "input_file (.tmp0/utils.c0: 124.19-124.33)")
36 06    # vstore 6           # new = tokenize(line, "input_file (.tmp0/utils.c0: 124.19-124.33)");
# <402:loop>
A7 00 03 # goto +3            # goto <403:body>
# <403:body>
15 06    # vload 6            # new
14 48 F5 # aldc 18677         # s[18677] = "input_file (.tmp0/utils.c0: 125.13-125.29)"
B8 00 12 # invokestatic 18    # queue_empty__1(new, "input_file (.tmp0/utils.c0: 125.13-125.29)")
10 01    # bipush 1           # true
9F 00 1A # if_cmpeq +26       # if (queue_empty__1(new, "input_file (.tmp0/utils.c0: 125.13-125.29)") == true) goto <406:else>
A7 00 03 # goto +3            # goto <405:then>
# <405:then>
15 03    # vload 3            # Q
15 06    # vload 6            # new
14 49 20 # aldc 18720         # s[18720] = "input_file (.tmp0/utils.c0: 125.38-125.46)"
B8 00 16 # invokestatic 22    # deq__1(new, "input_file (.tmp0/utils.c0: 125.38-125.46)")
14 49 4B # aldc 18763         # s[18763] = "input_file (.tmp0/utils.c0: 125.31-125.47)"
B8 00 15 # invokestatic 21    # enq__1(Q, deq__1(new, "input_file (.tmp0/utils.c0: 125.38-125.46)"), "input_file (.tmp0/utils.c0: 125.31-125.47)")
57       # pop                # (ignore result)
A7 00 06 # goto +6            # goto <407:endif>
# <406:else>
A7 00 06 # goto +6            # break
# <407:endif>
A7 FF D6 # goto -42           # goto <402:loop>
# <404:exit>
A7 00 06 # goto +6            # goto <401:endif>
# <400:else>
A7 00 06 # goto +6            # break
# <401:endif>
A7 FF A6 # goto -90           # goto <396:loop>
# <398:exit>
15 04    # vload 4            # file
14 49 76 # aldc 18806         # s[18806] = "input_file (.tmp0/utils.c0: 128.3-128.19)"
B8 00 54 # invokestatic 84    # file_close__1(file, "input_file (.tmp0/utils.c0: 128.3-128.19)")
57       # pop                # (ignore result)
15 03    # vload 3            # Q
36 02    # vstore 2           # _result = Q;
15 02    # vload 2            # _result
B0       # return             # 


#<is_infix_array__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 30             # code length = 48 bytes
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
15 01    # vload 1            # n
9F 00 06 # if_cmpeq +6        # if (\length(A) == n) goto <408:cond_true>
A7 00 08 # goto +8            # goto <409:cond_false>
# <408:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <410:cond_end>
# <409:cond_false>
10 00    # bipush 0           # false
# <410:cond_end>
14 49 A0 # aldc 18848         # s[18848] = ".tmp0/utils.c0: 140.6-140.31: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 49 DB # aldc 18907         # s[18907] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join(".tmp0/utils.c0: 140.6-140.31: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(A) == n) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # n
14 49 ED # aldc 18925         # s[18925] = "is_infix_array__1 (.tmp0/utils.c0: 139.1-140.37)"
B8 00 5B # invokestatic 91    # is_infix_array(A, n, "is_infix_array__1 (.tmp0/utils.c0: 139.1-140.37)")
36 03    # vstore 3           # _result = is_infix_array(A, n, "is_infix_array__1 (.tmp0/utils.c0: 139.1-140.37)");
15 03    # vload 3            # _result
B0       # return             # 


#<is_in_string>
05                # number of arguments = 5
06                # number of local variables = 6
00 7F             # code length = 127 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <414:and>
A7 00 22 # goto +34           # goto <412:cond_false>
# <414:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <411:cond_true>
A7 00 18 # goto +24           # goto <412:cond_false>
# <411:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <415:cond_true>
A7 00 08 # goto +8            # goto <416:cond_false>
# <415:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <417:cond_end>
# <416:cond_false>
10 00    # bipush 0           # false
# <417:cond_end>
A7 00 05 # goto +5            # goto <413:cond_end>
# <412:cond_false>
10 00    # bipush 0           # false
# <413:cond_end>
14 4A 1E # aldc 18974         # s[18974] = "dict.c0: 29.4-31.30: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 4A 50 # aldc 19024         # s[19024] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("dict.c0: 29.4-31.30: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 02    # vload 2            # lo
15 03    # vload 3            # hi
9F 00 06 # if_cmpeq +6        # if (lo == hi) goto <418:then>
A7 00 0D # goto +13           # goto <419:else>
# <418:then>
10 00    # bipush 0           # false
36 05    # vstore 5           # _result = false;
15 05    # vload 5            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <420:endif>
# <419:else>
# <420:endif>
15 01    # vload 1            # A
15 02    # vload 2            # lo
63       # aadds              # &A[lo]
2F       # amload             # A[lo]
15 00    # vload 0            # x
14 4A 62 # aldc 19042         # s[19042] = "is_in_string (dict.c0: 34.10-34.32)"
B8 00 47 # invokestatic 71    # string_equal__1(A[lo], x, "is_in_string (dict.c0: 34.10-34.32)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(A[lo], x, "is_in_string (dict.c0: 34.10-34.32)") == true) goto <421:cond_true>
A7 00 08 # goto +8            # goto <422:cond_false>
# <421:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <423:cond_end>
# <422:cond_false>
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
10 01    # bipush 1           # 1
60       # iadd               # (lo + 1)
15 03    # vload 3            # hi
14 4A 86 # aldc 19078         # s[19078] = "is_in_string (dict.c0: 34.36-34.61)"
B8 00 5F # invokestatic 95    # is_in_string(x, A, (lo + 1), hi, "is_in_string (dict.c0: 34.36-34.61)")
# <423:cond_end>
36 05    # vstore 5           # _result = (string_equal__1(A[lo], x, "is_in_string (dict.c0: 34.10-34.32)") || is_in_string(x, A, (lo + 1), hi, "is_in_string (dict.c0: 34.36-34.61)"));
15 05    # vload 5            # _result
B0       # return             # 


#<linsearch_string>
04                # number of arguments = 4
09                # number of local variables = 9
01 86             # code length = 390 bytes
15 02    # vload 2            # n
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
9F 00 06 # if_cmpeq +6        # if (n == \length(A)) goto <424:cond_true>
A7 00 08 # goto +8            # goto <425:cond_false>
# <424:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <426:cond_end>
# <425:cond_false>
10 00    # bipush 0           # false
# <426:cond_end>
14 4A AA # aldc 19114         # s[19114] = "dict.c0: 39.4-39.29: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 4A DC # aldc 19164         # s[19164] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("dict.c0: 39.4-39.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (n == \length(A)) [failure message on stack]
10 00    # bipush 0           # 0
36 05    # vstore 5           # i = 0;
# <427:loop>
A7 00 03 # goto +3            # goto <428:body>
# <428:body>
10 00    # bipush 0           # 0
15 05    # vload 5            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <430:cond_true>
A7 00 17 # goto +23           # goto <431:cond_false>
# <430:cond_true>
15 05    # vload 5            # i
15 02    # vload 2            # n
A4 00 06 # if_icmple +6       # if (i <= n) goto <433:cond_true>
A7 00 08 # goto +8            # goto <434:cond_false>
# <433:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <435:cond_end>
# <434:cond_false>
10 00    # bipush 0           # false
# <435:cond_end>
A7 00 05 # goto +5            # goto <432:cond_end>
# <431:cond_false>
10 00    # bipush 0           # false
# <432:cond_end>
14 4A EE # aldc 19182         # s[19182] = "dict.c0: 45.6-45.38: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= i) && (i <= n)) [failure message on stack]
15 00    # vload 0            # x
15 01    # vload 1            # A
10 00    # bipush 0           # 0
15 05    # vload 5            # i
14 4B 25 # aldc 19237         # s[19237] = "linsearch_string (dict.c0: 46.22-46.43)"
B8 00 5F # invokestatic 95    # is_in_string(x, A, 0, i, "linsearch_string (dict.c0: 46.22-46.43)")
10 01    # bipush 1           # 
82       # ixor               # !(is_in_string(x, A, 0, i, "linsearch_string (dict.c0: 46.22-46.43)"))
14 4B 4D # aldc 19277         # s[19277] = "dict.c0: 46.6-46.44: @loop_invariant annotation failed"
CF       # assert             # assert !(is_in_string(x, A, 0, i, "linsearch_string (dict.c0: 46.22-46.43)")) [failure message on stack]
15 05    # vload 5            # i
15 02    # vload 2            # n
A1 00 06 # if_icmplt +6       # if (i < n) goto <436:then>
A7 00 B3 # goto +179          # goto <437:else>
# <436:then>
15 01    # vload 1            # A
15 05    # vload 5            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 4B 84 # aldc 19332         # s[19332] = "linsearch_string (dict.c0: 48.25-48.43)"
B8 00 41 # invokestatic 65    # parse_tokens__1(A[i], "linsearch_string (dict.c0: 48.25-48.43)")
36 06    # vstore 6           # elements = parse_tokens__1(A[i], "linsearch_string (dict.c0: 48.25-48.43)");
15 01    # vload 1            # A
15 05    # vload 5            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 4B AC # aldc 19372         # s[19372] = "linsearch_string (dict.c0: 49.27-49.43)"
B8 00 3F # invokestatic 63    # num_tokens__1(A[i], "linsearch_string (dict.c0: 49.27-49.43)")
36 07    # vstore 7           # num_of_elements = num_tokens__1(A[i], "linsearch_string (dict.c0: 49.27-49.43)");
10 00    # bipush 0           # 0
36 08    # vstore 8           # j = 0;
# <439:loop>
A7 00 03 # goto +3            # goto <440:body>
# <440:body>
15 08    # vload 8            # j
15 07    # vload 7            # num_of_elements
A1 00 06 # if_icmplt +6       # if (j < num_of_elements) goto <442:then>
A7 00 76 # goto +118          # goto <443:else>
# <442:then>
15 06    # vload 6            # elements
15 08    # vload 8            # j
63       # aadds              # &elements[j]
2F       # amload             # elements[j]
15 00    # vload 0            # x
14 4B D4 # aldc 19412         # s[19412] = "linsearch_string (dict.c0: 51.11-51.39)"
B8 00 47 # invokestatic 71    # string_equal__1(elements[j], x, "linsearch_string (dict.c0: 51.11-51.39)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(elements[j], x, "linsearch_string (dict.c0: 51.11-51.39)") == true) goto <445:then>
A7 00 56 # goto +86           # goto <446:else>
# <445:then>
15 05    # vload 5            # i
36 04    # vstore 4           # _result = i;
10 FF    # bipush -1          # -1
15 04    # vload 4            # _result
9F 00 06 # if_cmpeq +6        # if (-(1) == _result) goto <451:and>
A7 00 1E # goto +30           # goto <449:cond_false>
# <451:and>
15 00    # vload 0            # x
15 01    # vload 1            # A
10 00    # bipush 0           # 0
15 02    # vload 2            # n
14 4B FC # aldc 19452         # s[19452] = "linsearch_string (dict.c0: 40.31-40.55)"
B8 00 5F # invokestatic 95    # is_in_string(x, A, 0, n, "linsearch_string (dict.c0: 40.31-40.55)")
10 01    # bipush 1           # true
9F 00 0B # if_cmpeq +11       # if (is_in_string(x, A, 0, n, "linsearch_string (dict.c0: 40.31-40.55)") == true) goto <449:cond_false>
A7 00 03 # goto +3            # goto <448:cond_true>
# <448:cond_true>
10 01    # bipush 1           # true
A7 00 23 # goto +35           # goto <450:cond_end>
# <449:cond_false>
10 00    # bipush 0           # 0
15 04    # vload 4            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <452:cond_true>
A7 00 17 # goto +23           # goto <453:cond_false>
# <452:cond_true>
15 04    # vload 4            # _result
15 02    # vload 2            # n
A1 00 06 # if_icmplt +6       # if (_result < n) goto <455:cond_true>
A7 00 08 # goto +8            # goto <456:cond_false>
# <455:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <457:cond_end>
# <456:cond_false>
10 00    # bipush 0           # false
# <457:cond_end>
A7 00 05 # goto +5            # goto <454:cond_end>
# <453:cond_false>
10 00    # bipush 0           # false
# <454:cond_end>
# <450:cond_end>
14 4C 24 # aldc 19492         # s[19492] = "dict.c0: 40.4-41.44: @ensures annotation failed"
CF       # assert             # assert (((-(1) == _result) && !(is_in_string(x, A, 0, n, "linsearch_string (dict.c0: 40.31-40.55)"))) || ((0 <= _result) && (_result < n))) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <447:endif>
# <446:else>
# <447:endif>
15 08    # vload 8            # j
10 01    # bipush 1           # 1
60       # iadd               # 
36 08    # vstore 8           # j += 1;
A7 00 06 # goto +6            # goto <444:endif>
# <443:else>
A7 00 06 # goto +6            # break
# <444:endif>
A7 FF 7D # goto -131          # goto <439:loop>
# <441:exit>
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # i += 1;
A7 00 06 # goto +6            # goto <438:endif>
# <437:else>
A7 00 06 # goto +6            # break
# <438:endif>
A7 FF 07 # goto -249          # goto <427:loop>
# <429:exit>
15 00    # vload 0            # x
15 01    # vload 1            # A
10 00    # bipush 0           # 0
15 02    # vload 2            # n
14 4C 54 # aldc 19540         # s[19540] = "linsearch_string (dict.c0: 55.14-55.35)"
B8 00 5F # invokestatic 95    # is_in_string(x, A, 0, n, "linsearch_string (dict.c0: 55.14-55.35)")
10 01    # bipush 1           # 
82       # ixor               # !(is_in_string(x, A, 0, n, "linsearch_string (dict.c0: 55.14-55.35)"))
14 4C 7C # aldc 19580         # s[19580] = "dict.c0: 55.6-55.36: @assert annotation failed"
CF       # assert             # assert !(is_in_string(x, A, 0, n, "linsearch_string (dict.c0: 55.14-55.35)")) [failure message on stack]
10 FF    # bipush -1          # -1
36 04    # vstore 4           # _result = -(1);
10 FF    # bipush -1          # -1
15 04    # vload 4            # _result
9F 00 06 # if_cmpeq +6        # if (-(1) == _result) goto <461:and>
A7 00 1E # goto +30           # goto <459:cond_false>
# <461:and>
15 00    # vload 0            # x
15 01    # vload 1            # A
10 00    # bipush 0           # 0
15 02    # vload 2            # n
14 4C AB # aldc 19627         # s[19627] = "linsearch_string (dict.c0: 40.31-40.55)"
B8 00 5F # invokestatic 95    # is_in_string(x, A, 0, n, "linsearch_string (dict.c0: 40.31-40.55)")
10 01    # bipush 1           # true
9F 00 0B # if_cmpeq +11       # if (is_in_string(x, A, 0, n, "linsearch_string (dict.c0: 40.31-40.55)") == true) goto <459:cond_false>
A7 00 03 # goto +3            # goto <458:cond_true>
# <458:cond_true>
10 01    # bipush 1           # true
A7 00 23 # goto +35           # goto <460:cond_end>
# <459:cond_false>
10 00    # bipush 0           # 0
15 04    # vload 4            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <462:cond_true>
A7 00 17 # goto +23           # goto <463:cond_false>
# <462:cond_true>
15 04    # vload 4            # _result
15 02    # vload 2            # n
A1 00 06 # if_icmplt +6       # if (_result < n) goto <465:cond_true>
A7 00 08 # goto +8            # goto <466:cond_false>
# <465:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <467:cond_end>
# <466:cond_false>
10 00    # bipush 0           # false
# <467:cond_end>
A7 00 05 # goto +5            # goto <464:cond_end>
# <463:cond_false>
10 00    # bipush 0           # false
# <464:cond_end>
# <460:cond_end>
14 4C D3 # aldc 19667         # s[19667] = "dict.c0: 40.4-41.44: @ensures annotation failed"
CF       # assert             # assert (((-(1) == _result) && !(is_in_string(x, A, 0, n, "linsearch_string (dict.c0: 40.31-40.55)"))) || ((0 <= _result) && (_result < n))) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 


#<is_dict>
02                # number of arguments = 2
03                # number of local variables = 3
00 36             # code length = 54 bytes
15 00    # vload 0            # D
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (D == NULL) goto <468:then>
A7 00 0D # goto +13           # goto <469:else>
# <468:then>
10 00    # bipush 0           # false
36 02    # vstore 2           # _result = false;
15 02    # vload 2            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <470:endif>
# <469:else>
# <470:endif>
15 00    # vload 0            # D
62 00    # aaddf 0            # &D->array
2F       # amload             # D->array
BE       # arraylength        # \length(D->array)
15 00    # vload 0            # D
62 08    # aaddf 8            # &D->len
2E       # imload             # D->len
9F 00 06 # if_cmpeq +6        # if (\length(D->array) == D->len) goto <471:cond_true>
A7 00 08 # goto +8            # goto <472:cond_false>
# <471:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <473:cond_end>
# <472:cond_false>
10 00    # bipush 0           # false
# <473:cond_end>
14 4D 03 # aldc 19715         # s[19715] = "dict.c0: 61.6-61.43: @assert annotation failed"
CF       # assert             # assert (\length(D->array) == D->len) [failure message on stack]
10 01    # bipush 1           # true
36 02    # vstore 2           # _result = true;
15 02    # vload 2            # _result
B0       # return             # 


#<tokens_not_repeated>
03                # number of arguments = 3
0C                # number of local variables = 12
01 4B             # code length = 331 bytes
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
15 01    # vload 1            # n
9F 00 06 # if_cmpeq +6        # if (\length(A) == n) goto <474:cond_true>
A7 00 08 # goto +8            # goto <475:cond_false>
# <474:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <476:cond_end>
# <475:cond_false>
10 00    # bipush 0           # false
# <476:cond_end>
14 4D 32 # aldc 19762         # s[19762] = "dict.c0: 66.4-66.27: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 4D 64 # aldc 19812         # s[19812] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("dict.c0: 66.4-66.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(A) == n) [failure message on stack]
14 4D 76 # aldc 19830         # s[19830] = "tokens_not_repeated (dict.c0: 68.22-68.33)"
B8 00 2D # invokestatic 45    # stack_new__1("tokens_not_repeated (dict.c0: 68.22-68.33)")
36 04    # vstore 4           # appeared = stack_new__1("tokens_not_repeated (dict.c0: 68.22-68.33)");
14 4D A1 # aldc 19873         # s[19873] = "tokens_not_repeated (dict.c0: 69.18-69.29)"
B8 00 2D # invokestatic 45    # stack_new__1("tokens_not_repeated (dict.c0: 69.18-69.29)")
36 05    # vstore 5           # temp = stack_new__1("tokens_not_repeated (dict.c0: 69.18-69.29)");
10 00    # bipush 0           # 0
36 06    # vstore 6           # i = 0;
# <477:loop>
A7 00 03 # goto +3            # goto <478:body>
# <478:body>
10 00    # bipush 0           # 0
15 06    # vload 6            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <480:cond_true>
A7 00 17 # goto +23           # goto <481:cond_false>
# <480:cond_true>
15 06    # vload 6            # i
15 01    # vload 1            # n
A4 00 06 # if_icmple +6       # if (i <= n) goto <483:cond_true>
A7 00 08 # goto +8            # goto <484:cond_false>
# <483:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <485:cond_end>
# <484:cond_false>
10 00    # bipush 0           # false
# <485:cond_end>
A7 00 05 # goto +5            # goto <482:cond_end>
# <481:cond_false>
10 00    # bipush 0           # false
# <482:cond_end>
14 4D CC # aldc 19916         # s[19916] = "dict.c0: 72.6-72.38: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= i) && (i <= n)) [failure message on stack]
15 06    # vload 6            # i
15 01    # vload 1            # n
A1 00 06 # if_icmplt +6       # if (i < n) goto <486:then>
A7 00 DB # goto +219          # goto <487:else>
# <486:then>
15 00    # vload 0            # A
15 06    # vload 6            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 4E 03 # aldc 19971         # s[19971] = "tokens_not_repeated (dict.c0: 74.25-74.43)"
B8 00 41 # invokestatic 65    # parse_tokens__1(A[i], "tokens_not_repeated (dict.c0: 74.25-74.43)")
36 07    # vstore 7           # elements = parse_tokens__1(A[i], "tokens_not_repeated (dict.c0: 74.25-74.43)");
15 00    # vload 0            # A
15 06    # vload 6            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 4E 2E # aldc 20014         # s[20014] = "tokens_not_repeated (dict.c0: 75.27-75.43)"
B8 00 3F # invokestatic 63    # num_tokens__1(A[i], "tokens_not_repeated (dict.c0: 75.27-75.43)")
36 08    # vstore 8           # num_of_elements = num_tokens__1(A[i], "tokens_not_repeated (dict.c0: 75.27-75.43)");
10 00    # bipush 0           # 0
36 09    # vstore 9           # j = 0;
# <489:loop>
A7 00 03 # goto +3            # goto <490:body>
# <490:body>
15 09    # vload 9            # j
15 08    # vload 8            # num_of_elements
A1 00 06 # if_icmplt +6       # if (j < num_of_elements) goto <492:then>
A7 00 9E # goto +158          # goto <493:else>
# <492:then>
15 07    # vload 7            # elements
15 09    # vload 9            # j
63       # aadds              # &elements[j]
2F       # amload             # elements[j]
36 0A    # vstore 10          # element = elements[j];
# <495:loop>
A7 00 03 # goto +3            # goto <496:body>
# <496:body>
15 04    # vload 4            # appeared
14 4E 59 # aldc 20057         # s[20057] = "tokens_not_repeated (dict.c0: 78.15-78.36)"
B8 00 2C # invokestatic 44    # stack_empty__1(appeared, "tokens_not_repeated (dict.c0: 78.15-78.36)")
10 01    # bipush 1           # true
9F 00 3A # if_cmpeq +58       # if (stack_empty__1(appeared, "tokens_not_repeated (dict.c0: 78.15-78.36)") == true) goto <499:else>
A7 00 03 # goto +3            # goto <498:then>
# <498:then>
15 04    # vload 4            # appeared
14 4E 84 # aldc 20100         # s[20100] = "tokens_not_repeated (dict.c0: 79.32-79.45)"
B8 00 2F # invokestatic 47    # pop__1(appeared, "tokens_not_repeated (dict.c0: 79.32-79.45)")
36 0B    # vstore 11          # stack_element = pop__1(appeared, "tokens_not_repeated (dict.c0: 79.32-79.45)");
15 0A    # vload 10           # element
15 0B    # vload 11           # stack_element
14 4E AF # aldc 20143         # s[20143] = "tokens_not_repeated (dict.c0: 80.13-80.49)"
B8 00 47 # invokestatic 71    # string_equal__1(element, stack_element, "tokens_not_repeated (dict.c0: 80.13-80.49)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(element, stack_element, "tokens_not_repeated (dict.c0: 80.13-80.49)") == true) goto <501:then>
A7 00 0D # goto +13           # goto <502:else>
# <501:then>
10 00    # bipush 0           # false
36 03    # vstore 3           # _result = false;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <503:endif>
# <502:else>
# <503:endif>
15 05    # vload 5            # temp
15 0B    # vload 11           # stack_element
14 4E DA # aldc 20186         # s[20186] = "tokens_not_repeated (dict.c0: 82.9-82.34)"
B8 00 2E # invokestatic 46    # push__1(temp, stack_element, "tokens_not_repeated (dict.c0: 82.9-82.34)")
57       # pop                # (ignore result)
A7 00 06 # goto +6            # goto <500:endif>
# <499:else>
A7 00 06 # goto +6            # break
# <500:endif>
A7 FF B6 # goto -74           # goto <495:loop>
# <497:exit>
15 05    # vload 5            # temp
15 0A    # vload 10           # element
14 4F 04 # aldc 20228         # s[20228] = "tokens_not_repeated (dict.c0: 84.7-84.26)"
B8 00 2E # invokestatic 46    # push__1(temp, element, "tokens_not_repeated (dict.c0: 84.7-84.26)")
57       # pop                # (ignore result)
# <504:loop>
A7 00 03 # goto +3            # goto <505:body>
# <505:body>
15 05    # vload 5            # temp
14 4F 2E # aldc 20270         # s[20270] = "tokens_not_repeated (dict.c0: 85.14-85.31)"
B8 00 2C # invokestatic 44    # stack_empty__1(temp, "tokens_not_repeated (dict.c0: 85.14-85.31)")
10 01    # bipush 1           # true
9F 00 1E # if_cmpeq +30       # if (stack_empty__1(temp, "tokens_not_repeated (dict.c0: 85.14-85.31)") == true) goto <508:else>
A7 00 03 # goto +3            # goto <507:then>
# <507:then>
15 05    # vload 5            # temp
14 4F 59 # aldc 20313         # s[20313] = "tokens_not_repeated (dict.c0: 86.31-86.40)"
B8 00 2F # invokestatic 47    # pop__1(temp, "tokens_not_repeated (dict.c0: 86.31-86.40)")
36 0B    # vstore 11          # temp_element = pop__1(temp, "tokens_not_repeated (dict.c0: 86.31-86.40)");
15 04    # vload 4            # appeared
15 0B    # vload 11           # temp_element
14 4F 84 # aldc 20356         # s[20356] = "tokens_not_repeated (dict.c0: 87.9-87.37)"
B8 00 2E # invokestatic 46    # push__1(appeared, temp_element, "tokens_not_repeated (dict.c0: 87.9-87.37)")
57       # pop                # (ignore result)
A7 00 06 # goto +6            # goto <509:endif>
# <508:else>
A7 00 06 # goto +6            # break
# <509:endif>
A7 FF D2 # goto -46           # goto <504:loop>
# <506:exit>
15 09    # vload 9            # j
10 01    # bipush 1           # 1
60       # iadd               # 
36 09    # vstore 9           # j += 1;
A7 00 06 # goto +6            # goto <494:endif>
# <493:else>
A7 00 06 # goto +6            # break
# <494:endif>
A7 FF 55 # goto -171          # goto <489:loop>
# <491:exit>
15 06    # vload 6            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 06    # vstore 6           # i += 1;
A7 00 06 # goto +6            # goto <488:endif>
# <487:else>
A7 00 06 # goto +6            # break
# <488:endif>
A7 FE F4 # goto -268          # goto <477:loop>
# <479:exit>
10 01    # bipush 1           # true
36 03    # vstore 3           # _result = true;
15 03    # vload 3            # _result
B0       # return             # 


#<dict_new>
03                # number of arguments = 3
05                # number of local variables = 5
00 A2             # code length = 162 bytes
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
15 01    # vload 1            # n
9F 00 06 # if_cmpeq +6        # if (\length(A) == n) goto <510:cond_true>
A7 00 08 # goto +8            # goto <511:cond_false>
# <510:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <512:cond_end>
# <511:cond_false>
10 00    # bipush 0           # false
# <512:cond_end>
14 4F AE # aldc 20398         # s[20398] = "dict.c0: 94.4-94.29: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 4F E0 # aldc 20448         # s[20448] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("dict.c0: 94.4-94.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(A) == n) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # n
14 4F F2 # aldc 20466         # s[20466] = "dict_new (dict.c0: 95.13-95.33)"
B8 00 5E # invokestatic 94    # is_infix_array__1(A, n, "dict_new (dict.c0: 95.13-95.33)")
14 50 12 # aldc 20498         # s[20498] = "dict.c0: 95.4-95.34: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 50 44 # aldc 20548         # s[20548] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("dict.c0: 95.4-95.34: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_infix_array__1(A, n, "dict_new (dict.c0: 95.13-95.33)") [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # n
14 50 56 # aldc 20566         # s[20566] = "dict_new (dict.c0: 99.8-99.33)"
B8 00 62 # invokestatic 98    # tokens_not_repeated(A, n, "dict_new (dict.c0: 99.8-99.33)")
10 01    # bipush 1           # true
9F 00 29 # if_cmpeq +41       # if (tokens_not_repeated(A, n, "dict_new (dict.c0: 99.8-99.33)") == true) goto <514:else>
A7 00 03 # goto +3            # goto <513:then>
# <513:then>
01       # aconst_null        # NULL
36 03    # vstore 3           # _result = NULL;
15 03    # vload 3            # _result
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (_result == NULL) goto <516:cond_true>
A7 00 08 # goto +8            # goto <517:cond_false>
# <516:cond_true>
10 01    # bipush 1           # true
A7 00 0B # goto +11           # goto <518:cond_end>
# <517:cond_false>
15 03    # vload 3            # _result
14 50 75 # aldc 20597         # s[20597] = "dict_new (dict.c0: 96.31-96.47)"
B8 00 61 # invokestatic 97    # is_dict(_result, "dict_new (dict.c0: 96.31-96.47)")
# <518:cond_end>
14 50 95 # aldc 20629         # s[20629] = "dict.c0: 96.4-96.48: @ensures annotation failed"
CF       # assert             # assert ((_result == NULL) || is_dict(_result, "dict_new (dict.c0: 96.31-96.47)")) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <515:endif>
# <514:else>
# <515:endif>
BB 10    # new 16             # alloc(dict)
36 04    # vstore 4           # D = alloc(dict);
15 04    # vload 4            # D
62 00    # aaddf 0            # &D->array
15 00    # vload 0            # A
4F       # amstore            # D->array = A;
15 04    # vload 4            # D
62 08    # aaddf 8            # &D->len
15 01    # vload 1            # n
4E       # imstore            # D->len = n;
15 04    # vload 4            # D
36 03    # vstore 3           # _result = D;
15 03    # vload 3            # _result
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (_result == NULL) goto <519:cond_true>
A7 00 08 # goto +8            # goto <520:cond_false>
# <519:cond_true>
10 01    # bipush 1           # true
A7 00 0B # goto +11           # goto <521:cond_end>
# <520:cond_false>
15 03    # vload 3            # _result
14 50 C5 # aldc 20677         # s[20677] = "dict_new (dict.c0: 96.31-96.47)"
B8 00 61 # invokestatic 97    # is_dict(_result, "dict_new (dict.c0: 96.31-96.47)")
# <521:cond_end>
14 50 E5 # aldc 20709         # s[20709] = "dict.c0: 96.4-96.48: @ensures annotation failed"
CF       # assert             # assert ((_result == NULL) || is_dict(_result, "dict_new (dict.c0: 96.31-96.47)")) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<dict_lookup>
03                # number of arguments = 3
04                # number of local variables = 4
00 43             # code length = 67 bytes
15 00    # vload 0            # D
14 51 15 # aldc 20757         # s[20757] = "dict_lookup (dict.c0: 108.13-108.23)"
B8 00 61 # invokestatic 97    # is_dict(D, "dict_lookup (dict.c0: 108.13-108.23)")
14 51 3A # aldc 20794         # s[20794] = "dict.c0: 108.4-108.24: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 51 6E # aldc 20846         # s[20846] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("dict.c0: 108.4-108.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_dict(D, "dict_lookup (dict.c0: 108.13-108.23)") [failure message on stack]
15 01    # vload 1            # oper
15 00    # vload 0            # D
62 00    # aaddf 0            # &D->array
2F       # amload             # D->array
15 00    # vload 0            # D
62 08    # aaddf 8            # &D->len
2E       # imload             # D->len
14 51 80 # aldc 20864         # s[20864] = "dict_lookup (dict.c0: 112.10-112.50)"
B8 00 60 # invokestatic 96    # linsearch_string(oper, D->array, D->len, "dict_lookup (dict.c0: 112.10-112.50)")
36 03    # vstore 3           # _result = linsearch_string(oper, D->array, D->len, "dict_lookup (dict.c0: 112.10-112.50)");
15 03    # vload 3            # _result
10 FF    # bipush -1          # -1
A2 00 06 # if_icmpge +6       # if (_result >= -(1)) goto <522:cond_true>
A7 00 08 # goto +8            # goto <523:cond_false>
# <522:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <524:cond_end>
# <523:cond_false>
10 00    # bipush 0           # false
# <524:cond_end>
14 51 A5 # aldc 20901         # s[20901] = "dict.c0: 109.4-109.26: @ensures annotation failed"
CF       # assert             # assert (_result >= -(1)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<dict_new__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 49             # code length = 73 bytes
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
15 01    # vload 1            # n
9F 00 06 # if_cmpeq +6        # if (\length(A) == n) goto <525:cond_true>
A7 00 08 # goto +8            # goto <526:cond_false>
# <525:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <527:cond_end>
# <526:cond_false>
10 00    # bipush 0           # false
# <527:cond_end>
14 51 D7 # aldc 20951         # s[20951] = "dict.c0: 132.6-132.31: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 52 0B # aldc 21003         # s[21003] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("dict.c0: 132.6-132.31: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(A) == n) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # n
14 52 1D # aldc 21021         # s[21021] = "dict_new__1 (dict.c0: 133.15-133.35)"
B8 00 5E # invokestatic 94    # is_infix_array__1(A, n, "dict_new__1 (dict.c0: 133.15-133.35)")
14 52 42 # aldc 21058         # s[21058] = "dict.c0: 133.6-133.36: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 52 76 # aldc 21110         # s[21110] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("dict.c0: 133.6-133.36: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_infix_array__1(A, n, "dict_new__1 (dict.c0: 133.15-133.35)") [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # n
14 52 88 # aldc 21128         # s[21128] = "dict_new__1 (dict.c0: 131.1-133.42)"
B8 00 63 # invokestatic 99    # dict_new(A, n, "dict_new__1 (dict.c0: 131.1-133.42)")
36 03    # vstore 3           # _result = dict_new(A, n, "dict_new__1 (dict.c0: 131.1-133.42)");
15 03    # vload 3            # _result
B0       # return             # 


#<dict_lookup__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 43             # code length = 67 bytes
15 00    # vload 0            # D
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (D != NULL) goto <528:cond_true>
A7 00 08 # goto +8            # goto <529:cond_false>
# <528:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <530:cond_end>
# <529:cond_false>
10 00    # bipush 0           # false
# <530:cond_end>
14 52 AC # aldc 21164         # s[21164] = "dict.c0: 137.6-137.25: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 52 E0 # aldc 21216         # s[21216] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("dict.c0: 137.6-137.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (D != NULL) [failure message on stack]
15 00    # vload 0            # D
15 01    # vload 1            # oper
14 52 F2 # aldc 21234         # s[21234] = "dict_lookup__1 (dict.c0: 136.1-138.34)"
B8 00 64 # invokestatic 100   # dict_lookup(D, oper, "dict_lookup__1 (dict.c0: 136.1-138.34)")
36 03    # vstore 3           # _result = dict_lookup(D, oper, "dict_lookup__1 (dict.c0: 136.1-138.34)");
15 03    # vload 3            # _result
10 FF    # bipush -1          # -1
A2 00 06 # if_icmpge +6       # if (_result >= -(1)) goto <531:cond_true>
A7 00 08 # goto +8            # goto <532:cond_false>
# <531:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <533:cond_end>
# <532:cond_false>
10 00    # bipush 0           # false
# <533:cond_end>
14 53 19 # aldc 21273         # s[21273] = "dict.c0: 138.6-138.28: @ensures annotation failed"
CF       # assert             # assert (_result >= -(1)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<is_precstack>
03                # number of arguments = 3
09                # number of local variables = 9
00 EA             # code length = 234 bytes
15 00    # vload 0            # D
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (D != NULL) goto <534:cond_true>
A7 00 16 # goto +22           # goto <535:cond_false>
# <534:cond_true>
15 01    # vload 1            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <537:cond_true>
A7 00 08 # goto +8            # goto <538:cond_false>
# <537:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <539:cond_end>
# <538:cond_false>
10 00    # bipush 0           # false
# <539:cond_end>
A7 00 05 # goto +5            # goto <536:cond_end>
# <535:cond_false>
10 00    # bipush 0           # false
# <536:cond_end>
14 53 4B # aldc 21323         # s[21323] = "parse.c0: 2.4-2.36: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 53 7C # aldc 21372         # s[21372] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("parse.c0: 2.4-2.36: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((D != NULL) && (S != NULL)) [failure message on stack]
10 01    # bipush 1           # true
36 04    # vstore 4           # is_increasing = true;
14 53 8E # aldc 21390         # s[21390] = "is_precstack (parse.c0: 5.18-5.29)"
B8 00 2D # invokestatic 45    # stack_new__1("is_precstack (parse.c0: 5.18-5.29)")
36 05    # vstore 5           # temp = stack_new__1("is_precstack (parse.c0: 5.18-5.29)");
10 FF    # bipush -1          # -1
36 06    # vstore 6           # cur_prec = -(1);
10 FF    # bipush -1          # -1
36 07    # vstore 7           # prev_prec = -(1);
# <540:loop>
A7 00 03 # goto +3            # goto <541:body>
# <541:body>
15 01    # vload 1            # S
14 53 B1 # aldc 21425         # s[21425] = "is_precstack (parse.c0: 8.11-8.25)"
B8 00 2C # invokestatic 44    # stack_empty__1(S, "is_precstack (parse.c0: 8.11-8.25)")
10 01    # bipush 1           # true
9F 00 62 # if_cmpeq +98       # if (stack_empty__1(S, "is_precstack (parse.c0: 8.11-8.25)") == true) goto <544:else>
A7 00 03 # goto +3            # goto <546:and>
# <546:and>
15 04    # vload 4            # is_increasing
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_increasing == true) goto <543:then>
A7 00 55 # goto +85           # goto <544:else>
# <543:then>
15 01    # vload 1            # S
14 53 D4 # aldc 21460         # s[21460] = "is_precstack (parse.c0: 9.18-9.24)"
B8 00 2F # invokestatic 47    # pop__1(S, "is_precstack (parse.c0: 9.18-9.24)")
36 08    # vstore 8           # tok = pop__1(S, "is_precstack (parse.c0: 9.18-9.24)");
15 06    # vload 6            # cur_prec
10 FF    # bipush -1          # -1
9F 00 06 # if_cmpeq +6        # if (cur_prec == -(1)) goto <547:then>
A7 00 12 # goto +18           # goto <548:else>
# <547:then>
15 00    # vload 0            # D
15 08    # vload 8            # tok
14 53 F7 # aldc 21495         # s[21495] = "is_precstack (parse.c0: 11.18-11.37)"
B8 00 66 # invokestatic 102   # dict_lookup__1(D, tok, "is_precstack (parse.c0: 11.18-11.37)")
36 06    # vstore 6           # cur_prec = dict_lookup__1(D, tok, "is_precstack (parse.c0: 11.18-11.37)");
A7 00 24 # goto +36           # goto <549:endif>
# <548:else>
15 06    # vload 6            # cur_prec
36 07    # vstore 7           # prev_prec = cur_prec;
15 00    # vload 0            # D
15 08    # vload 8            # tok
14 54 1C # aldc 21532         # s[21532] = "is_precstack (parse.c0: 14.18-14.37)"
B8 00 66 # invokestatic 102   # dict_lookup__1(D, tok, "is_precstack (parse.c0: 14.18-14.37)")
36 06    # vstore 6           # cur_prec = dict_lookup__1(D, tok, "is_precstack (parse.c0: 14.18-14.37)");
15 06    # vload 6            # cur_prec
15 07    # vload 7            # prev_prec
A2 00 06 # if_icmpge +6       # if (cur_prec >= prev_prec) goto <550:then>
A7 00 0A # goto +10           # goto <551:else>
# <550:then>
10 00    # bipush 0           # false
36 04    # vstore 4           # is_increasing = false;
A7 00 03 # goto +3            # goto <552:endif>
# <551:else>
# <552:endif>
# <549:endif>
15 05    # vload 5            # temp
15 08    # vload 8            # tok
14 54 41 # aldc 21569         # s[21569] = "is_precstack (parse.c0: 18.5-18.20)"
B8 00 2E # invokestatic 46    # push__1(temp, tok, "is_precstack (parse.c0: 18.5-18.20)")
57       # pop                # (ignore result)
A7 00 06 # goto +6            # goto <545:endif>
# <544:else>
A7 00 06 # goto +6            # break
# <545:endif>
A7 FF 8E # goto -114          # goto <540:loop>
# <542:exit>
# <553:loop>
A7 00 03 # goto +3            # goto <554:body>
# <554:body>
15 05    # vload 5            # temp
14 54 65 # aldc 21605         # s[21605] = "is_precstack (parse.c0: 20.11-20.28)"
B8 00 2C # invokestatic 44    # stack_empty__1(temp, "is_precstack (parse.c0: 20.11-20.28)")
10 01    # bipush 1           # true
9F 00 1A # if_cmpeq +26       # if (stack_empty__1(temp, "is_precstack (parse.c0: 20.11-20.28)") == true) goto <557:else>
A7 00 03 # goto +3            # goto <556:then>
# <556:then>
15 01    # vload 1            # S
15 05    # vload 5            # temp
14 54 8A # aldc 21642         # s[21642] = "is_precstack (parse.c0: 21.13-21.22)"
B8 00 2F # invokestatic 47    # pop__1(temp, "is_precstack (parse.c0: 21.13-21.22)")
14 54 AF # aldc 21679         # s[21679] = "is_precstack (parse.c0: 21.5-21.23)"
B8 00 2E # invokestatic 46    # push__1(S, pop__1(temp, "is_precstack (parse.c0: 21.13-21.22)"), "is_precstack (parse.c0: 21.5-21.23)")
57       # pop                # (ignore result)
A7 00 06 # goto +6            # goto <558:endif>
# <557:else>
A7 00 06 # goto +6            # break
# <558:endif>
A7 FF D6 # goto -42           # goto <553:loop>
# <555:exit>
15 04    # vload 4            # is_increasing
36 03    # vstore 3           # _result = is_increasing;
15 03    # vload 3            # _result
B0       # return             # 


#<parse>
03                # number of arguments = 3
0B                # number of local variables = 11
02 E1             # code length = 737 bytes
15 00    # vload 0            # D
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (D != NULL) goto <559:cond_true>
A7 00 16 # goto +22           # goto <560:cond_false>
# <559:cond_true>
15 01    # vload 1            # input
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (input != NULL) goto <562:cond_true>
A7 00 08 # goto +8            # goto <563:cond_false>
# <562:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <564:cond_end>
# <563:cond_false>
10 00    # bipush 0           # false
# <564:cond_end>
A7 00 05 # goto +5            # goto <561:cond_end>
# <560:cond_false>
10 00    # bipush 0           # false
# <561:cond_end>
14 54 D3 # aldc 21715         # s[21715] = "parse.c0: 28.4-28.40: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 55 06 # aldc 21766         # s[21766] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("parse.c0: 28.4-28.40: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((D != NULL) && (input != NULL)) [failure message on stack]
15 01    # vload 1            # input
14 55 18 # aldc 21784         # s[21784] = "parse (parse.c0: 32.7-32.25)"
B8 00 12 # invokestatic 18    # queue_empty__1(input, "parse (parse.c0: 32.7-32.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (queue_empty__1(input, "parse (parse.c0: 32.7-32.25)") == true) goto <565:then>
A7 00 26 # goto +38           # goto <566:else>
# <565:then>
01       # aconst_null        # NULL
36 03    # vstore 3           # _result = NULL;
15 03    # vload 3            # _result
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (_result == NULL) goto <568:cond_true>
A7 00 08 # goto +8            # goto <569:cond_false>
# <568:cond_true>
10 01    # bipush 1           # true
A7 00 0B # goto +11           # goto <570:cond_end>
# <569:cond_false>
15 01    # vload 1            # input
14 55 35 # aldc 21813         # s[21813] = "parse (parse.c0: 29.31-29.49)"
B8 00 12 # invokestatic 18    # queue_empty__1(input, "parse (parse.c0: 29.31-29.49)")
# <570:cond_end>
14 55 53 # aldc 21843         # s[21843] = "parse.c0: 29.4-29.50: @ensures annotation failed"
CF       # assert             # assert ((_result == NULL) || queue_empty__1(input, "parse (parse.c0: 29.31-29.49)")) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <567:endif>
# <566:else>
# <567:endif>
14 55 84 # aldc 21892         # s[21892] = "parse (parse.c0: 34.26-34.37)"
B8 00 14 # invokestatic 20    # queue_new__1("parse (parse.c0: 34.26-34.37)")
36 04    # vstore 4           # result_queue = queue_new__1("parse (parse.c0: 34.26-34.37)");
14 55 A2 # aldc 21922         # s[21922] = "parse (parse.c0: 35.22-35.33)"
B8 00 2D # invokestatic 45    # stack_new__1("parse (parse.c0: 35.22-35.33)")
36 05    # vstore 5           # operator = stack_new__1("parse (parse.c0: 35.22-35.33)");
10 00    # bipush 0           # false
36 06    # vstore 6           # operator_phase = false;
# <571:loop>
A7 00 03 # goto +3            # goto <572:body>
# <572:body>
15 01    # vload 1            # input
14 55 C0 # aldc 21952         # s[21952] = "parse (parse.c0: 38.11-38.29)"
B8 00 12 # invokestatic 18    # queue_empty__1(input, "parse (parse.c0: 38.11-38.29)")
10 01    # bipush 1           # true
9F 02 0C # if_cmpeq +524      # if (queue_empty__1(input, "parse (parse.c0: 38.11-38.29)") == true) goto <575:else>
A7 00 03 # goto +3            # goto <574:then>
# <574:then>
15 01    # vload 1            # input
14 55 DE # aldc 21982         # s[21982] = "parse (parse.c0: 39.18-39.28)"
B8 00 16 # invokestatic 22    # deq__1(input, "parse (parse.c0: 39.18-39.28)")
36 07    # vstore 7           # tok = deq__1(input, "parse (parse.c0: 39.18-39.28)");
15 01    # vload 1            # input
14 55 FC # aldc 22012         # s[22012] = "parse (parse.c0: 41.9-41.27)"
B8 00 12 # invokestatic 18    # queue_empty__1(input, "parse (parse.c0: 41.9-41.27)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (queue_empty__1(input, "parse (parse.c0: 41.9-41.27)") == true) goto <577:then>
A7 00 3A # goto +58           # goto <578:else>
# <577:then>
15 07    # vload 7            # tok
10 0A    # bipush 10          # 10
14 56 19 # aldc 22041         # s[22041] = "parse (parse.c0: 42.11-42.29)"
B8 00 3E # invokestatic 62    # parse_int__1(tok, 10, "parse (parse.c0: 42.11-42.29)")
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (parse_int__1(tok, 10, "parse (parse.c0: 42.11-42.29)") == NULL) goto <580:then>
A7 00 26 # goto +38           # goto <581:else>
# <580:then>
01       # aconst_null        # NULL
36 03    # vstore 3           # _result = NULL;
15 03    # vload 3            # _result
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (_result == NULL) goto <583:cond_true>
A7 00 08 # goto +8            # goto <584:cond_false>
# <583:cond_true>
10 01    # bipush 1           # true
A7 00 0B # goto +11           # goto <585:cond_end>
# <584:cond_false>
15 01    # vload 1            # input
14 56 37 # aldc 22071         # s[22071] = "parse (parse.c0: 29.31-29.49)"
B8 00 12 # invokestatic 18    # queue_empty__1(input, "parse (parse.c0: 29.31-29.49)")
# <585:cond_end>
14 56 55 # aldc 22101         # s[22101] = "parse.c0: 29.4-29.50: @ensures annotation failed"
CF       # assert             # assert ((_result == NULL) || queue_empty__1(input, "parse (parse.c0: 29.31-29.49)")) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <582:endif>
# <581:else>
# <582:endif>
A7 00 03 # goto +3            # goto <579:endif>
# <578:else>
# <579:endif>
15 06    # vload 6            # operator_phase
10 01    # bipush 1           # true
9F 00 4C # if_cmpeq +76       # if (operator_phase == true) goto <587:else>
A7 00 03 # goto +3            # goto <586:then>
# <586:then>
15 07    # vload 7            # tok
10 0A    # bipush 10          # 10
14 56 86 # aldc 22150         # s[22150] = "parse (parse.c0: 47.11-47.29)"
B8 00 3E # invokestatic 62    # parse_int__1(tok, 10, "parse (parse.c0: 47.11-47.29)")
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (parse_int__1(tok, 10, "parse (parse.c0: 47.11-47.29)") == NULL) goto <589:then>
A7 00 26 # goto +38           # goto <590:else>
# <589:then>
01       # aconst_null        # NULL
36 03    # vstore 3           # _result = NULL;
15 03    # vload 3            # _result
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (_result == NULL) goto <592:cond_true>
A7 00 08 # goto +8            # goto <593:cond_false>
# <592:cond_true>
10 01    # bipush 1           # true
A7 00 0B # goto +11           # goto <594:cond_end>
# <593:cond_false>
15 01    # vload 1            # input
14 56 A4 # aldc 22180         # s[22180] = "parse (parse.c0: 29.31-29.49)"
B8 00 12 # invokestatic 18    # queue_empty__1(input, "parse (parse.c0: 29.31-29.49)")
# <594:cond_end>
14 56 C2 # aldc 22210         # s[22210] = "parse.c0: 29.4-29.50: @ensures annotation failed"
CF       # assert             # assert ((_result == NULL) || queue_empty__1(input, "parse (parse.c0: 29.31-29.49)")) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <591:endif>
# <590:else>
# <591:endif>
15 04    # vload 4            # result_queue
15 07    # vload 7            # tok
14 56 F3 # aldc 22259         # s[22259] = "parse (parse.c0: 51.7-51.29)"
B8 00 15 # invokestatic 21    # enq__1(result_queue, tok, "parse (parse.c0: 51.7-51.29)")
57       # pop                # (ignore result)
10 01    # bipush 1           # true
36 06    # vstore 6           # operator_phase = true;
A7 01 65 # goto +357          # goto <588:endif>
# <587:else>
15 07    # vload 7            # tok
10 0A    # bipush 10          # 10
14 57 10 # aldc 22288         # s[22288] = "parse (parse.c0: 55.11-55.29)"
B8 00 3E # invokestatic 62    # parse_int__1(tok, 10, "parse (parse.c0: 55.11-55.29)")
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (parse_int__1(tok, 10, "parse (parse.c0: 55.11-55.29)") != NULL) goto <595:then>
A7 00 26 # goto +38           # goto <596:else>
# <595:then>
01       # aconst_null        # NULL
36 03    # vstore 3           # _result = NULL;
15 03    # vload 3            # _result
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (_result == NULL) goto <598:cond_true>
A7 00 08 # goto +8            # goto <599:cond_false>
# <598:cond_true>
10 01    # bipush 1           # true
A7 00 0B # goto +11           # goto <600:cond_end>
# <599:cond_false>
15 01    # vload 1            # input
14 57 2E # aldc 22318         # s[22318] = "parse (parse.c0: 29.31-29.49)"
B8 00 12 # invokestatic 18    # queue_empty__1(input, "parse (parse.c0: 29.31-29.49)")
# <600:cond_end>
14 57 4C # aldc 22348         # s[22348] = "parse.c0: 29.4-29.50: @ensures annotation failed"
CF       # assert             # assert ((_result == NULL) || queue_empty__1(input, "parse (parse.c0: 29.31-29.49)")) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <597:endif>
# <596:else>
# <597:endif>
15 00    # vload 0            # D
15 07    # vload 7            # tok
14 57 7D # aldc 22397         # s[22397] = "parse (parse.c0: 60.22-60.41)"
B8 00 66 # invokestatic 102   # dict_lookup__1(D, tok, "parse (parse.c0: 60.22-60.41)")
36 08    # vstore 8           # cur_prec = dict_lookup__1(D, tok, "parse (parse.c0: 60.22-60.41)");
15 08    # vload 8            # cur_prec
10 FF    # bipush -1          # -1
9F 00 06 # if_cmpeq +6        # if (cur_prec == -(1)) goto <601:then>
A7 00 26 # goto +38           # goto <602:else>
# <601:then>
01       # aconst_null        # NULL
36 03    # vstore 3           # _result = NULL;
15 03    # vload 3            # _result
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (_result == NULL) goto <604:cond_true>
A7 00 08 # goto +8            # goto <605:cond_false>
# <604:cond_true>
10 01    # bipush 1           # true
A7 00 0B # goto +11           # goto <606:cond_end>
# <605:cond_false>
15 01    # vload 1            # input
14 57 9B # aldc 22427         # s[22427] = "parse (parse.c0: 29.31-29.49)"
B8 00 12 # invokestatic 18    # queue_empty__1(input, "parse (parse.c0: 29.31-29.49)")
# <606:cond_end>
14 57 B9 # aldc 22457         # s[22457] = "parse.c0: 29.4-29.50: @ensures annotation failed"
CF       # assert             # assert ((_result == NULL) || queue_empty__1(input, "parse (parse.c0: 29.31-29.49)")) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <603:endif>
# <602:else>
# <603:endif>
15 05    # vload 5            # operator
14 57 EA # aldc 22506         # s[22506] = "parse (parse.c0: 62.11-62.32)"
B8 00 2C # invokestatic 44    # stack_empty__1(operator, "parse (parse.c0: 62.11-62.32)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(operator, "parse (parse.c0: 62.11-62.32)") == true) goto <607:then>
A7 00 15 # goto +21           # goto <608:else>
# <607:then>
15 05    # vload 5            # operator
15 07    # vload 7            # tok
14 58 08 # aldc 22536         # s[22536] = "parse (parse.c0: 63.9-63.28)"
B8 00 2E # invokestatic 46    # push__1(operator, tok, "parse (parse.c0: 63.9-63.28)")
57       # pop                # (ignore result)
10 00    # bipush 0           # false
36 06    # vstore 6           # operator_phase = false;
A7 00 D6 # goto +214          # goto <609:endif>
# <608:else>
15 05    # vload 5            # operator
14 58 25 # aldc 22565         # s[22565] = "parse (parse.c0: 68.28-68.41)"
B8 00 2F # invokestatic 47    # pop__1(operator, "parse (parse.c0: 68.28-68.41)")
36 09    # vstore 9           # temp_oper = pop__1(operator, "parse (parse.c0: 68.28-68.41)");
15 00    # vload 0            # D
15 09    # vload 9            # temp_oper
14 58 43 # aldc 22595         # s[22595] = "parse (parse.c0: 69.30-69.55)"
B8 00 66 # invokestatic 102   # dict_lookup__1(D, temp_oper, "parse (parse.c0: 69.30-69.55)")
36 0A    # vstore 10          # temp_oper_prec = dict_lookup__1(D, temp_oper, "parse (parse.c0: 69.30-69.55)");
15 0A    # vload 10           # temp_oper_prec
15 08    # vload 8            # cur_prec
A1 00 06 # if_icmplt +6       # if (temp_oper_prec < cur_prec) goto <610:then>
A7 00 20 # goto +32           # goto <611:else>
# <610:then>
15 05    # vload 5            # operator
15 09    # vload 9            # temp_oper
14 58 61 # aldc 22625         # s[22625] = "parse (parse.c0: 73.11-73.36)"
B8 00 2E # invokestatic 46    # push__1(operator, temp_oper, "parse (parse.c0: 73.11-73.36)")
57       # pop                # (ignore result)
15 05    # vload 5            # operator
15 07    # vload 7            # tok
14 58 7F # aldc 22655         # s[22655] = "parse (parse.c0: 74.11-74.30)"
B8 00 2E # invokestatic 46    # push__1(operator, tok, "parse (parse.c0: 74.11-74.30)")
57       # pop                # (ignore result)
10 00    # bipush 0           # false
36 06    # vstore 6           # operator_phase = false;
A7 00 99 # goto +153          # goto <612:endif>
# <611:else>
15 05    # vload 5            # operator
15 09    # vload 9            # temp_oper
14 58 9D # aldc 22685         # s[22685] = "parse (parse.c0: 78.11-78.36)"
B8 00 2E # invokestatic 46    # push__1(operator, temp_oper, "parse (parse.c0: 78.11-78.36)")
57       # pop                # (ignore result)
# <613:loop>
A7 00 03 # goto +3            # goto <614:body>
# <614:body>
15 06    # vload 6            # operator_phase
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (operator_phase == true) goto <616:then>
A7 00 7B # goto +123          # goto <617:else>
# <616:then>
15 05    # vload 5            # operator
14 58 BB # aldc 22715         # s[22715] = "parse (parse.c0: 82.25-82.38)"
B8 00 2F # invokestatic 47    # pop__1(operator, "parse (parse.c0: 82.25-82.38)")
36 09    # vstore 9           # temp_oper = pop__1(operator, "parse (parse.c0: 82.25-82.38)");
15 00    # vload 0            # D
15 09    # vload 9            # temp_oper
14 58 D9 # aldc 22745         # s[22745] = "parse (parse.c0: 83.30-83.55)"
B8 00 66 # invokestatic 102   # dict_lookup__1(D, temp_oper, "parse (parse.c0: 83.30-83.55)")
36 0A    # vstore 10          # temp_oper_prec = dict_lookup__1(D, temp_oper, "parse (parse.c0: 83.30-83.55)");
15 0A    # vload 10           # temp_oper_prec
15 08    # vload 8            # cur_prec
A1 00 06 # if_icmplt +6       # if (temp_oper_prec < cur_prec) goto <619:then>
A7 00 20 # goto +32           # goto <620:else>
# <619:then>
15 05    # vload 5            # operator
15 09    # vload 9            # temp_oper
14 58 F7 # aldc 22775         # s[22775] = "parse (parse.c0: 90.15-90.40)"
B8 00 2E # invokestatic 46    # push__1(operator, temp_oper, "parse (parse.c0: 90.15-90.40)")
57       # pop                # (ignore result)
15 05    # vload 5            # operator
15 07    # vload 7            # tok
14 59 15 # aldc 22805         # s[22805] = "parse (parse.c0: 91.15-91.34)"
B8 00 2E # invokestatic 46    # push__1(operator, tok, "parse (parse.c0: 91.15-91.34)")
57       # pop                # (ignore result)
10 00    # bipush 0           # false
36 06    # vstore 6           # operator_phase = false;
A7 00 3B # goto +59           # goto <621:endif>
# <620:else>
15 05    # vload 5            # operator
14 59 33 # aldc 22835         # s[22835] = "parse (parse.c0: 94.22-94.43)"
B8 00 2C # invokestatic 44    # stack_empty__1(operator, "parse (parse.c0: 94.22-94.43)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(operator, "parse (parse.c0: 94.22-94.43)") == true) goto <622:then>
A7 00 20 # goto +32           # goto <623:else>
# <622:then>
15 04    # vload 4            # result_queue
15 09    # vload 9            # temp_oper
14 59 51 # aldc 22865         # s[22865] = "parse (parse.c0: 95.15-95.43)"
B8 00 15 # invokestatic 21    # enq__1(result_queue, temp_oper, "parse (parse.c0: 95.15-95.43)")
57       # pop                # (ignore result)
15 05    # vload 5            # operator
15 07    # vload 7            # tok
14 59 6F # aldc 22895         # s[22895] = "parse (parse.c0: 96.15-96.34)"
B8 00 2E # invokestatic 46    # push__1(operator, tok, "parse (parse.c0: 96.15-96.34)")
57       # pop                # (ignore result)
10 00    # bipush 0           # false
36 06    # vstore 6           # operator_phase = false;
A7 00 0E # goto +14           # goto <624:endif>
# <623:else>
15 04    # vload 4            # result_queue
15 09    # vload 9            # temp_oper
14 59 8D # aldc 22925         # s[22925] = "parse (parse.c0: 100.15-100.43)"
B8 00 15 # invokestatic 21    # enq__1(result_queue, temp_oper, "parse (parse.c0: 100.15-100.43)")
57       # pop                # (ignore result)
# <624:endif>
# <621:endif>
A7 00 06 # goto +6            # goto <618:endif>
# <617:else>
A7 00 06 # goto +6            # break
# <618:endif>
A7 FF 78 # goto -136          # goto <613:loop>
# <615:exit>
# <612:endif>
# <609:endif>
# <588:endif>
A7 00 06 # goto +6            # goto <576:endif>
# <575:else>
A7 00 06 # goto +6            # break
# <576:endif>
A7 FD E4 # goto -540          # goto <571:loop>
# <573:exit>
# <625:loop>
A7 00 03 # goto +3            # goto <626:body>
# <626:body>
15 05    # vload 5            # operator
14 59 AD # aldc 22957         # s[22957] = "parse (parse.c0: 108.11-108.32)"
B8 00 2C # invokestatic 44    # stack_empty__1(operator, "parse (parse.c0: 108.11-108.32)")
10 01    # bipush 1           # true
9F 00 1A # if_cmpeq +26       # if (stack_empty__1(operator, "parse (parse.c0: 108.11-108.32)") == true) goto <629:else>
A7 00 03 # goto +3            # goto <628:then>
# <628:then>
15 04    # vload 4            # result_queue
15 05    # vload 5            # operator
14 59 CD # aldc 22989         # s[22989] = "parse (parse.c0: 109.23-109.36)"
B8 00 2F # invokestatic 47    # pop__1(operator, "parse (parse.c0: 109.23-109.36)")
14 59 ED # aldc 23021         # s[23021] = "parse (parse.c0: 109.5-109.37)"
B8 00 15 # invokestatic 21    # enq__1(result_queue, pop__1(operator, "parse (parse.c0: 109.23-109.36)"), "parse (parse.c0: 109.5-109.37)")
57       # pop                # (ignore result)
A7 00 06 # goto +6            # goto <630:endif>
# <629:else>
A7 00 06 # goto +6            # break
# <630:endif>
A7 FF D6 # goto -42           # goto <625:loop>
# <627:exit>
15 04    # vload 4            # result_queue
36 03    # vstore 3           # _result = result_queue;
15 03    # vload 3            # _result
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (_result == NULL) goto <631:cond_true>
A7 00 08 # goto +8            # goto <632:cond_false>
# <631:cond_true>
10 01    # bipush 1           # true
A7 00 0B # goto +11           # goto <633:cond_end>
# <632:cond_false>
15 01    # vload 1            # input
14 5A 0C # aldc 23052         # s[23052] = "parse (parse.c0: 29.31-29.49)"
B8 00 12 # invokestatic 18    # queue_empty__1(input, "parse (parse.c0: 29.31-29.49)")
# <633:cond_end>
14 5A 2A # aldc 23082         # s[23082] = "parse.c0: 29.4-29.50: @ensures annotation failed"
CF       # assert             # assert ((_result == NULL) || queue_empty__1(input, "parse (parse.c0: 29.31-29.49)")) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 

00 22             # native count
# native pool
00 01 00 06       # print
00 01 00 0A       # println
00 01 00 09       # printint
00 01 00 07       # printbool
00 01 00 08       # printchar
00 00 00 05       # flush
00 00 00 04       # eof
00 02 00 64       # string_join
00 00 00 0B       # readline
00 01 00 57       # parse_bool
00 02 00 58       # parse_int
00 01 00 56       # num_tokens
00 02 00 55       # int_tokens
00 01 00 5A       # parse_tokens
00 02 00 59       # parse_ints
00 01 00 65       # string_length
00 02 00 5D       # string_charat
00 03 00 66       # string_sub
00 02 00 5F       # string_equal
00 02 00 5E       # string_compare
00 01 00 63       # string_fromint
00 01 00 61       # string_frombool
00 01 00 62       # string_fromchar
00 01 00 69       # string_tolower
00 02 00 67       # string_terminated
00 01 00 68       # string_to_chararray
00 01 00 60       # string_from_chararray
00 01 00 5C       # char_ord
00 01 00 5B       # char_chr
00 01 00 3F       # file_closed
00 01 00 41       # file_read
00 01 00 3E       # file_close
00 01 00 40       # file_eof
00 01 00 42       # file_readline


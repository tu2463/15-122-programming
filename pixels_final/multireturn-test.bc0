C0 C0 FF EE       # magic number
00 17             # version 11, arch = 1 (64 bits)

00 2D             # int pool count
# int pool
7F FF FF FF
80 00 00 00
7F FF FF FF
80 00 00 00
00 00 01 00
00 00 01 00
00 00 01 00
00 00 01 00
00 00 00 FF
00 00 00 FF
00 00 00 EE
00 00 00 FF
00 00 00 FF
00 00 00 FF
00 00 00 FF
00 00 00 EE
00 00 00 FF
00 00 00 DD
00 00 00 DD
00 00 00 CC
00 00 00 FF
00 00 00 CC
00 00 00 DD
00 00 00 EE
00 00 00 EE
00 00 00 FF
00 00 00 DD
00 00 00 DD
00 00 00 CC
00 00 00 BB
00 00 01 00
00 00 00 CC
00 00 00 EE
00 00 00 FF
00 00 00 99
00 00 00 9E
00 00 00 A4
00 00 00 FF
00 00 00 FF
00 00 01 00
00 00 00 EE
00 00 00 FF
00 00 00 99
00 00 00 9E
00 00 00 A4

26 38             # string pool total size
# string pool
69 6E 74 5F 73 69 7A 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 38 2E 31 2D 39 2E 33 33 29 00  # "int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 39 2E 36 2D 39 2E 32 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 9.6-9.27: @ensures annotation failed"
69 6E 74 5F 6D 61 78 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 30 2E 31 2D 31 31 2E 34 32 29 00  # "int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 31 2E 36 2D 31 31 2E 33 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 11.6-11.36: @ensures annotation failed"
69 6E 74 5F 6D 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 32 2E 31 2D 31 33 2E 34 33 29 00  # "int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 33 2E 36 2D 31 33 2E 33 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 13.6-13.37: @ensures annotation failed"
61 62 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 37 2E 31 39 2D 31 37 2E 32 38 29 00  # "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 37 2E 36 2D 31 37 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.h0: 17.6-17.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
61 62 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 36 2E 31 2D 31 39 2E 34 38 29 00  # "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 38 2E 36 2D 31 38 2E 32 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 18.6-18.27: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 39 2E 36 2D 31 39 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 19.6-19.42: @ensures annotation failed"
6D 61 78 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 32 2E 31 2D 32 34 2E 34 39 29 00  # "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 33 2E 36 2D 32 33 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 23.6-23.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 34 2E 36 2D 32 34 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 24.6-24.43: @ensures annotation failed"
6D 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 37 2E 31 2D 32 39 2E 34 39 29 00  # "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 38 2E 36 2D 32 38 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 28.6-28.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 39 2E 36 2D 32 39 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 29.6-29.43: @ensures annotation failed"
73 74 72 69 6E 67 5F 63 68 61 72 61 74 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 31 39 2E 33 33 2D 31 39 2E 34 39 29 00  # "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 31 39 2E 36 2D 31 39 2E 35 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 19.6-19.50: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 6A 6F 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 33 2E 31 34 2D 32 33 2E 33 36 29 00  # "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)"
73 74 72 69 6E 67 5F 6A 6F 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 34 2E 31 39 2D 32 34 2E 33 35 29 00  # "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)"
73 74 72 69 6E 67 5F 6A 6F 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 34 2E 33 38 2D 32 34 2E 35 34 29 00  # "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 33 2E 36 2D 32 34 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 23.6-24.55: @ensures annotation failed"
73 74 72 69 6E 67 5F 73 75 62 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 31 2E 35 32 2D 33 31 2E 36 38 29 00  # "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 31 2E 36 2D 33 31 2E 36 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 31.6-31.69: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 73 75 62 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 32 2E 31 34 2D 33 32 2E 33 36 29 00  # "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 32 2E 36 2D 33 32 2E 35 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 32.6-32.52: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 37 2E 36 2D 33 37 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 37.6-37.44: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 33 2E 36 2D 34 33 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 43.6-43.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 66 72 6F 6D 63 68 61 72 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 34 2E 31 34 2D 34 34 2E 33 36 29 00  # "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 34 2E 36 2D 34 34 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 44.6-44.42: @ensures annotation failed"
73 74 72 69 6E 67 5F 66 72 6F 6D 63 68 61 72 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 35 2E 31 34 2D 34 35 2E 33 39 29 00  # "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 35 2E 36 2D 34 35 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 45.6-45.45: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 32 2E 36 2D 35 32 2E 34 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 52.6-52.41: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 74 6F 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 36 2E 33 34 2D 35 36 2E 35 30 29 00  # "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 36 2E 36 2D 35 36 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 56.6-56.55: @ensures annotation failed"
73 74 72 69 6E 67 5F 74 6F 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 37 2E 34 31 2D 35 37 2E 35 37 29 00  # "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)"
73 74 72 69 6E 67 5F 74 6F 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 37 2E 31 34 2D 35 37 2E 36 32 29 00  # "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 37 2E 36 2D 35 37 2E 36 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 57.6-57.63: @ensures annotation failed"
73 74 72 69 6E 67 5F 66 72 6F 6D 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 32 2E 31 35 2D 36 32 2E 34 37 29 00  # "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 32 2E 36 2D 36 32 2E 34 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 62.6-62.48: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 66 72 6F 6D 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 33 2E 31 34 2D 36 33 2E 33 36 29 00  # "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 33 2E 36 2D 36 33 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 63.6-63.55: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 37 2E 36 2D 36 37 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 67.6-67.45: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 39 2E 36 2D 36 39 2E 33 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 69.6-69.34: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 31 33 2E 34 2D 31 33 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 13.4-13.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 31 34 2E 34 2D 31 34 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 14.4-14.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 31 2E 34 2D 32 31 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 21.4-21.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 32 2E 34 2D 32 32 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 22.4-22.41: @ensures annotation failed"
61 62 73 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 39 2E 31 37 2D 32 39 2E 32 36 29 00  # "abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 39 2E 34 2D 32 39 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.c0: 29.4-29.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 33 30 2E 34 2D 33 30 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 30.4-30.25: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 33 37 2E 34 2D 33 37 2E 33 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.c0: 37.4-37.30: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 30 2E 32 31 2D 34 30 2E 33 34 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 30 2E 31 32 2D 34 30 2E 33 39 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 32 2E 32 31 2D 34 32 2E 33 34 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 32 2E 31 32 2D 34 32 2E 34 34 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 35 31 2E 31 38 2D 35 31 2E 32 38 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 35 35 2E 38 2D 35 35 2E 34 35 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 55.8-55.45: @loop_invariant annotation failed"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 35 37 2E 32 33 2D 35 37 2E 34 33 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 36 30 2E 31 30 2D 36 30 2E 33 34 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 39 2E 31 32 2D 34 39 2E 33 34 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 39 2E 34 30 2D 34 39 2E 35 30 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 39 2E 34 2D 34 39 2E 35 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 49.4-49.51: @ensures annotation failed"
72 65 61 64 6C 69 6E 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 63 6F 6E 69 6F 2E 68 30 3A 20 31 34 2E 31 36 2D 31 34 2E 32 31 29 00  # "readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 63 6F 6E 69 6F 2E 68 30 3A 20 31 34 2E 36 2D 31 34 2E 32 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/conio.h0: 14.6-14.22: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 31 30 2E 34 2D 31 30 2E 33 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # ".tmp0/pixel-array.c0: 10.4-10.34: @ensures annotation failed"
2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 32 31 2E 34 2D 32 31 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/pixel-array.c0: 21.4-21.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 32 38 2E 34 2D 32 38 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/pixel-array.c0: 28.4-28.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 33 35 2E 34 2D 33 35 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/pixel-array.c0: 35.4-35.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 34 32 2E 34 2D 34 32 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # ".tmp0/pixel-array.c0: 42.4-42.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
00  # ""
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 34 2E 33 2D 35 34 2E 35 36 29 00  # "pixel_print (.tmp0/pixel-array.c0: 54.3-54.56)"
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 34 2E 33 35 2D 35 34 2E 34 37 29 00  # "pixel_print (.tmp0/pixel-array.c0: 54.35-54.47)"
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 34 2E 32 37 2D 35 34 2E 34 38 29 00  # "pixel_print (.tmp0/pixel-array.c0: 54.27-54.48)"
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 34 2E 31 36 2D 35 34 2E 35 35 29 00  # "pixel_print (.tmp0/pixel-array.c0: 54.16-54.55)"
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 34 2E 33 2D 35 34 2E 35 36 29 00  # "pixel_print (.tmp0/pixel-array.c0: 54.3-54.56)"
00  # ""
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 34 2E 33 2D 35 34 2E 35 36 29 00  # "pixel_print (.tmp0/pixel-array.c0: 54.3-54.56)"
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 34 2E 35 38 2D 35 34 2E 36 35 29 00  # "pixel_print (.tmp0/pixel-array.c0: 54.58-54.65)"
00  # ""
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 35 2E 33 2D 35 35 2E 35 36 29 00  # "pixel_print (.tmp0/pixel-array.c0: 55.3-55.56)"
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 35 2E 33 35 2D 35 35 2E 34 35 29 00  # "pixel_print (.tmp0/pixel-array.c0: 55.35-55.45)"
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 35 2E 32 37 2D 35 35 2E 34 36 29 00  # "pixel_print (.tmp0/pixel-array.c0: 55.27-55.46)"
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 35 2E 31 36 2D 35 35 2E 35 35 29 00  # "pixel_print (.tmp0/pixel-array.c0: 55.16-55.55)"
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 35 2E 33 2D 35 35 2E 35 36 29 00  # "pixel_print (.tmp0/pixel-array.c0: 55.3-55.56)"
00  # ""
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 35 2E 33 2D 35 35 2E 35 36 29 00  # "pixel_print (.tmp0/pixel-array.c0: 55.3-55.56)"
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 35 2E 35 38 2D 35 35 2E 36 35 29 00  # "pixel_print (.tmp0/pixel-array.c0: 55.58-55.65)"
00  # ""
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 36 2E 33 2D 35 36 2E 35 36 29 00  # "pixel_print (.tmp0/pixel-array.c0: 56.3-56.56)"
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 36 2E 33 35 2D 35 36 2E 34 37 29 00  # "pixel_print (.tmp0/pixel-array.c0: 56.35-56.47)"
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 36 2E 32 37 2D 35 36 2E 34 38 29 00  # "pixel_print (.tmp0/pixel-array.c0: 56.27-56.48)"
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 36 2E 31 36 2D 35 36 2E 35 35 29 00  # "pixel_print (.tmp0/pixel-array.c0: 56.16-56.55)"
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 36 2E 33 2D 35 36 2E 35 36 29 00  # "pixel_print (.tmp0/pixel-array.c0: 56.3-56.56)"
00  # ""
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 36 2E 33 2D 35 36 2E 35 36 29 00  # "pixel_print (.tmp0/pixel-array.c0: 56.3-56.56)"
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 36 2E 35 38 2D 35 36 2E 36 35 29 00  # "pixel_print (.tmp0/pixel-array.c0: 56.58-56.65)"
00  # ""
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 37 2E 33 2D 35 37 2E 35 36 29 00  # "pixel_print (.tmp0/pixel-array.c0: 57.3-57.56)"
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 37 2E 33 35 2D 35 37 2E 34 36 29 00  # "pixel_print (.tmp0/pixel-array.c0: 57.35-57.46)"
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 37 2E 32 37 2D 35 37 2E 34 37 29 00  # "pixel_print (.tmp0/pixel-array.c0: 57.27-57.47)"
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 37 2E 31 36 2D 35 37 2E 35 35 29 00  # "pixel_print (.tmp0/pixel-array.c0: 57.16-57.55)"
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 37 2E 33 2D 35 37 2E 35 36 29 00  # "pixel_print (.tmp0/pixel-array.c0: 57.3-57.56)"
00  # ""
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 37 2E 33 2D 35 37 2E 35 36 29 00  # "pixel_print (.tmp0/pixel-array.c0: 57.3-57.56)"
70 69 78 65 6C 5F 70 72 69 6E 74 20 28 2E 74 6D 70 30 2F 70 69 78 65 6C 2D 61 72 72 61 79 2E 63 30 3A 20 35 37 2E 35 38 2D 35 37 2E 36 35 29 00  # "pixel_print (.tmp0/pixel-array.c0: 57.58-57.65)"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 33 32 2E 34 2D 33 32 2E 33 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "multireturn.c0: 32.4-32.34: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 33 33 2E 34 2D 33 33 2E 33 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "multireturn.c0: 33.4-33.37: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 33 38 2E 36 2D 33 38 2E 32 38 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "multireturn.c0: 38.6-38.28: @loop_invariant annotation failed"
68 69 73 74 6F 67 72 61 6D 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 34 30 2E 32 30 2D 34 30 2E 33 33 29 00  # "histogram (multireturn.c0: 40.20-40.33)"
68 69 73 74 6F 67 72 61 6D 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 34 30 2E 33 36 2D 34 30 2E 35 31 29 00  # "histogram (multireturn.c0: 40.36-40.51)"
68 69 73 74 6F 67 72 61 6D 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 34 30 2E 35 34 2D 34 30 2E 36 38 29 00  # "histogram (multireturn.c0: 40.54-40.68)"
00  # ""
68 69 73 74 6F 67 72 61 6D 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 34 35 2E 33 2D 34 35 2E 33 32 29 00  # "histogram (multireturn.c0: 45.3-45.32)"
66 69 6E 61 6C 41 72 72 61 79 2D 3E 0A 00  # "finalArray->\n"
68 69 73 74 6F 67 72 61 6D 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 34 35 2E 33 2D 34 35 2E 33 32 29 00  # "histogram (multireturn.c0: 45.3-45.32)"
00  # ""
68 69 73 74 6F 67 72 61 6D 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 34 35 2E 33 2D 34 35 2E 33 32 29 00  # "histogram (multireturn.c0: 45.3-45.32)"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 36 30 2E 34 2D 36 30 2E 33 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "multireturn.c0: 60.4-60.34: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 36 36 2E 38 2D 36 36 2E 33 30 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "multireturn.c0: 66.8-66.30: @loop_invariant annotation failed"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 36 31 2E 34 2D 36 31 2E 33 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "multireturn.c0: 61.4-61.39: @ensures annotation failed"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 36 32 2E 34 2D 36 32 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "multireturn.c0: 62.4-62.25: @ensures annotation failed"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 37 34 2E 34 2D 37 34 2E 33 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "multireturn.c0: 74.4-74.34: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 37 35 2E 34 2D 37 35 2E 33 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "multireturn.c0: 75.4-75.34: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 37 38 2E 38 2D 37 38 2E 33 30 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "multireturn.c0: 78.8-78.30: @loop_invariant annotation failed"
70 69 78 65 6C 73 5F 65 71 75 61 6C 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 38 30 2E 31 31 2D 38 30 2E 32 36 29 00  # "pixels_equal (multireturn.c0: 80.11-80.26)"
70 69 78 65 6C 73 5F 65 71 75 61 6C 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 38 30 2E 33 30 2D 38 30 2E 34 35 29 00  # "pixels_equal (multireturn.c0: 80.30-80.45)"
70 69 78 65 6C 73 5F 65 71 75 61 6C 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 38 31 2E 31 31 2D 38 31 2E 32 34 29 00  # "pixels_equal (multireturn.c0: 81.11-81.24)"
70 69 78 65 6C 73 5F 65 71 75 61 6C 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 38 31 2E 33 30 2D 38 31 2E 34 33 29 00  # "pixels_equal (multireturn.c0: 81.30-81.43)"
70 69 78 65 6C 73 5F 65 71 75 61 6C 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 38 32 2E 31 31 2D 38 32 2E 32 36 29 00  # "pixels_equal (multireturn.c0: 82.11-82.26)"
70 69 78 65 6C 73 5F 65 71 75 61 6C 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 38 32 2E 33 30 2D 38 32 2E 34 35 29 00  # "pixels_equal (multireturn.c0: 82.30-82.45)"
70 69 78 65 6C 73 5F 65 71 75 61 6C 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 38 33 2E 31 31 2D 38 33 2E 32 35 29 00  # "pixels_equal (multireturn.c0: 83.11-83.25)"
70 69 78 65 6C 73 5F 65 71 75 61 6C 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 38 33 2E 33 30 2D 38 33 2E 34 34 29 00  # "pixels_equal (multireturn.c0: 83.30-83.44)"
74 65 73 74 5F 68 69 73 74 6F 67 72 61 6D 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 39 35 2E 31 30 2D 39 35 2E 34 34 29 00  # "test_histogram (multireturn.c0: 95.10-95.44)"
74 65 73 74 5F 68 69 73 74 6F 67 72 61 6D 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 39 36 2E 31 30 2D 39 36 2E 34 34 29 00  # "test_histogram (multireturn.c0: 96.10-96.44)"
74 65 73 74 5F 68 69 73 74 6F 67 72 61 6D 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 39 37 2E 31 30 2D 39 37 2E 34 34 29 00  # "test_histogram (multireturn.c0: 97.10-97.44)"
74 65 73 74 5F 68 69 73 74 6F 67 72 61 6D 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 39 38 2E 31 30 2D 39 38 2E 34 34 29 00  # "test_histogram (multireturn.c0: 98.10-98.44)"
74 65 73 74 5F 68 69 73 74 6F 67 72 61 6D 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 39 39 2E 31 30 2D 39 39 2E 34 34 29 00  # "test_histogram (multireturn.c0: 99.10-99.44)"
74 65 73 74 5F 68 69 73 74 6F 67 72 61 6D 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 30 30 2E 31 30 2D 31 30 30 2E 34 34 29 00  # "test_histogram (multireturn.c0: 100.10-100.44)"
74 65 73 74 5F 68 69 73 74 6F 67 72 61 6D 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 30 31 2E 31 30 2D 31 30 31 2E 34 34 29 00  # "test_histogram (multireturn.c0: 101.10-101.44)"
74 65 73 74 5F 68 69 73 74 6F 67 72 61 6D 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 30 32 2E 31 30 2D 31 30 32 2E 34 34 29 00  # "test_histogram (multireturn.c0: 102.10-102.44)"
74 65 73 74 5F 68 69 73 74 6F 67 72 61 6D 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 30 33 2E 31 30 2D 31 30 33 2E 34 34 29 00  # "test_histogram (multireturn.c0: 103.10-103.44)"
74 65 73 74 5F 68 69 73 74 6F 67 72 61 6D 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 30 34 2E 37 2D 31 30 34 2E 32 34 29 00  # "test_histogram (multireturn.c0: 104.7-104.24)"
74 65 73 74 5F 68 69 73 74 6F 67 72 61 6D 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 30 37 2E 33 2D 31 30 37 2E 32 37 29 00  # "test_histogram (multireturn.c0: 107.3-107.27)"
74 65 73 74 5F 68 69 73 74 6F 67 72 61 6D 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 30 38 2E 31 30 2D 31 30 38 2E 33 31 29 00  # "test_histogram (multireturn.c0: 108.10-108.31)"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 30 38 2E 33 2D 31 30 38 2E 33 33 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "multireturn.c0: 108.3-108.33: assert failed"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 31 30 2E 32 35 2D 31 31 30 2E 34 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "multireturn.c0: 110.25-110.49: assert failed"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 31 31 2E 32 35 2D 31 31 31 2E 34 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "multireturn.c0: 111.25-111.49: assert failed"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 31 32 2E 32 35 2D 31 31 32 2E 34 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "multireturn.c0: 112.25-112.49: assert failed"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 31 33 2E 32 35 2D 31 31 33 2E 34 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "multireturn.c0: 113.25-113.49: assert failed"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 31 34 2E 32 35 2D 31 31 34 2E 34 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "multireturn.c0: 114.25-114.49: assert failed"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 31 35 2E 32 35 2D 31 31 35 2E 34 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "multireturn.c0: 115.25-115.49: assert failed"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 31 36 2E 32 35 2D 31 31 36 2E 34 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "multireturn.c0: 116.25-116.49: assert failed"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 31 37 2E 32 35 2D 31 31 37 2E 34 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "multireturn.c0: 117.25-117.49: assert failed"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 31 38 2E 31 30 2D 31 31 38 2E 33 34 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "multireturn.c0: 118.10-118.34: assert failed"
74 65 73 74 5F 68 69 73 74 6F 67 72 61 6D 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 32 32 2E 31 30 2D 31 32 32 2E 34 34 29 00  # "test_histogram (multireturn.c0: 122.10-122.44)"
74 65 73 74 5F 68 69 73 74 6F 67 72 61 6D 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 32 33 2E 31 30 2D 31 32 33 2E 34 34 29 00  # "test_histogram (multireturn.c0: 123.10-123.44)"
74 65 73 74 5F 68 69 73 74 6F 67 72 61 6D 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 32 36 2E 33 2D 31 32 36 2E 32 37 29 00  # "test_histogram (multireturn.c0: 126.3-126.27)"
74 65 73 74 5F 68 69 73 74 6F 67 72 61 6D 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 32 37 2E 31 30 2D 31 32 37 2E 33 31 29 00  # "test_histogram (multireturn.c0: 127.10-127.31)"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 32 37 2E 33 2D 31 32 37 2E 33 33 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "multireturn.c0: 127.3-127.33: assert failed"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 32 39 2E 32 35 2D 31 32 39 2E 34 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "multireturn.c0: 129.25-129.49: assert failed"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 33 30 2E 32 35 2D 31 33 30 2E 34 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "multireturn.c0: 130.25-130.49: assert failed"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 33 31 2E 32 35 2D 31 33 31 2E 34 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "multireturn.c0: 131.25-131.49: assert failed"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 33 32 2E 32 35 2D 31 33 32 2E 34 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "multireturn.c0: 132.25-132.49: assert failed"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 33 33 2E 32 35 2D 31 33 33 2E 34 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "multireturn.c0: 133.25-133.49: assert failed"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 33 34 2E 32 35 2D 31 33 34 2E 34 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "multireturn.c0: 134.25-134.49: assert failed"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 33 35 2E 32 35 2D 31 33 35 2E 34 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "multireturn.c0: 135.25-135.49: assert failed"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 33 36 2E 32 35 2D 31 33 36 2E 34 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "multireturn.c0: 136.25-136.49: assert failed"
6D 75 6C 74 69 72 65 74 75 72 6E 2E 63 30 3A 20 31 33 37 2E 31 30 2D 31 33 37 2E 33 34 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "multireturn.c0: 137.10-137.34: assert failed"
28 70 72 6F 67 72 61 6D 20 73 74 61 72 74 29 00  # "(program start)"
6D 61 69 6E 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2D 74 65 73 74 2E 63 30 3A 20 31 30 2E 33 2D 31 30 2E 31 39 29 00  # "main (multireturn-test.c0: 10.3-10.19)"
41 6C 6C 20 74 65 73 74 73 20 70 61 73 73 65 64 21 0A 00  # "All tests passed!\n"
6D 61 69 6E 20 28 6D 75 6C 74 69 72 65 74 75 72 6E 2D 74 65 73 74 2E 63 30 3A 20 31 32 2E 33 2D 31 32 2E 33 32 29 00  # "main (multireturn-test.c0: 12.3-12.32)"

00 30             # function count
# function_pool

#<main>
00                # number of arguments = 0
02                # number of local variables = 2
00 1D             # code length = 29 bytes
14 25 C7 # aldc 9671          # s[9671] = "(program start)"
36 00    # vstore 0           # _caller = "(program start)";
14 25 D7 # aldc 9687          # s[9687] = "main (multireturn-test.c0: 10.3-10.19)"
B8 00 2F # invokestatic 47    # test_histogram("main (multireturn-test.c0: 10.3-10.19)")
57       # pop                # (ignore result)
14 25 FE # aldc 9726          # s[9726] = "All tests passed!\n"
14 26 11 # aldc 9745          # s[9745] = "main (multireturn-test.c0: 12.3-12.32)"
B8 00 1E # invokestatic 30    # print__1("All tests passed!\n", "main (multireturn-test.c0: 12.3-12.32)")
57       # pop                # (ignore result)
10 00    # bipush 0           # 0
36 01    # vstore 1           # _result = 0;
15 01    # vload 1            # _result
B0       # return             # 


#<int_size>
01                # number of arguments = 1
02                # number of local variables = 2
00 07             # code length = 7 bytes
10 04    # bipush 4           # 4
36 01    # vstore 1           # _result = 4;
15 01    # vload 1            # _result
B0       # return             # 


#<int_size__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 20             # code length = 32 bytes
14 00 00 # aldc 0             # s[0] = "int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)"
B8 00 01 # invokestatic 1     # int_size("int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)")
36 01    # vstore 1           # _result = int_size("int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)");
15 01    # vload 1            # _result
10 04    # bipush 4           # 4
9F 00 06 # if_cmpeq +6        # if (_result == 4) goto <00:cond_true>
A7 00 08 # goto +8            # goto <01:cond_false>
# <00:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <02:cond_end>
# <01:cond_false>
10 00    # bipush 0           # false
# <02:cond_end>
14 00 3E # aldc 62            # s[62] = "/afs/andrew/course/15/122/lib/util.h0: 9.6-9.27: @ensures annotation failed"
CF       # assert             # assert (_result == 4) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<int_max>
01                # number of arguments = 1
02                # number of local variables = 2
00 08             # code length = 8 bytes
13 00 02 # ildc 2             # c[2] = 2147483647
36 01    # vstore 1           # _result = 2147483647;
15 01    # vload 1            # _result
B0       # return             # 


#<int_max__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 21             # code length = 33 bytes
14 00 8A # aldc 138           # s[138] = "int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)"
B8 00 03 # invokestatic 3     # int_max("int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)")
36 01    # vstore 1           # _result = int_max("int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)");
15 01    # vload 1            # _result
13 00 00 # ildc 0             # c[0] = 2147483647
9F 00 06 # if_cmpeq +6        # if (_result == 2147483647) goto <03:cond_true>
A7 00 08 # goto +8            # goto <04:cond_false>
# <03:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <05:cond_end>
# <04:cond_false>
10 00    # bipush 0           # false
# <05:cond_end>
14 00 C9 # aldc 201           # s[201] = "/afs/andrew/course/15/122/lib/util.h0: 11.6-11.36: @ensures annotation failed"
CF       # assert             # assert (_result == 2147483647) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<int_min>
01                # number of arguments = 1
02                # number of local variables = 2
00 08             # code length = 8 bytes
13 00 03 # ildc 3             # c[3] = -2147483648
36 01    # vstore 1           # _result = -2147483648;
15 01    # vload 1            # _result
B0       # return             # 


#<int_min__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 21             # code length = 33 bytes
14 01 17 # aldc 279           # s[279] = "int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)"
B8 00 05 # invokestatic 5     # int_min("int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)")
36 01    # vstore 1           # _result = int_min("int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)");
15 01    # vload 1            # _result
13 00 01 # ildc 1             # c[1] = -2147483648
9F 00 06 # if_cmpeq +6        # if (_result == -(-2147483648)) goto <06:cond_true>
A7 00 08 # goto +8            # goto <07:cond_false>
# <06:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <08:cond_end>
# <07:cond_false>
10 00    # bipush 0           # false
# <08:cond_end>
14 01 56 # aldc 342           # s[342] = "/afs/andrew/course/15/122/lib/util.h0: 13.6-13.37: @ensures annotation failed"
CF       # assert             # assert (_result == -(-2147483648)) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<abs>
02                # number of arguments = 2
03                # number of local variables = 3
00 52             # code length = 82 bytes
15 00    # vload 0            # x
14 0E E9 # aldc 3817          # s[3817] = "abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)"
B8 00 06 # invokestatic 6     # int_min__1("abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)")
A3 00 06 # if_icmpgt +6       # if (x > int_min__1("abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)")) goto <133:cond_true>
A7 00 08 # goto +8            # goto <134:cond_false>
# <133:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <135:cond_end>
# <134:cond_false>
10 00    # bipush 0           # false
# <135:cond_end>
14 0F 22 # aldc 3874          # s[3874] = "/afs/andrew/course/15/122/lib/util.c0: 29.4-29.27: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 0F 72 # aldc 3954          # s[3954] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/util.c0: 29.4-29.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (x > int_min__1("abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)")) [failure message on stack]
15 00    # vload 0            # x
10 00    # bipush 0           # 0
A1 00 06 # if_icmplt +6       # if (x < 0) goto <136:cond_true>
A7 00 0B # goto +11           # goto <137:cond_false>
# <136:cond_true>
10 00    # bipush 0           # 
15 00    # vload 0            # x
64       # isub               # -(x)
A7 00 05 # goto +5            # goto <138:cond_end>
# <137:cond_false>
15 00    # vload 0            # x
# <138:cond_end>
36 02    # vstore 2           # _result = ((x < 0) ? -(x) : x);
15 02    # vload 2            # _result
10 00    # bipush 0           # 0
A2 00 06 # if_icmpge +6       # if (_result >= 0) goto <139:cond_true>
A7 00 08 # goto +8            # goto <140:cond_false>
# <139:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <141:cond_end>
# <140:cond_false>
10 00    # bipush 0           # false
# <141:cond_end>
14 0F 84 # aldc 3972          # s[3972] = "/afs/andrew/course/15/122/lib/util.c0: 30.4-30.25: @ensures annotation failed"
CF       # assert             # assert (_result >= 0) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<abs__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 6D             # code length = 109 bytes
15 00    # vload 0            # x
14 01 A4 # aldc 420           # s[420] = "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)"
B8 00 06 # invokestatic 6     # int_min__1("abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)")
A3 00 06 # if_icmpgt +6       # if (x > int_min__1("abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)")) goto <09:cond_true>
A7 00 08 # goto +8            # goto <10:cond_false>
# <09:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <11:cond_end>
# <10:cond_false>
10 00    # bipush 0           # false
# <11:cond_end>
14 01 E0 # aldc 480           # s[480] = "/afs/andrew/course/15/122/lib/util.h0: 17.6-17.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 02 30 # aldc 560           # s[560] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/util.h0: 17.6-17.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (x > int_min__1("abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)")) [failure message on stack]
15 00    # vload 0            # x
14 02 42 # aldc 578           # s[578] = "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)"
B8 00 07 # invokestatic 7     # abs(x, "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)")
36 02    # vstore 2           # _result = abs(x, "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)");
15 02    # vload 2            # _result
10 00    # bipush 0           # 0
A2 00 06 # if_icmpge +6       # if (_result >= 0) goto <12:cond_true>
A7 00 08 # goto +8            # goto <13:cond_false>
# <12:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <14:cond_end>
# <13:cond_false>
10 00    # bipush 0           # false
# <14:cond_end>
14 02 7D # aldc 637           # s[637] = "/afs/andrew/course/15/122/lib/util.h0: 18.6-18.27: @ensures annotation failed"
CF       # assert             # assert (_result >= 0) [failure message on stack]
15 02    # vload 2            # _result
15 00    # vload 0            # x
10 00    # bipush 0           # 0
A1 00 06 # if_icmplt +6       # if (x < 0) goto <18:cond_true>
A7 00 0B # goto +11           # goto <19:cond_false>
# <18:cond_true>
10 00    # bipush 0           # 
15 00    # vload 0            # x
64       # isub               # -(x)
A7 00 05 # goto +5            # goto <20:cond_end>
# <19:cond_false>
15 00    # vload 0            # x
# <20:cond_end>
9F 00 06 # if_cmpeq +6        # if (_result == ((x < 0) ? -(x) : x)) goto <15:cond_true>
A7 00 08 # goto +8            # goto <16:cond_false>
# <15:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <17:cond_end>
# <16:cond_false>
10 00    # bipush 0           # false
# <17:cond_end>
14 02 CB # aldc 715           # s[715] = "/afs/andrew/course/15/122/lib/util.h0: 19.6-19.42: @ensures annotation failed"
CF       # assert             # assert (_result == ((x < 0) ? -(x) : x)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<max>
03                # number of arguments = 3
04                # number of local variables = 4
00 5E             # code length = 94 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
A3 00 06 # if_icmpgt +6       # if (x > y) goto <103:cond_true>
A7 00 08 # goto +8            # goto <104:cond_false>
# <103:cond_true>
15 00    # vload 0            # x
A7 00 05 # goto +5            # goto <105:cond_end>
# <104:cond_false>
15 01    # vload 1            # y
# <105:cond_end>
36 03    # vstore 3           # _result = ((x > y) ? x : y);
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <106:cond_true>
A7 00 08 # goto +8            # goto <107:cond_false>
# <106:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <108:cond_end>
# <107:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <109:cond_true>
A7 00 08 # goto +8            # goto <110:cond_false>
# <109:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <111:cond_end>
# <110:cond_false>
10 00    # bipush 0           # false
# <111:cond_end>
# <108:cond_end>
14 0D B1 # aldc 3505          # s[3505] = "/afs/andrew/course/15/122/lib/util.c0: 13.4-13.41: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A2 00 06 # if_icmpge +6       # if (_result >= x) goto <112:cond_true>
A7 00 17 # goto +23           # goto <113:cond_false>
# <112:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A2 00 06 # if_icmpge +6       # if (_result >= y) goto <115:cond_true>
A7 00 08 # goto +8            # goto <116:cond_false>
# <115:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <117:cond_end>
# <116:cond_false>
10 00    # bipush 0           # false
# <117:cond_end>
A7 00 05 # goto +5            # goto <114:cond_end>
# <113:cond_false>
10 00    # bipush 0           # false
# <114:cond_end>
14 0D FF # aldc 3583          # s[3583] = "/afs/andrew/course/15/122/lib/util.c0: 14.4-14.41: @ensures annotation failed"
CF       # assert             # assert ((_result >= x) && (_result >= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<max__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 57             # code length = 87 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
14 03 19 # aldc 793           # s[793] = "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)"
B8 00 09 # invokestatic 9     # max(x, y, "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)")
36 03    # vstore 3           # _result = max(x, y, "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)");
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <21:cond_true>
A7 00 08 # goto +8            # goto <22:cond_false>
# <21:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <23:cond_end>
# <22:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <24:cond_true>
A7 00 08 # goto +8            # goto <25:cond_false>
# <24:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <26:cond_end>
# <25:cond_false>
10 00    # bipush 0           # false
# <26:cond_end>
# <23:cond_end>
14 03 54 # aldc 852           # s[852] = "/afs/andrew/course/15/122/lib/util.h0: 23.6-23.43: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A2 00 06 # if_icmpge +6       # if (_result >= x) goto <27:cond_true>
A7 00 17 # goto +23           # goto <28:cond_false>
# <27:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A2 00 06 # if_icmpge +6       # if (_result >= y) goto <30:cond_true>
A7 00 08 # goto +8            # goto <31:cond_false>
# <30:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <32:cond_end>
# <31:cond_false>
10 00    # bipush 0           # false
# <32:cond_end>
A7 00 05 # goto +5            # goto <29:cond_end>
# <28:cond_false>
10 00    # bipush 0           # false
# <29:cond_end>
14 03 A2 # aldc 930           # s[930] = "/afs/andrew/course/15/122/lib/util.h0: 24.6-24.43: @ensures annotation failed"
CF       # assert             # assert ((_result >= x) && (_result >= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<min>
03                # number of arguments = 3
04                # number of local variables = 4
00 5E             # code length = 94 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
A3 00 06 # if_icmpgt +6       # if (x > y) goto <118:cond_true>
A7 00 08 # goto +8            # goto <119:cond_false>
# <118:cond_true>
15 01    # vload 1            # y
A7 00 05 # goto +5            # goto <120:cond_end>
# <119:cond_false>
15 00    # vload 0            # x
# <120:cond_end>
36 03    # vstore 3           # _result = ((x > y) ? y : x);
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <121:cond_true>
A7 00 08 # goto +8            # goto <122:cond_false>
# <121:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <123:cond_end>
# <122:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <124:cond_true>
A7 00 08 # goto +8            # goto <125:cond_false>
# <124:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <126:cond_end>
# <125:cond_false>
10 00    # bipush 0           # false
# <126:cond_end>
# <123:cond_end>
14 0E 4D # aldc 3661          # s[3661] = "/afs/andrew/course/15/122/lib/util.c0: 21.4-21.41: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A4 00 06 # if_icmple +6       # if (_result <= x) goto <127:cond_true>
A7 00 17 # goto +23           # goto <128:cond_false>
# <127:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A4 00 06 # if_icmple +6       # if (_result <= y) goto <130:cond_true>
A7 00 08 # goto +8            # goto <131:cond_false>
# <130:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <132:cond_end>
# <131:cond_false>
10 00    # bipush 0           # false
# <132:cond_end>
A7 00 05 # goto +5            # goto <129:cond_end>
# <128:cond_false>
10 00    # bipush 0           # false
# <129:cond_end>
14 0E 9B # aldc 3739          # s[3739] = "/afs/andrew/course/15/122/lib/util.c0: 22.4-22.41: @ensures annotation failed"
CF       # assert             # assert ((_result <= x) && (_result <= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<min__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 57             # code length = 87 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
14 03 F0 # aldc 1008          # s[1008] = "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)"
B8 00 0B # invokestatic 11    # min(x, y, "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)")
36 03    # vstore 3           # _result = min(x, y, "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)");
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <33:cond_true>
A7 00 08 # goto +8            # goto <34:cond_false>
# <33:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <35:cond_end>
# <34:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <36:cond_true>
A7 00 08 # goto +8            # goto <37:cond_false>
# <36:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <38:cond_end>
# <37:cond_false>
10 00    # bipush 0           # false
# <38:cond_end>
# <35:cond_end>
14 04 2B # aldc 1067          # s[1067] = "/afs/andrew/course/15/122/lib/util.h0: 28.6-28.43: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A4 00 06 # if_icmple +6       # if (_result <= x) goto <39:cond_true>
A7 00 17 # goto +23           # goto <40:cond_false>
# <39:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A4 00 06 # if_icmple +6       # if (_result <= y) goto <42:cond_true>
A7 00 08 # goto +8            # goto <43:cond_false>
# <42:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <44:cond_end>
# <43:cond_false>
10 00    # bipush 0           # false
# <44:cond_end>
A7 00 05 # goto +5            # goto <41:cond_end>
# <40:cond_false>
10 00    # bipush 0           # false
# <41:cond_end>
14 04 79 # aldc 1145          # s[1145] = "/afs/andrew/course/15/122/lib/util.h0: 29.6-29.43: @ensures annotation failed"
CF       # assert             # assert ((_result <= x) && (_result <= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<int2hex>
02                # number of arguments = 2
06                # number of local variables = 6
00 AE             # code length = 174 bytes
10 02    # bipush 2           # 2
14 11 38 # aldc 4408          # s[4408] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"
B8 00 02 # invokestatic 2     # int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)")
68       # imul               # (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"))
36 03    # vstore 3           # digits = (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"));
15 03    # vload 3            # digits
10 01    # bipush 1           # 1
60       # iadd               # (digits + 1)
BC 01    # newarray 1         # alloc_array(char, (digits + 1))
36 04    # vstore 4           # s = alloc_array(char, (digits + 1));
15 04    # vload 4            # s
15 03    # vload 3            # digits
63       # aadds              # &s[digits]
10 00    # bipush 0           # '\000'
55       # cmstore            # s[digits] = '\0';
10 00    # bipush 0           # 0
36 05    # vstore 5           # i = 0;
# <156:loop>
A7 00 03 # goto +3            # goto <157:body>
# <157:body>
10 00    # bipush 0           # 0
15 05    # vload 5            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <159:cond_true>
A7 00 17 # goto +23           # goto <160:cond_false>
# <159:cond_true>
15 05    # vload 5            # i
15 03    # vload 3            # digits
A4 00 06 # if_icmple +6       # if (i <= digits) goto <162:cond_true>
A7 00 08 # goto +8            # goto <163:cond_false>
# <162:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <164:cond_end>
# <163:cond_false>
10 00    # bipush 0           # false
# <164:cond_end>
A7 00 05 # goto +5            # goto <161:cond_end>
# <160:cond_false>
10 00    # bipush 0           # false
# <161:cond_end>
14 11 75 # aldc 4469          # s[4469] = "/afs/andrew/course/15/122/lib/util.c0: 55.8-55.45: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= i) && (i <= digits)) [failure message on stack]
15 05    # vload 5            # i
15 03    # vload 3            # digits
A1 00 06 # if_icmplt +6       # if (i < digits) goto <165:then>
A7 00 2B # goto +43           # goto <166:else>
# <165:then>
15 04    # vload 4            # s
15 03    # vload 3            # digits
15 05    # vload 5            # i
64       # isub               # (digits - i)
10 01    # bipush 1           # 1
64       # isub               # ((digits - i) - 1)
63       # aadds              # &s[((digits - i) - 1)]
15 00    # vload 0            # x
10 0F    # bipush 15          # 15
7E       # iand               # (x & 15)
14 11 CA # aldc 4554          # s[4554] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)"
B8 00 1D # invokestatic 29    # hexdig2char((x & 15), "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)")
55       # cmstore            # s[((digits - i) - 1)] = hexdig2char((x & 15), "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)");
15 00    # vload 0            # x
10 04    # bipush 4           # 4
7A       # ishr               # (x >> 4)
36 00    # vstore 0           # x = (x >> 4);
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # i += 1;
A7 00 06 # goto +6            # goto <167:endif>
# <166:else>
A7 00 06 # goto +6            # break
# <167:endif>
A7 FF A4 # goto -92           # goto <156:loop>
# <158:exit>
15 04    # vload 4            # s
14 12 07 # aldc 4615          # s[4615] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)"
B8 00 1A # invokestatic 26    # string_from_chararray__1(s, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)")
36 02    # vstore 2           # _result = string_from_chararray__1(s, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)");
15 02    # vload 2            # _result
14 12 44 # aldc 4676          # s[4676] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)"
B8 00 0E # invokestatic 14    # string_length__1(_result, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)")
10 02    # bipush 2           # 2
14 12 81 # aldc 4737          # s[4737] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"
B8 00 02 # invokestatic 2     # int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)")
68       # imul               # (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"))
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)") == (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"))) goto <168:cond_true>
A7 00 08 # goto +8            # goto <169:cond_false>
# <168:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <170:cond_end>
# <169:cond_false>
10 00    # bipush 0           # false
# <170:cond_end>
14 12 BE # aldc 4798          # s[4798] = "/afs/andrew/course/15/122/lib/util.c0: 49.4-49.51: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)") == (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"))) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<string_length__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 01 # invokenative 1     # string_length(s)
36 02    # vstore 2           # _result = string_length(s);
15 02    # vload 2            # _result
B0       # return             # 


#<string_charat__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 41             # code length = 65 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # idx
A4 00 06 # if_icmple +6       # if (0 <= idx) goto <45:cond_true>
A7 00 1D # goto +29           # goto <46:cond_false>
# <45:cond_true>
15 01    # vload 1            # idx
15 00    # vload 0            # s
14 04 C7 # aldc 1223          # s[1223] = "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)"
B8 00 0E # invokestatic 14    # string_length__1(s, "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)")
A1 00 06 # if_icmplt +6       # if (idx < string_length__1(s, "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)")) goto <48:cond_true>
A7 00 08 # goto +8            # goto <49:cond_false>
# <48:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <50:cond_end>
# <49:cond_false>
10 00    # bipush 0           # false
# <50:cond_end>
A7 00 05 # goto +5            # goto <47:cond_end>
# <46:cond_false>
10 00    # bipush 0           # false
# <47:cond_end>
14 05 0F # aldc 1295          # s[1295] = "/afs/andrew/course/15/122/lib/string.h0: 19.6-19.50: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 05 61 # aldc 1377          # s[1377] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/string.h0: 19.6-19.50: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= idx) && (idx < string_length__1(s, "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)"))) [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # idx
B7 00 02 # invokenative 2     # string_charat(s, idx)
36 03    # vstore 3           # _result = string_charat(s, idx);
15 03    # vload 3            # _result
B0       # return             # 


#<string_join__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 36             # code length = 54 bytes
15 00    # vload 0            # a
15 01    # vload 1            # b
B7 00 00 # invokenative 0     # string_join(a, b)
36 03    # vstore 3           # _result = string_join(a, b);
15 03    # vload 3            # _result
14 05 73 # aldc 1395          # s[1395] = "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)"
B8 00 0E # invokestatic 14    # string_length__1(_result, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)")
15 00    # vload 0            # a
14 05 B9 # aldc 1465          # s[1465] = "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)"
B8 00 0E # invokestatic 14    # string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)")
15 01    # vload 1            # b
14 05 FF # aldc 1535          # s[1535] = "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"
B8 00 0E # invokestatic 14    # string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)")
60       # iadd               # (string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)") + string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"))
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)") == (string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)") + string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"))) goto <51:cond_true>
A7 00 08 # goto +8            # goto <52:cond_false>
# <51:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <53:cond_end>
# <52:cond_false>
10 00    # bipush 0           # false
# <53:cond_end>
14 06 45 # aldc 1605          # s[1605] = "/afs/andrew/course/15/122/lib/string.h0: 23.6-24.55: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)") == (string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)") + string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"))) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<string_sub__1>
04                # number of arguments = 4
05                # number of local variables = 5
00 6B             # code length = 107 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # start
A4 00 06 # if_icmple +6       # if (0 <= start) goto <57:and>
A7 00 27 # goto +39           # goto <55:cond_false>
# <57:and>
15 01    # vload 1            # start
15 02    # vload 2            # end
A4 00 06 # if_icmple +6       # if (start <= end) goto <54:cond_true>
A7 00 1D # goto +29           # goto <55:cond_false>
# <54:cond_true>
15 02    # vload 2            # end
15 00    # vload 0            # a
14 06 95 # aldc 1685          # s[1685] = "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)"
B8 00 0E # invokestatic 14    # string_length__1(a, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)")
A4 00 06 # if_icmple +6       # if (end <= string_length__1(a, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)")) goto <58:cond_true>
A7 00 08 # goto +8            # goto <59:cond_false>
# <58:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <60:cond_end>
# <59:cond_false>
10 00    # bipush 0           # false
# <60:cond_end>
A7 00 05 # goto +5            # goto <56:cond_end>
# <55:cond_false>
10 00    # bipush 0           # false
# <56:cond_end>
14 06 DA # aldc 1754          # s[1754] = "/afs/andrew/course/15/122/lib/string.h0: 31.6-31.69: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 07 2C # aldc 1836          # s[1836] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/string.h0: 31.6-31.69: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= start) && (start <= end)) && (end <= string_length__1(a, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)"))) [failure message on stack]
15 00    # vload 0            # a
15 01    # vload 1            # start
15 02    # vload 2            # end
B7 00 03 # invokenative 3     # string_sub(a, start, end)
36 04    # vstore 4           # _result = string_sub(a, start, end);
15 04    # vload 4            # _result
14 07 3E # aldc 1854          # s[1854] = "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)"
B8 00 0E # invokestatic 14    # string_length__1(_result, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)")
15 02    # vload 2            # end
15 01    # vload 1            # start
64       # isub               # (end - start)
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)") == (end - start)) goto <61:cond_true>
A7 00 08 # goto +8            # goto <62:cond_false>
# <61:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <63:cond_end>
# <62:cond_false>
10 00    # bipush 0           # false
# <63:cond_end>
14 07 83 # aldc 1923          # s[1923] = "/afs/andrew/course/15/122/lib/string.h0: 32.6-32.52: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)") == (end - start)) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 


#<string_equal__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 0C             # code length = 12 bytes
15 00    # vload 0            # a
15 01    # vload 1            # b
B7 00 04 # invokenative 4     # string_equal(a, b)
36 03    # vstore 3           # _result = string_equal(a, b);
15 03    # vload 3            # _result
B0       # return             # 


#<string_compare__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 30             # code length = 48 bytes
15 00    # vload 0            # a
15 01    # vload 1            # b
B7 00 05 # invokenative 5     # string_compare(a, b)
36 03    # vstore 3           # _result = string_compare(a, b);
10 FF    # bipush -1          # -1
15 03    # vload 3            # _result
A4 00 06 # if_icmple +6       # if (-(1) <= _result) goto <64:cond_true>
A7 00 17 # goto +23           # goto <65:cond_false>
# <64:cond_true>
15 03    # vload 3            # _result
10 01    # bipush 1           # 1
A4 00 06 # if_icmple +6       # if (_result <= 1) goto <67:cond_true>
A7 00 08 # goto +8            # goto <68:cond_false>
# <67:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <69:cond_end>
# <68:cond_false>
10 00    # bipush 0           # false
# <69:cond_end>
A7 00 05 # goto +5            # goto <66:cond_end>
# <65:cond_false>
10 00    # bipush 0           # false
# <66:cond_end>
14 07 D3 # aldc 2003          # s[2003] = "/afs/andrew/course/15/122/lib/string.h0: 37.6-37.44: @ensures annotation failed"
CF       # assert             # assert ((-(1) <= _result) && (_result <= 1)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<string_fromint__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # i
B7 00 06 # invokenative 6     # string_fromint(i)
36 02    # vstore 2           # _result = string_fromint(i);
15 02    # vload 2            # _result
B0       # return             # 


#<string_frombool__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # b
B7 00 07 # invokenative 7     # string_frombool(b)
36 02    # vstore 2           # _result = string_frombool(b);
15 02    # vload 2            # _result
B0       # return             # 


#<string_fromchar__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 62             # code length = 98 bytes
15 00    # vload 0            # c
10 00    # bipush 0           # '\000'
A0 00 06 # if_cmpne +6        # if (c != '\0') goto <70:cond_true>
A7 00 08 # goto +8            # goto <71:cond_false>
# <70:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <72:cond_end>
# <71:cond_false>
10 00    # bipush 0           # false
# <72:cond_end>
14 08 23 # aldc 2083          # s[2083] = "/afs/andrew/course/15/122/lib/string.h0: 43.6-43.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 08 75 # aldc 2165          # s[2165] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/string.h0: 43.6-43.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (c != '\0') [failure message on stack]
15 00    # vload 0            # c
B7 00 08 # invokenative 8     # string_fromchar(c)
36 02    # vstore 2           # _result = string_fromchar(c);
15 02    # vload 2            # _result
14 08 87 # aldc 2183          # s[2183] = "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)"
B8 00 0E # invokestatic 14    # string_length__1(_result, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)")
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)") == 1) goto <73:cond_true>
A7 00 08 # goto +8            # goto <74:cond_false>
# <73:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <75:cond_end>
# <74:cond_false>
10 00    # bipush 0           # false
# <75:cond_end>
14 08 D1 # aldc 2257          # s[2257] = "/afs/andrew/course/15/122/lib/string.h0: 44.6-44.42: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)") == 1) [failure message on stack]
15 02    # vload 2            # _result
10 00    # bipush 0           # 0
14 09 21 # aldc 2337          # s[2337] = "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)"
B8 00 0F # invokestatic 15    # string_charat__1(_result, 0, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)")
15 00    # vload 0            # c
9F 00 06 # if_cmpeq +6        # if (string_charat__1(_result, 0, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)") == c) goto <76:cond_true>
A7 00 08 # goto +8            # goto <77:cond_false>
# <76:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <78:cond_end>
# <77:cond_false>
10 00    # bipush 0           # false
# <78:cond_end>
14 09 6B # aldc 2411          # s[2411] = "/afs/andrew/course/15/122/lib/string.h0: 45.6-45.45: @ensures annotation failed"
CF       # assert             # assert (string_charat__1(_result, 0, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)") == c) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<string_tolower__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 09 # invokenative 9     # string_tolower(s)
36 02    # vstore 2           # _result = string_tolower(s);
15 02    # vload 2            # _result
B0       # return             # 


#<string_terminated__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 3C             # code length = 60 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # n
A4 00 06 # if_icmple +6       # if (0 <= n) goto <79:cond_true>
A7 00 18 # goto +24           # goto <80:cond_false>
# <79:cond_true>
15 01    # vload 1            # n
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (n <= \length(A)) goto <82:cond_true>
A7 00 08 # goto +8            # goto <83:cond_false>
# <82:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <84:cond_end>
# <83:cond_false>
10 00    # bipush 0           # false
# <84:cond_end>
A7 00 05 # goto +5            # goto <81:cond_end>
# <80:cond_false>
10 00    # bipush 0           # false
# <81:cond_end>
14 09 BB # aldc 2491          # s[2491] = "/afs/andrew/course/15/122/lib/string.h0: 52.6-52.41: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 0A 0D # aldc 2573          # s[2573] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/string.h0: 52.6-52.41: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= n) && (n <= \length(A))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # n
B7 00 0A # invokenative 10    # string_terminated(A, n)
36 03    # vstore 3           # _result = string_terminated(A, n);
15 03    # vload 3            # _result
B0       # return             # 


#<string_to_chararray__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 40             # code length = 64 bytes
15 00    # vload 0            # s
B7 00 0B # invokenative 11    # string_to_chararray(s)
36 02    # vstore 2           # _result = string_to_chararray(s);
15 02    # vload 2            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # s
14 0A 1F # aldc 2591          # s[2591] = "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)"
B8 00 0E # invokestatic 14    # string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)")
10 01    # bipush 1           # 1
60       # iadd               # (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)") + 1)
A2 00 06 # if_icmpge +6       # if (\length(_result) >= (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)") + 1)) goto <85:cond_true>
A7 00 08 # goto +8            # goto <86:cond_false>
# <85:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <87:cond_end>
# <86:cond_false>
10 00    # bipush 0           # false
# <87:cond_end>
14 0A 6D # aldc 2669          # s[2669] = "/afs/andrew/course/15/122/lib/string.h0: 56.6-56.55: @ensures annotation failed"
CF       # assert             # assert (\length(_result) >= (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)") + 1)) [failure message on stack]
15 02    # vload 2            # _result
15 00    # vload 0            # s
14 0A BD # aldc 2749          # s[2749] = "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)"
B8 00 0E # invokestatic 14    # string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)")
10 01    # bipush 1           # 1
60       # iadd               # (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)") + 1)
14 0B 0B # aldc 2827          # s[2827] = "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)"
B8 00 18 # invokestatic 24    # string_terminated__1(_result, (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)") + 1), "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)")
14 0B 59 # aldc 2905          # s[2905] = "/afs/andrew/course/15/122/lib/string.h0: 57.6-57.63: @ensures annotation failed"
CF       # assert             # assert string_terminated__1(_result, (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)") + 1), "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<string_from_chararray__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 43             # code length = 67 bytes
15 00    # vload 0            # A
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
14 0B A9 # aldc 2985          # s[2985] = "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)"
B8 00 18 # invokestatic 24    # string_terminated__1(A, \length(A), "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)")
14 0B F9 # aldc 3065          # s[3065] = "/afs/andrew/course/15/122/lib/string.h0: 62.6-62.48: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 0C 4B # aldc 3147          # s[3147] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/string.h0: 62.6-62.48: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert string_terminated__1(A, \length(A), "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)") [failure message on stack]
15 00    # vload 0            # A
B7 00 0C # invokenative 12    # string_from_chararray(A)
36 02    # vstore 2           # _result = string_from_chararray(A);
15 02    # vload 2            # _result
14 0C 5D # aldc 3165          # s[3165] = "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)"
B8 00 0E # invokestatic 14    # string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)")
10 01    # bipush 1           # 1
60       # iadd               # (string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)") + 1)
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if ((string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)") + 1) <= \length(A)) goto <88:cond_true>
A7 00 08 # goto +8            # goto <89:cond_false>
# <88:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <90:cond_end>
# <89:cond_false>
10 00    # bipush 0           # false
# <90:cond_end>
14 0C AD # aldc 3245          # s[3245] = "/afs/andrew/course/15/122/lib/string.h0: 63.6-63.55: @ensures annotation failed"
CF       # assert             # assert ((string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)") + 1) <= \length(A)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<char_ord__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 2E             # code length = 46 bytes
15 00    # vload 0            # c
B7 00 0D # invokenative 13    # char_ord(c)
36 02    # vstore 2           # _result = char_ord(c);
10 00    # bipush 0           # 0
15 02    # vload 2            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <91:cond_true>
A7 00 17 # goto +23           # goto <92:cond_false>
# <91:cond_true>
15 02    # vload 2            # _result
10 7F    # bipush 127         # 127
A4 00 06 # if_icmple +6       # if (_result <= 127) goto <94:cond_true>
A7 00 08 # goto +8            # goto <95:cond_false>
# <94:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <96:cond_end>
# <95:cond_false>
10 00    # bipush 0           # false
# <96:cond_end>
A7 00 05 # goto +5            # goto <93:cond_end>
# <92:cond_false>
10 00    # bipush 0           # false
# <93:cond_end>
14 0C FD # aldc 3325          # s[3325] = "/afs/andrew/course/15/122/lib/string.h0: 67.6-67.45: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result <= 127)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<char_chr__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 39             # code length = 57 bytes
10 00    # bipush 0           # 0
15 00    # vload 0            # n
A4 00 06 # if_icmple +6       # if (0 <= n) goto <97:cond_true>
A7 00 17 # goto +23           # goto <98:cond_false>
# <97:cond_true>
15 00    # vload 0            # n
10 7F    # bipush 127         # 127
A4 00 06 # if_icmple +6       # if (n <= 127) goto <100:cond_true>
A7 00 08 # goto +8            # goto <101:cond_false>
# <100:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <102:cond_end>
# <101:cond_false>
10 00    # bipush 0           # false
# <102:cond_end>
A7 00 05 # goto +5            # goto <99:cond_end>
# <98:cond_false>
10 00    # bipush 0           # false
# <99:cond_end>
14 0D 4D # aldc 3405          # s[3405] = "/afs/andrew/course/15/122/lib/string.h0: 69.6-69.34: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 0D 9F # aldc 3487          # s[3487] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/string.h0: 69.6-69.34: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= n) && (n <= 127)) [failure message on stack]
15 00    # vload 0            # n
B7 00 0E # invokenative 14    # char_chr(n)
36 02    # vstore 2           # _result = char_chr(n);
15 02    # vload 2            # _result
B0       # return             # 


#<hexdig2char>
02                # number of arguments = 2
03                # number of local variables = 3
00 93             # code length = 147 bytes
10 00    # bipush 0           # 0
15 00    # vload 0            # d
A4 00 06 # if_icmple +6       # if (0 <= d) goto <142:cond_true>
A7 00 17 # goto +23           # goto <143:cond_false>
# <142:cond_true>
15 00    # vload 0            # d
10 10    # bipush 16          # 16
A1 00 06 # if_icmplt +6       # if (d < 16) goto <145:cond_true>
A7 00 08 # goto +8            # goto <146:cond_false>
# <145:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <147:cond_end>
# <146:cond_false>
10 00    # bipush 0           # false
# <147:cond_end>
A7 00 05 # goto +5            # goto <144:cond_end>
# <143:cond_false>
10 00    # bipush 0           # false
# <144:cond_end>
14 0F D2 # aldc 4050          # s[4050] = "/afs/andrew/course/15/122/lib/util.c0: 37.4-37.30: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 10 22 # aldc 4130          # s[4130] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/util.c0: 37.4-37.30: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= d) && (d < 16)) [failure message on stack]
10 00    # bipush 0           # 0
15 00    # vload 0            # d
A4 00 06 # if_icmple +6       # if (0 <= d) goto <151:and>
A7 00 26 # goto +38           # goto <149:else>
# <151:and>
15 00    # vload 0            # d
10 0A    # bipush 10          # 10
A1 00 06 # if_icmplt +6       # if (d < 10) goto <148:then>
A7 00 1C # goto +28           # goto <149:else>
# <148:then>
10 30    # bipush 48          # '0'
14 10 34 # aldc 4148          # s[4148] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)"
B8 00 1B # invokestatic 27    # char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)")
15 00    # vload 0            # d
60       # iadd               # (char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)") + d)
14 10 75 # aldc 4213          # s[4213] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)"
B8 00 1C # invokestatic 28    # char_chr__1((char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)") + d), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)")
36 02    # vstore 2           # _result = char_chr__1((char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)") + d), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)");
15 02    # vload 2            # _result
B0       # return             # 
A7 00 3A # goto +58           # goto <150:endif>
# <149:else>
10 0A    # bipush 10          # 10
15 00    # vload 0            # d
A4 00 06 # if_icmple +6       # if (10 <= d) goto <155:and>
A7 00 29 # goto +41           # goto <153:else>
# <155:and>
15 00    # vload 0            # d
10 10    # bipush 16          # 16
A1 00 06 # if_icmplt +6       # if (d < 16) goto <152:then>
A7 00 1F # goto +31           # goto <153:else>
# <152:then>
10 41    # bipush 65          # 'A'
14 10 B6 # aldc 4278          # s[4278] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)"
B8 00 1B # invokestatic 27    # char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)")
15 00    # vload 0            # d
10 0A    # bipush 10          # 10
64       # isub               # (d - 10)
60       # iadd               # (char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)") + (d - 10))
14 10 F7 # aldc 4343          # s[4343] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)"
B8 00 1C # invokestatic 28    # char_chr__1((char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)") + (d - 10)), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)")
36 02    # vstore 2           # _result = char_chr__1((char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)") + (d - 10)), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)");
15 02    # vload 2            # _result
B0       # return             # 
A7 00 0A # goto +10           # goto <154:endif>
# <153:else>
10 3F    # bipush 63          # '\?'
36 02    # vstore 2           # _result = '?';
15 02    # vload 2            # _result
B0       # return             # 
# <154:endif>
# <150:endif>


#<print__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # s
B7 00 0F # invokenative 15    # print(s)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<println__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # s
B7 00 10 # invokenative 16    # println(s)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printint__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # i
B7 00 11 # invokenative 17    # printint(i)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printbool__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # b
B7 00 12 # invokenative 18    # printbool(b)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printchar__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # c
B7 00 13 # invokenative 19    # printchar(c)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<flush__1>
01                # number of arguments = 1
01                # number of local variables = 1
00 0A             # code length = 10 bytes
B7 00 14 # invokenative 20    # flush()
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<eof__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 08             # code length = 8 bytes
B7 00 15 # invokenative 21    # eof()
36 01    # vstore 1           # _result = eof();
15 01    # vload 1            # _result
B0       # return             # 


#<readline__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 20             # code length = 32 bytes
14 13 0C # aldc 4876          # s[4876] = "readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)"
B8 00 24 # invokestatic 36    # eof__1("readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)")
10 01    # bipush 1           # 
82       # ixor               # !(eof__1("readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)"))
14 13 4E # aldc 4942          # s[4942] = "/afs/andrew/course/15/122/lib/conio.h0: 14.6-14.22: @requires annotation failed\n"
15 00    # vload 0            # _caller
14 13 9F # aldc 5023          # s[5023] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("/afs/andrew/course/15/122/lib/conio.h0: 14.6-14.22: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(eof__1("readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)")) [failure message on stack]
B7 00 16 # invokenative 22    # readline()
36 01    # vstore 1           # _result = readline();
15 01    # vload 1            # _result
B0       # return             # 


#<make_pixel>
05                # number of arguments = 5
07                # number of local variables = 7
00 43             # code length = 67 bytes
10 04    # bipush 4           # 4
BC 04    # newarray 4         # alloc_array(int, 4)
36 06    # vstore 6           # p = alloc_array(int, 4);
15 06    # vload 6            # p
10 00    # bipush 0           # 0
63       # aadds              # &p[0]
15 00    # vload 0            # alpha
4E       # imstore            # p[0] = alpha;
15 06    # vload 6            # p
10 01    # bipush 1           # 1
63       # aadds              # &p[1]
15 01    # vload 1            # red
4E       # imstore            # p[1] = red;
15 06    # vload 6            # p
10 02    # bipush 2           # 2
63       # aadds              # &p[2]
15 02    # vload 2            # green
4E       # imstore            # p[2] = green;
15 06    # vload 6            # p
10 03    # bipush 3           # 3
63       # aadds              # &p[3]
15 03    # vload 3            # blue
4E       # imstore            # p[3] = blue;
15 06    # vload 6            # p
36 05    # vstore 5           # _result = p;
15 05    # vload 5            # _result
BE       # arraylength        # \length(_result)
10 04    # bipush 4           # 4
9F 00 06 # if_cmpeq +6        # if (\length(_result) == 4) goto <171:cond_true>
A7 00 08 # goto +8            # goto <172:cond_false>
# <171:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <173:cond_end>
# <172:cond_false>
10 00    # bipush 0           # false
# <173:cond_end>
14 13 B1 # aldc 5041          # s[5041] = ".tmp0/pixel-array.c0: 10.4-10.34: @ensures annotation failed"
CF       # assert             # assert (\length(_result) == 4) [failure message on stack]
15 05    # vload 5            # _result
B0       # return             # 


#<get_alpha>
02                # number of arguments = 2
03                # number of local variables = 3
00 2C             # code length = 44 bytes
15 00    # vload 0            # p
BE       # arraylength        # \length(p)
10 04    # bipush 4           # 4
9F 00 06 # if_cmpeq +6        # if (\length(p) == 4) goto <174:cond_true>
A7 00 08 # goto +8            # goto <175:cond_false>
# <174:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <176:cond_end>
# <175:cond_false>
10 00    # bipush 0           # false
# <176:cond_end>
14 13 EE # aldc 5102          # s[5102] = ".tmp0/pixel-array.c0: 21.4-21.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 14 2D # aldc 5165          # s[5165] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join(".tmp0/pixel-array.c0: 21.4-21.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(p) == 4) [failure message on stack]
15 00    # vload 0            # p
10 00    # bipush 0           # 0
63       # aadds              # &p[0]
2E       # imload             # p[0]
36 02    # vstore 2           # _result = p[0];
15 02    # vload 2            # _result
B0       # return             # 


#<get_red>
02                # number of arguments = 2
03                # number of local variables = 3
00 2C             # code length = 44 bytes
15 00    # vload 0            # p
BE       # arraylength        # \length(p)
10 04    # bipush 4           # 4
9F 00 06 # if_cmpeq +6        # if (\length(p) == 4) goto <177:cond_true>
A7 00 08 # goto +8            # goto <178:cond_false>
# <177:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <179:cond_end>
# <178:cond_false>
10 00    # bipush 0           # false
# <179:cond_end>
14 14 3F # aldc 5183          # s[5183] = ".tmp0/pixel-array.c0: 28.4-28.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 14 7E # aldc 5246          # s[5246] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join(".tmp0/pixel-array.c0: 28.4-28.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(p) == 4) [failure message on stack]
15 00    # vload 0            # p
10 01    # bipush 1           # 1
63       # aadds              # &p[1]
2E       # imload             # p[1]
36 02    # vstore 2           # _result = p[1];
15 02    # vload 2            # _result
B0       # return             # 


#<get_green>
02                # number of arguments = 2
03                # number of local variables = 3
00 2C             # code length = 44 bytes
15 00    # vload 0            # p
BE       # arraylength        # \length(p)
10 04    # bipush 4           # 4
9F 00 06 # if_cmpeq +6        # if (\length(p) == 4) goto <180:cond_true>
A7 00 08 # goto +8            # goto <181:cond_false>
# <180:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <182:cond_end>
# <181:cond_false>
10 00    # bipush 0           # false
# <182:cond_end>
14 14 90 # aldc 5264          # s[5264] = ".tmp0/pixel-array.c0: 35.4-35.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 14 CF # aldc 5327          # s[5327] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join(".tmp0/pixel-array.c0: 35.4-35.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(p) == 4) [failure message on stack]
15 00    # vload 0            # p
10 02    # bipush 2           # 2
63       # aadds              # &p[2]
2E       # imload             # p[2]
36 02    # vstore 2           # _result = p[2];
15 02    # vload 2            # _result
B0       # return             # 


#<get_blue>
02                # number of arguments = 2
03                # number of local variables = 3
00 2C             # code length = 44 bytes
15 00    # vload 0            # p
BE       # arraylength        # \length(p)
10 04    # bipush 4           # 4
9F 00 06 # if_cmpeq +6        # if (\length(p) == 4) goto <183:cond_true>
A7 00 08 # goto +8            # goto <184:cond_false>
# <183:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <185:cond_end>
# <184:cond_false>
10 00    # bipush 0           # false
# <185:cond_end>
14 14 E1 # aldc 5345          # s[5345] = ".tmp0/pixel-array.c0: 42.4-42.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 15 20 # aldc 5408          # s[5408] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join(".tmp0/pixel-array.c0: 42.4-42.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(p) == 4) [failure message on stack]
15 00    # vload 0            # p
10 03    # bipush 3           # 3
63       # aadds              # &p[3]
2E       # imload             # p[3]
36 02    # vstore 2           # _result = p[3];
15 02    # vload 2            # _result
B0       # return             # 


#<pixel_print>
02                # number of arguments = 2
02                # number of local variables = 2
00 EB             # code length = 235 bytes
14 15 32 # aldc 5426          # s[5426] = ""
14 15 33 # aldc 5427          # s[5427] = "pixel_print (.tmp0/pixel-array.c0: 54.3-54.56)"
B8 00 1E # invokestatic 30    # print__1("", "pixel_print (.tmp0/pixel-array.c0: 54.3-54.56)")
57       # pop                # (ignore result)
15 00    # vload 0            # p
14 15 62 # aldc 5474          # s[5474] = "pixel_print (.tmp0/pixel-array.c0: 54.35-54.47)"
B8 00 27 # invokestatic 39    # get_alpha(p, "pixel_print (.tmp0/pixel-array.c0: 54.35-54.47)")
14 15 92 # aldc 5522          # s[5522] = "pixel_print (.tmp0/pixel-array.c0: 54.27-54.48)"
B8 00 0D # invokestatic 13    # int2hex(get_alpha(p, "pixel_print (.tmp0/pixel-array.c0: 54.35-54.47)"), "pixel_print (.tmp0/pixel-array.c0: 54.27-54.48)")
10 06    # bipush 6           # 6
10 08    # bipush 8           # 8
14 15 C2 # aldc 5570          # s[5570] = "pixel_print (.tmp0/pixel-array.c0: 54.16-54.55)"
B8 00 11 # invokestatic 17    # string_sub__1(int2hex(get_alpha(p, "pixel_print (.tmp0/pixel-array.c0: 54.35-54.47)"), "pixel_print (.tmp0/pixel-array.c0: 54.27-54.48)"), 6, 8, "pixel_print (.tmp0/pixel-array.c0: 54.16-54.55)")
14 15 F2 # aldc 5618          # s[5618] = "pixel_print (.tmp0/pixel-array.c0: 54.3-54.56)"
B8 00 1E # invokestatic 30    # print__1(string_sub__1(int2hex(get_alpha(p, "pixel_print (.tmp0/pixel-array.c0: 54.35-54.47)"), "pixel_print (.tmp0/pixel-array.c0: 54.27-54.48)"), 6, 8, "pixel_print (.tmp0/pixel-array.c0: 54.16-54.55)"), "pixel_print (.tmp0/pixel-array.c0: 54.3-54.56)")
57       # pop                # (ignore result)
14 16 21 # aldc 5665          # s[5665] = ""
14 16 22 # aldc 5666          # s[5666] = "pixel_print (.tmp0/pixel-array.c0: 54.3-54.56)"
B8 00 1E # invokestatic 30    # print__1("", "pixel_print (.tmp0/pixel-array.c0: 54.3-54.56)")
57       # pop                # (ignore result)
14 16 51 # aldc 5713          # s[5713] = "pixel_print (.tmp0/pixel-array.c0: 54.58-54.65)"
B8 00 23 # invokestatic 35    # flush__1("pixel_print (.tmp0/pixel-array.c0: 54.58-54.65)")
57       # pop                # (ignore result)
14 16 81 # aldc 5761          # s[5761] = ""
14 16 82 # aldc 5762          # s[5762] = "pixel_print (.tmp0/pixel-array.c0: 55.3-55.56)"
B8 00 1E # invokestatic 30    # print__1("", "pixel_print (.tmp0/pixel-array.c0: 55.3-55.56)")
57       # pop                # (ignore result)
15 00    # vload 0            # p
14 16 B1 # aldc 5809          # s[5809] = "pixel_print (.tmp0/pixel-array.c0: 55.35-55.45)"
B8 00 28 # invokestatic 40    # get_red(p, "pixel_print (.tmp0/pixel-array.c0: 55.35-55.45)")
14 16 E1 # aldc 5857          # s[5857] = "pixel_print (.tmp0/pixel-array.c0: 55.27-55.46)"
B8 00 0D # invokestatic 13    # int2hex(get_red(p, "pixel_print (.tmp0/pixel-array.c0: 55.35-55.45)"), "pixel_print (.tmp0/pixel-array.c0: 55.27-55.46)")
10 06    # bipush 6           # 6
10 08    # bipush 8           # 8
14 17 11 # aldc 5905          # s[5905] = "pixel_print (.tmp0/pixel-array.c0: 55.16-55.55)"
B8 00 11 # invokestatic 17    # string_sub__1(int2hex(get_red(p, "pixel_print (.tmp0/pixel-array.c0: 55.35-55.45)"), "pixel_print (.tmp0/pixel-array.c0: 55.27-55.46)"), 6, 8, "pixel_print (.tmp0/pixel-array.c0: 55.16-55.55)")
14 17 41 # aldc 5953          # s[5953] = "pixel_print (.tmp0/pixel-array.c0: 55.3-55.56)"
B8 00 1E # invokestatic 30    # print__1(string_sub__1(int2hex(get_red(p, "pixel_print (.tmp0/pixel-array.c0: 55.35-55.45)"), "pixel_print (.tmp0/pixel-array.c0: 55.27-55.46)"), 6, 8, "pixel_print (.tmp0/pixel-array.c0: 55.16-55.55)"), "pixel_print (.tmp0/pixel-array.c0: 55.3-55.56)")
57       # pop                # (ignore result)
14 17 70 # aldc 6000          # s[6000] = ""
14 17 71 # aldc 6001          # s[6001] = "pixel_print (.tmp0/pixel-array.c0: 55.3-55.56)"
B8 00 1E # invokestatic 30    # print__1("", "pixel_print (.tmp0/pixel-array.c0: 55.3-55.56)")
57       # pop                # (ignore result)
14 17 A0 # aldc 6048          # s[6048] = "pixel_print (.tmp0/pixel-array.c0: 55.58-55.65)"
B8 00 23 # invokestatic 35    # flush__1("pixel_print (.tmp0/pixel-array.c0: 55.58-55.65)")
57       # pop                # (ignore result)
14 17 D0 # aldc 6096          # s[6096] = ""
14 17 D1 # aldc 6097          # s[6097] = "pixel_print (.tmp0/pixel-array.c0: 56.3-56.56)"
B8 00 1E # invokestatic 30    # print__1("", "pixel_print (.tmp0/pixel-array.c0: 56.3-56.56)")
57       # pop                # (ignore result)
15 00    # vload 0            # p
14 18 00 # aldc 6144          # s[6144] = "pixel_print (.tmp0/pixel-array.c0: 56.35-56.47)"
B8 00 29 # invokestatic 41    # get_green(p, "pixel_print (.tmp0/pixel-array.c0: 56.35-56.47)")
14 18 30 # aldc 6192          # s[6192] = "pixel_print (.tmp0/pixel-array.c0: 56.27-56.48)"
B8 00 0D # invokestatic 13    # int2hex(get_green(p, "pixel_print (.tmp0/pixel-array.c0: 56.35-56.47)"), "pixel_print (.tmp0/pixel-array.c0: 56.27-56.48)")
10 06    # bipush 6           # 6
10 08    # bipush 8           # 8
14 18 60 # aldc 6240          # s[6240] = "pixel_print (.tmp0/pixel-array.c0: 56.16-56.55)"
B8 00 11 # invokestatic 17    # string_sub__1(int2hex(get_green(p, "pixel_print (.tmp0/pixel-array.c0: 56.35-56.47)"), "pixel_print (.tmp0/pixel-array.c0: 56.27-56.48)"), 6, 8, "pixel_print (.tmp0/pixel-array.c0: 56.16-56.55)")
14 18 90 # aldc 6288          # s[6288] = "pixel_print (.tmp0/pixel-array.c0: 56.3-56.56)"
B8 00 1E # invokestatic 30    # print__1(string_sub__1(int2hex(get_green(p, "pixel_print (.tmp0/pixel-array.c0: 56.35-56.47)"), "pixel_print (.tmp0/pixel-array.c0: 56.27-56.48)"), 6, 8, "pixel_print (.tmp0/pixel-array.c0: 56.16-56.55)"), "pixel_print (.tmp0/pixel-array.c0: 56.3-56.56)")
57       # pop                # (ignore result)
14 18 BF # aldc 6335          # s[6335] = ""
14 18 C0 # aldc 6336          # s[6336] = "pixel_print (.tmp0/pixel-array.c0: 56.3-56.56)"
B8 00 1E # invokestatic 30    # print__1("", "pixel_print (.tmp0/pixel-array.c0: 56.3-56.56)")
57       # pop                # (ignore result)
14 18 EF # aldc 6383          # s[6383] = "pixel_print (.tmp0/pixel-array.c0: 56.58-56.65)"
B8 00 23 # invokestatic 35    # flush__1("pixel_print (.tmp0/pixel-array.c0: 56.58-56.65)")
57       # pop                # (ignore result)
14 19 1F # aldc 6431          # s[6431] = ""
14 19 20 # aldc 6432          # s[6432] = "pixel_print (.tmp0/pixel-array.c0: 57.3-57.56)"
B8 00 1E # invokestatic 30    # print__1("", "pixel_print (.tmp0/pixel-array.c0: 57.3-57.56)")
57       # pop                # (ignore result)
15 00    # vload 0            # p
14 19 4F # aldc 6479          # s[6479] = "pixel_print (.tmp0/pixel-array.c0: 57.35-57.46)"
B8 00 2A # invokestatic 42    # get_blue(p, "pixel_print (.tmp0/pixel-array.c0: 57.35-57.46)")
14 19 7F # aldc 6527          # s[6527] = "pixel_print (.tmp0/pixel-array.c0: 57.27-57.47)"
B8 00 0D # invokestatic 13    # int2hex(get_blue(p, "pixel_print (.tmp0/pixel-array.c0: 57.35-57.46)"), "pixel_print (.tmp0/pixel-array.c0: 57.27-57.47)")
10 06    # bipush 6           # 6
10 08    # bipush 8           # 8
14 19 AF # aldc 6575          # s[6575] = "pixel_print (.tmp0/pixel-array.c0: 57.16-57.55)"
B8 00 11 # invokestatic 17    # string_sub__1(int2hex(get_blue(p, "pixel_print (.tmp0/pixel-array.c0: 57.35-57.46)"), "pixel_print (.tmp0/pixel-array.c0: 57.27-57.47)"), 6, 8, "pixel_print (.tmp0/pixel-array.c0: 57.16-57.55)")
14 19 DF # aldc 6623          # s[6623] = "pixel_print (.tmp0/pixel-array.c0: 57.3-57.56)"
B8 00 1E # invokestatic 30    # print__1(string_sub__1(int2hex(get_blue(p, "pixel_print (.tmp0/pixel-array.c0: 57.35-57.46)"), "pixel_print (.tmp0/pixel-array.c0: 57.27-57.47)"), 6, 8, "pixel_print (.tmp0/pixel-array.c0: 57.16-57.55)"), "pixel_print (.tmp0/pixel-array.c0: 57.3-57.56)")
57       # pop                # (ignore result)
14 1A 0E # aldc 6670          # s[6670] = ""
14 1A 0F # aldc 6671          # s[6671] = "pixel_print (.tmp0/pixel-array.c0: 57.3-57.56)"
B8 00 1E # invokestatic 30    # print__1("", "pixel_print (.tmp0/pixel-array.c0: 57.3-57.56)")
57       # pop                # (ignore result)
14 1A 3E # aldc 6718          # s[6718] = "pixel_print (.tmp0/pixel-array.c0: 57.58-57.65)"
B8 00 23 # invokestatic 35    # flush__1("pixel_print (.tmp0/pixel-array.c0: 57.58-57.65)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<histogram>
04                # number of arguments = 4
07                # number of local variables = 7
01 09             # code length = 265 bytes
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
15 01    # vload 1            # length
9F 00 06 # if_cmpeq +6        # if (\length(A) == length) goto <186:cond_true>
A7 00 08 # goto +8            # goto <187:cond_false>
# <186:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <188:cond_end>
# <187:cond_false>
10 00    # bipush 0           # false
# <188:cond_end>
14 1A 6E # aldc 6766          # s[6766] = "multireturn.c0: 32.4-32.34: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 1A A7 # aldc 6823          # s[6823] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("multireturn.c0: 32.4-32.34: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(A) == length) [failure message on stack]
15 02    # vload 2            # results
BE       # arraylength        # \length(results)
13 00 04 # ildc 4             # c[4] = 256
9F 00 06 # if_cmpeq +6        # if (\length(results) == 256) goto <189:cond_true>
A7 00 08 # goto +8            # goto <190:cond_false>
# <189:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <191:cond_end>
# <190:cond_false>
10 00    # bipush 0           # false
# <191:cond_end>
14 1A B9 # aldc 6841          # s[6841] = "multireturn.c0: 33.4-33.37: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 1A F2 # aldc 6898          # s[6898] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("multireturn.c0: 33.4-33.37: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(results) == 256) [failure message on stack]
13 00 05 # ildc 5             # c[5] = 256
BC 04    # newarray 4         # alloc_array(int, 256)
36 04    # vstore 4           # tempResults = alloc_array(int, 256);
10 00    # bipush 0           # 0
36 05    # vstore 5           # i = 0;
# <192:loop>
A7 00 03 # goto +3            # goto <193:body>
# <193:body>
10 00    # bipush 0           # 0
15 05    # vload 5            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <195:cond_true>
A7 00 08 # goto +8            # goto <196:cond_false>
# <195:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <197:cond_end>
# <196:cond_false>
10 00    # bipush 0           # false
# <197:cond_end>
14 1B 04 # aldc 6916          # s[6916] = "multireturn.c0: 38.6-38.28: @loop_invariant annotation failed"
CF       # assert             # assert (0 <= i) [failure message on stack]
15 05    # vload 5            # i
15 01    # vload 1            # length
A1 00 06 # if_icmplt +6       # if (i < length) goto <198:then>
A7 00 47 # goto +71           # goto <199:else>
# <198:then>
15 00    # vload 0            # A
15 05    # vload 5            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 1B 42 # aldc 6978          # s[6978] = "histogram (multireturn.c0: 40.20-40.33)"
B8 00 28 # invokestatic 40    # get_red(A[i], "histogram (multireturn.c0: 40.20-40.33)")
15 00    # vload 0            # A
15 05    # vload 5            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 1B 6A # aldc 7018          # s[7018] = "histogram (multireturn.c0: 40.36-40.51)"
B8 00 29 # invokestatic 41    # get_green(A[i], "histogram (multireturn.c0: 40.36-40.51)")
60       # iadd               # (get_red(A[i], "histogram (multireturn.c0: 40.20-40.33)") + get_green(A[i], "histogram (multireturn.c0: 40.36-40.51)"))
15 00    # vload 0            # A
15 05    # vload 5            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 1B 92 # aldc 7058          # s[7058] = "histogram (multireturn.c0: 40.54-40.68)"
B8 00 2A # invokestatic 42    # get_blue(A[i], "histogram (multireturn.c0: 40.54-40.68)")
60       # iadd               # ((get_red(A[i], "histogram (multireturn.c0: 40.20-40.33)") + get_green(A[i], "histogram (multireturn.c0: 40.36-40.51)")) + get_blue(A[i], "histogram (multireturn.c0: 40.54-40.68)"))
10 03    # bipush 3           # 3
6C       # idiv               # (((get_red(A[i], "histogram (multireturn.c0: 40.20-40.33)") + get_green(A[i], "histogram (multireturn.c0: 40.36-40.51)")) + get_blue(A[i], "histogram (multireturn.c0: 40.54-40.68)")) / 3)
36 06    # vstore 6           # average = (((get_red(A[i], "histogram (multireturn.c0: 40.20-40.33)") + get_green(A[i], "histogram (multireturn.c0: 40.36-40.51)")) + get_blue(A[i], "histogram (multireturn.c0: 40.54-40.68)")) / 3);
15 04    # vload 4            # tempResults
15 06    # vload 6            # average
63       # aadds              # &tempResults[average]
15 04    # vload 4            # tempResults
15 06    # vload 6            # average
63       # aadds              # &tempResults[average]
2E       # imload             # tempResults[average]
10 01    # bipush 1           # 1
60       # iadd               # (tempResults[average] + 1)
4E       # imstore            # tempResults[average] = (tempResults[average] + 1);
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # i += 1;
A7 00 06 # goto +6            # goto <200:endif>
# <199:else>
A7 00 06 # goto +6            # break
# <200:endif>
A7 FF 97 # goto -105          # goto <192:loop>
# <194:exit>
14 1B BA # aldc 7098          # s[7098] = ""
14 1B BB # aldc 7099          # s[7099] = "histogram (multireturn.c0: 45.3-45.32)"
B8 00 1E # invokestatic 30    # print__1("", "histogram (multireturn.c0: 45.3-45.32)")
57       # pop                # (ignore result)
14 1B E2 # aldc 7138          # s[7138] = "finalArray->\n"
14 1B F0 # aldc 7152          # s[7152] = "histogram (multireturn.c0: 45.3-45.32)"
B8 00 1E # invokestatic 30    # print__1("finalArray->\n", "histogram (multireturn.c0: 45.3-45.32)")
57       # pop                # (ignore result)
14 1C 17 # aldc 7191          # s[7191] = ""
14 1C 18 # aldc 7192          # s[7192] = "histogram (multireturn.c0: 45.3-45.32)"
B8 00 1E # invokestatic 30    # print__1("", "histogram (multireturn.c0: 45.3-45.32)")
57       # pop                # (ignore result)
10 00    # bipush 0           # 0
36 05    # vstore 5           # i = 0;
# <201:loop>
A7 00 03 # goto +3            # goto <202:body>
# <202:body>
15 05    # vload 5            # i
13 00 06 # ildc 6             # c[6] = 256
A1 00 06 # if_icmplt +6       # if (i < 256) goto <204:then>
A7 00 19 # goto +25           # goto <205:else>
# <204:then>
15 02    # vload 2            # results
15 05    # vload 5            # i
63       # aadds              # &results[i]
15 04    # vload 4            # tempResults
15 05    # vload 5            # i
63       # aadds              # &tempResults[i]
2E       # imload             # tempResults[i]
4E       # imstore            # results[i] = tempResults[i];
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # i += 1;
A7 00 06 # goto +6            # goto <206:endif>
# <205:else>
A7 00 06 # goto +6            # break
# <206:endif>
A7 FF D9 # goto -39           # goto <201:loop>
# <203:exit>
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<copy_pixels>
03                # number of arguments = 3
06                # number of local variables = 6
00 9B             # code length = 155 bytes
15 01    # vload 1            # length
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
9F 00 06 # if_cmpeq +6        # if (length == \length(A)) goto <207:cond_true>
A7 00 08 # goto +8            # goto <208:cond_false>
# <207:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <209:cond_end>
# <208:cond_false>
10 00    # bipush 0           # false
# <209:cond_end>
14 1C 3F # aldc 7231          # s[7231] = "multireturn.c0: 60.4-60.34: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 1C 78 # aldc 7288          # s[7288] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("multireturn.c0: 60.4-60.34: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (length == \length(A)) [failure message on stack]
15 01    # vload 1            # length
BC 08    # newarray 8         # alloc_array(pixel_t, length)
36 04    # vstore 4           # B = alloc_array(pixel_t, length);
10 00    # bipush 0           # 0
36 05    # vstore 5           # i = 0;
# <210:loop>
A7 00 03 # goto +3            # goto <211:body>
# <211:body>
10 00    # bipush 0           # 0
15 05    # vload 5            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <213:cond_true>
A7 00 08 # goto +8            # goto <214:cond_false>
# <213:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <215:cond_end>
# <214:cond_false>
10 00    # bipush 0           # false
# <215:cond_end>
14 1C 8A # aldc 7306          # s[7306] = "multireturn.c0: 66.8-66.30: @loop_invariant annotation failed"
CF       # assert             # assert (0 <= i) [failure message on stack]
15 05    # vload 5            # i
15 01    # vload 1            # length
A1 00 06 # if_icmplt +6       # if (i < length) goto <216:then>
A7 00 19 # goto +25           # goto <217:else>
# <216:then>
15 04    # vload 4            # B
15 05    # vload 5            # i
63       # aadds              # &B[i]
15 00    # vload 0            # A
15 05    # vload 5            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
4F       # amstore            # B[i] = A[i];
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # i += 1;
A7 00 06 # goto +6            # goto <218:endif>
# <217:else>
A7 00 06 # goto +6            # break
# <218:endif>
A7 FF C5 # goto -59           # goto <210:loop>
# <212:exit>
15 04    # vload 4            # B
36 03    # vstore 3           # _result = B;
15 01    # vload 1            # length
15 03    # vload 3            # _result
BE       # arraylength        # \length(_result)
9F 00 06 # if_cmpeq +6        # if (length == \length(_result)) goto <219:cond_true>
A7 00 08 # goto +8            # goto <220:cond_false>
# <219:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <221:cond_end>
# <220:cond_false>
10 00    # bipush 0           # false
# <221:cond_end>
14 1C C8 # aldc 7368          # s[7368] = "multireturn.c0: 61.4-61.39: @ensures annotation failed"
CF       # assert             # assert (length == \length(_result)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # A
A0 00 06 # if_cmpne +6        # if (_result != A) goto <222:cond_true>
A7 00 08 # goto +8            # goto <223:cond_false>
# <222:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <224:cond_end>
# <223:cond_false>
10 00    # bipush 0           # false
# <224:cond_end>
14 1C FF # aldc 7423          # s[7423] = "multireturn.c0: 62.4-62.25: @ensures annotation failed"
CF       # assert             # assert (_result != A) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<pixels_equal>
04                # number of arguments = 4
06                # number of local variables = 6
01 1F             # code length = 287 bytes
15 02    # vload 2            # length
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
9F 00 06 # if_cmpeq +6        # if (length == \length(A)) goto <225:cond_true>
A7 00 08 # goto +8            # goto <226:cond_false>
# <225:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <227:cond_end>
# <226:cond_false>
10 00    # bipush 0           # false
# <227:cond_end>
14 1D 36 # aldc 7478          # s[7478] = "multireturn.c0: 74.4-74.34: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 1D 6F # aldc 7535          # s[7535] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("multireturn.c0: 74.4-74.34: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (length == \length(A)) [failure message on stack]
15 02    # vload 2            # length
15 01    # vload 1            # B
BE       # arraylength        # \length(B)
9F 00 06 # if_cmpeq +6        # if (length == \length(B)) goto <228:cond_true>
A7 00 08 # goto +8            # goto <229:cond_false>
# <228:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <230:cond_end>
# <229:cond_false>
10 00    # bipush 0           # false
# <230:cond_end>
14 1D 81 # aldc 7553          # s[7553] = "multireturn.c0: 75.4-75.34: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 1D BA # aldc 7610          # s[7610] = ": caller location"
B7 00 00 # invokenative 0     # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0     # string_join("multireturn.c0: 75.4-75.34: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (length == \length(B)) [failure message on stack]
10 00    # bipush 0           # 0
36 05    # vstore 5           # i = 0;
# <231:loop>
A7 00 03 # goto +3            # goto <232:body>
# <232:body>
10 00    # bipush 0           # 0
15 05    # vload 5            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <234:cond_true>
A7 00 08 # goto +8            # goto <235:cond_false>
# <234:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <236:cond_end>
# <235:cond_false>
10 00    # bipush 0           # false
# <236:cond_end>
14 1D CC # aldc 7628          # s[7628] = "multireturn.c0: 78.8-78.30: @loop_invariant annotation failed"
CF       # assert             # assert (0 <= i) [failure message on stack]
15 05    # vload 5            # i
15 02    # vload 2            # length
A1 00 06 # if_icmplt +6       # if (i < length) goto <237:then>
A7 00 AD # goto +173          # goto <238:else>
# <237:then>
15 00    # vload 0            # A
15 05    # vload 5            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 1E 0A # aldc 7690          # s[7690] = "pixels_equal (multireturn.c0: 80.11-80.26)"
B8 00 27 # invokestatic 39    # get_alpha(A[i], "pixels_equal (multireturn.c0: 80.11-80.26)")
15 01    # vload 1            # B
15 05    # vload 5            # i
63       # aadds              # &B[i]
2F       # amload             # B[i]
14 1E 35 # aldc 7733          # s[7733] = "pixels_equal (multireturn.c0: 80.30-80.45)"
B8 00 27 # invokestatic 39    # get_alpha(B[i], "pixels_equal (multireturn.c0: 80.30-80.45)")
A0 00 06 # if_cmpne +6        # if (get_alpha(A[i], "pixels_equal (multireturn.c0: 80.11-80.26)") != get_alpha(B[i], "pixels_equal (multireturn.c0: 80.30-80.45)")) goto <240:then>
A7 00 0D # goto +13           # goto <241:else>
# <240:then>
10 00    # bipush 0           # false
36 04    # vstore 4           # _result = false;
15 04    # vload 4            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <242:endif>
# <241:else>
# <242:endif>
15 00    # vload 0            # A
15 05    # vload 5            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 1E 60 # aldc 7776          # s[7776] = "pixels_equal (multireturn.c0: 81.11-81.24)"
B8 00 28 # invokestatic 40    # get_red(A[i], "pixels_equal (multireturn.c0: 81.11-81.24)")
15 01    # vload 1            # B
15 05    # vload 5            # i
63       # aadds              # &B[i]
2F       # amload             # B[i]
14 1E 8B # aldc 7819          # s[7819] = "pixels_equal (multireturn.c0: 81.30-81.43)"
B8 00 28 # invokestatic 40    # get_red(B[i], "pixels_equal (multireturn.c0: 81.30-81.43)")
A0 00 06 # if_cmpne +6        # if (get_red(A[i], "pixels_equal (multireturn.c0: 81.11-81.24)") != get_red(B[i], "pixels_equal (multireturn.c0: 81.30-81.43)")) goto <243:then>
A7 00 0D # goto +13           # goto <244:else>
# <243:then>
10 00    # bipush 0           # false
36 04    # vstore 4           # _result = false;
15 04    # vload 4            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <245:endif>
# <244:else>
# <245:endif>
15 00    # vload 0            # A
15 05    # vload 5            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 1E B6 # aldc 7862          # s[7862] = "pixels_equal (multireturn.c0: 82.11-82.26)"
B8 00 29 # invokestatic 41    # get_green(A[i], "pixels_equal (multireturn.c0: 82.11-82.26)")
15 01    # vload 1            # B
15 05    # vload 5            # i
63       # aadds              # &B[i]
2F       # amload             # B[i]
14 1E E1 # aldc 7905          # s[7905] = "pixels_equal (multireturn.c0: 82.30-82.45)"
B8 00 29 # invokestatic 41    # get_green(B[i], "pixels_equal (multireturn.c0: 82.30-82.45)")
A0 00 06 # if_cmpne +6        # if (get_green(A[i], "pixels_equal (multireturn.c0: 82.11-82.26)") != get_green(B[i], "pixels_equal (multireturn.c0: 82.30-82.45)")) goto <246:then>
A7 00 0D # goto +13           # goto <247:else>
# <246:then>
10 00    # bipush 0           # false
36 04    # vstore 4           # _result = false;
15 04    # vload 4            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <248:endif>
# <247:else>
# <248:endif>
15 00    # vload 0            # A
15 05    # vload 5            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 1F 0C # aldc 7948          # s[7948] = "pixels_equal (multireturn.c0: 83.11-83.25)"
B8 00 2A # invokestatic 42    # get_blue(A[i], "pixels_equal (multireturn.c0: 83.11-83.25)")
15 01    # vload 1            # B
15 05    # vload 5            # i
63       # aadds              # &B[i]
2F       # amload             # B[i]
14 1F 37 # aldc 7991          # s[7991] = "pixels_equal (multireturn.c0: 83.30-83.44)"
B8 00 2A # invokestatic 42    # get_blue(B[i], "pixels_equal (multireturn.c0: 83.30-83.44)")
A0 00 06 # if_cmpne +6        # if (get_blue(A[i], "pixels_equal (multireturn.c0: 83.11-83.25)") != get_blue(B[i], "pixels_equal (multireturn.c0: 83.30-83.44)")) goto <249:then>
A7 00 0D # goto +13           # goto <250:else>
# <249:then>
10 00    # bipush 0           # false
36 04    # vstore 4           # _result = false;
15 04    # vload 4            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <251:endif>
# <250:else>
# <251:endif>
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # i += 1;
A7 00 06 # goto +6            # goto <239:endif>
# <238:else>
A7 00 06 # goto +6            # break
# <239:endif>
A7 FF 31 # goto -207          # goto <231:loop>
# <233:exit>
10 01    # bipush 1           # true
36 04    # vstore 4           # _result = true;
15 04    # vload 4            # _result
B0       # return             # 


#<test_histogram>
01                # number of arguments = 1
05                # number of local variables = 5
04 2B             # code length = 1067 bytes
13 00 07 # ildc 7             # c[7] = 256
BC 04    # newarray 4         # alloc_array(int, 256)
36 03    # vstore 3           # results = alloc_array(int, 256);
10 09    # bipush 9           # 9
BC 08    # newarray 8         # alloc_array(pixel_t, 9)
36 01    # vstore 1           # A = alloc_array(pixel_t, 9);
15 01    # vload 1            # A
10 00    # bipush 0           # 0
63       # aadds              # &A[0]
13 00 08 # ildc 8             # c[8] = 255
10 01    # bipush 1           # 1
10 01    # bipush 1           # 1
10 01    # bipush 1           # 1
14 1F 62 # aldc 8034          # s[8034] = "test_histogram (multireturn.c0: 95.10-95.44)"
B8 00 26 # invokestatic 38    # make_pixel(255, 1, 1, 1, "test_histogram (multireturn.c0: 95.10-95.44)")
4F       # amstore            # A[0] = make_pixel(255, 1, 1, 1, "test_histogram (multireturn.c0: 95.10-95.44)");
15 01    # vload 1            # A
10 01    # bipush 1           # 1
63       # aadds              # &A[1]
10 01    # bipush 1           # 1
10 00    # bipush 0           # 0
13 00 09 # ildc 9             # c[9] = 255
13 00 0A # ildc 10            # c[10] = 238
14 1F 8F # aldc 8079          # s[8079] = "test_histogram (multireturn.c0: 96.10-96.44)"
B8 00 26 # invokestatic 38    # make_pixel(1, 0, 255, 238, "test_histogram (multireturn.c0: 96.10-96.44)")
4F       # amstore            # A[1] = make_pixel(1, 0, 255, 238, "test_histogram (multireturn.c0: 96.10-96.44)");
15 01    # vload 1            # A
10 02    # bipush 2           # 2
63       # aadds              # &A[2]
13 00 0B # ildc 11            # c[11] = 255
13 00 0C # ildc 12            # c[12] = 255
13 00 0D # ildc 13            # c[13] = 255
13 00 0E # ildc 14            # c[14] = 255
14 1F BC # aldc 8124          # s[8124] = "test_histogram (multireturn.c0: 97.10-97.44)"
B8 00 26 # invokestatic 38    # make_pixel(255, 255, 255, 255, "test_histogram (multireturn.c0: 97.10-97.44)")
4F       # amstore            # A[2] = make_pixel(255, 255, 255, 255, "test_histogram (multireturn.c0: 97.10-97.44)");
15 01    # vload 1            # A
10 03    # bipush 3           # 3
63       # aadds              # &A[3]
13 00 0F # ildc 15            # c[15] = 238
13 00 10 # ildc 16            # c[16] = 255
13 00 11 # ildc 17            # c[17] = 221
10 00    # bipush 0           # 0
14 1F E9 # aldc 8169          # s[8169] = "test_histogram (multireturn.c0: 98.10-98.44)"
B8 00 26 # invokestatic 38    # make_pixel(238, 255, 221, 0, "test_histogram (multireturn.c0: 98.10-98.44)")
4F       # amstore            # A[3] = make_pixel(238, 255, 221, 0, "test_histogram (multireturn.c0: 98.10-98.44)");
15 01    # vload 1            # A
10 04    # bipush 4           # 4
63       # aadds              # &A[4]
13 00 12 # ildc 18            # c[18] = 221
13 00 13 # ildc 19            # c[19] = 204
10 00    # bipush 0           # 0
13 00 14 # ildc 20            # c[20] = 255
14 20 16 # aldc 8214          # s[8214] = "test_histogram (multireturn.c0: 99.10-99.44)"
B8 00 26 # invokestatic 38    # make_pixel(221, 204, 0, 255, "test_histogram (multireturn.c0: 99.10-99.44)")
4F       # amstore            # A[4] = make_pixel(221, 204, 0, 255, "test_histogram (multireturn.c0: 99.10-99.44)");
15 01    # vload 1            # A
10 05    # bipush 5           # 5
63       # aadds              # &A[5]
13 00 15 # ildc 21            # c[21] = 204
10 00    # bipush 0           # 0
13 00 16 # ildc 22            # c[22] = 221
13 00 17 # ildc 23            # c[23] = 238
14 20 43 # aldc 8259          # s[8259] = "test_histogram (multireturn.c0: 100.10-100.44)"
B8 00 26 # invokestatic 38    # make_pixel(204, 0, 221, 238, "test_histogram (multireturn.c0: 100.10-100.44)")
4F       # amstore            # A[5] = make_pixel(204, 0, 221, 238, "test_histogram (multireturn.c0: 100.10-100.44)");
15 01    # vload 1            # A
10 06    # bipush 6           # 6
63       # aadds              # &A[6]
10 00    # bipush 0           # 0
13 00 18 # ildc 24            # c[24] = 238
13 00 19 # ildc 25            # c[25] = 255
13 00 1A # ildc 26            # c[26] = 221
14 20 72 # aldc 8306          # s[8306] = "test_histogram (multireturn.c0: 101.10-101.44)"
B8 00 26 # invokestatic 38    # make_pixel(0, 238, 255, 221, "test_histogram (multireturn.c0: 101.10-101.44)")
4F       # amstore            # A[6] = make_pixel(0, 238, 255, 221, "test_histogram (multireturn.c0: 101.10-101.44)");
15 01    # vload 1            # A
10 07    # bipush 7           # 7
63       # aadds              # &A[7]
10 00    # bipush 0           # 0
10 00    # bipush 0           # 0
10 00    # bipush 0           # 0
10 00    # bipush 0           # 0
14 20 A1 # aldc 8353          # s[8353] = "test_histogram (multireturn.c0: 102.10-102.44)"
B8 00 26 # invokestatic 38    # make_pixel(0, 0, 0, 0, "test_histogram (multireturn.c0: 102.10-102.44)")
4F       # amstore            # A[7] = make_pixel(0, 0, 0, 0, "test_histogram (multireturn.c0: 102.10-102.44)");
15 01    # vload 1            # A
10 08    # bipush 8           # 8
63       # aadds              # &A[8]
10 00    # bipush 0           # 0
13 00 1B # ildc 27            # c[27] = 221
13 00 1C # ildc 28            # c[28] = 204
13 00 1D # ildc 29            # c[29] = 187
14 20 D0 # aldc 8400          # s[8400] = "test_histogram (multireturn.c0: 103.10-103.44)"
B8 00 26 # invokestatic 38    # make_pixel(0, 221, 204, 187, "test_histogram (multireturn.c0: 103.10-103.44)")
4F       # amstore            # A[8] = make_pixel(0, 221, 204, 187, "test_histogram (multireturn.c0: 103.10-103.44)");
15 01    # vload 1            # A
10 09    # bipush 9           # 9
14 20 FF # aldc 8447          # s[8447] = "test_histogram (multireturn.c0: 104.7-104.24)"
B8 00 2D # invokestatic 45    # copy_pixels(A, 9, "test_histogram (multireturn.c0: 104.7-104.24)")
36 02    # vstore 2           # C = copy_pixels(A, 9, "test_histogram (multireturn.c0: 104.7-104.24)");
15 01    # vload 1            # A
10 09    # bipush 9           # 9
15 03    # vload 3            # results
14 21 2D # aldc 8493          # s[8493] = "test_histogram (multireturn.c0: 107.3-107.27)"
B8 00 2C # invokestatic 44    # histogram(A, 9, results, "test_histogram (multireturn.c0: 107.3-107.27)")
57       # pop                # (ignore result)
15 01    # vload 1            # A
15 02    # vload 2            # C
10 09    # bipush 9           # 9
14 21 5B # aldc 8539          # s[8539] = "test_histogram (multireturn.c0: 108.10-108.31)"
B8 00 2E # invokestatic 46    # pixels_equal(A, C, 9, "test_histogram (multireturn.c0: 108.10-108.31)")
14 21 8A # aldc 8586          # s[8586] = "multireturn.c0: 108.3-108.33: assert failed"
CF       # assert             # assert pixels_equal(A, C, 9, "test_histogram (multireturn.c0: 108.10-108.31)") [failure message on stack]
10 00    # bipush 0           # 0
36 04    # vstore 4           # i = 0;
# <252:loop>
A7 00 03 # goto +3            # goto <253:body>
# <253:body>
15 04    # vload 4            # i
13 00 1E # ildc 30            # c[30] = 256
A1 00 06 # if_icmplt +6       # if (i < 256) goto <255:then>
A7 01 5C # goto +348          # goto <256:else>
# <255:then>
15 04    # vload 4            # i
10 00    # bipush 0           # 0
9F 00 06 # if_cmpeq +6        # if (i == 0) goto <258:then>
A7 00 1F # goto +31           # goto <259:else>
# <258:then>
15 03    # vload 3            # results
15 04    # vload 4            # i
63       # aadds              # &results[i]
2E       # imload             # results[i]
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (results[i] == 1) goto <261:cond_true>
A7 00 08 # goto +8            # goto <262:cond_false>
# <261:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <263:cond_end>
# <262:cond_false>
10 00    # bipush 0           # false
# <263:cond_end>
14 21 B6 # aldc 8630          # s[8630] = "multireturn.c0: 110.25-110.49: assert failed"
CF       # assert             # assert (results[i] == 1) [failure message on stack]
A7 01 2C # goto +300          # goto <260:endif>
# <259:else>
15 04    # vload 4            # i
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (i == 1) goto <264:then>
A7 00 1F # goto +31           # goto <265:else>
# <264:then>
15 03    # vload 3            # results
15 04    # vload 4            # i
63       # aadds              # &results[i]
2E       # imload             # results[i]
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (results[i] == 1) goto <267:cond_true>
A7 00 08 # goto +8            # goto <268:cond_false>
# <267:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <269:cond_end>
# <268:cond_false>
10 00    # bipush 0           # false
# <269:cond_end>
14 21 E3 # aldc 8675          # s[8675] = "multireturn.c0: 111.25-111.49: assert failed"
CF       # assert             # assert (results[i] == 1) [failure message on stack]
A7 01 06 # goto +262          # goto <266:endif>
# <265:else>
15 04    # vload 4            # i
13 00 1F # ildc 31            # c[31] = 204
9F 00 06 # if_cmpeq +6        # if (i == 204) goto <270:then>
A7 00 1F # goto +31           # goto <271:else>
# <270:then>
15 03    # vload 3            # results
15 04    # vload 4            # i
63       # aadds              # &results[i]
2E       # imload             # results[i]
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (results[i] == 1) goto <273:cond_true>
A7 00 08 # goto +8            # goto <274:cond_false>
# <273:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <275:cond_end>
# <274:cond_false>
10 00    # bipush 0           # false
# <275:cond_end>
14 22 10 # aldc 8720          # s[8720] = "multireturn.c0: 112.25-112.49: assert failed"
CF       # assert             # assert (results[i] == 1) [failure message on stack]
A7 00 DF # goto +223          # goto <272:endif>
# <271:else>
15 04    # vload 4            # i
13 00 20 # ildc 32            # c[32] = 238
9F 00 06 # if_cmpeq +6        # if (i == 238) goto <276:then>
A7 00 1F # goto +31           # goto <277:else>
# <276:then>
15 03    # vload 3            # results
15 04    # vload 4            # i
63       # aadds              # &results[i]
2E       # imload             # results[i]
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (results[i] == 1) goto <279:cond_true>
A7 00 08 # goto +8            # goto <280:cond_false>
# <279:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <281:cond_end>
# <280:cond_false>
10 00    # bipush 0           # false
# <281:cond_end>
14 22 3D # aldc 8765          # s[8765] = "multireturn.c0: 113.25-113.49: assert failed"
CF       # assert             # assert (results[i] == 1) [failure message on stack]
A7 00 B8 # goto +184          # goto <278:endif>
# <277:else>
15 04    # vload 4            # i
13 00 21 # ildc 33            # c[33] = 255
9F 00 06 # if_cmpeq +6        # if (i == 255) goto <282:then>
A7 00 1F # goto +31           # goto <283:else>
# <282:then>
15 03    # vload 3            # results
15 04    # vload 4            # i
63       # aadds              # &results[i]
2E       # imload             # results[i]
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (results[i] == 1) goto <285:cond_true>
A7 00 08 # goto +8            # goto <286:cond_false>
# <285:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <287:cond_end>
# <286:cond_false>
10 00    # bipush 0           # false
# <287:cond_end>
14 22 6A # aldc 8810          # s[8810] = "multireturn.c0: 114.25-114.49: assert failed"
CF       # assert             # assert (results[i] == 1) [failure message on stack]
A7 00 91 # goto +145          # goto <284:endif>
# <283:else>
15 04    # vload 4            # i
13 00 22 # ildc 34            # c[34] = 153
9F 00 06 # if_cmpeq +6        # if (i == 153) goto <288:then>
A7 00 1F # goto +31           # goto <289:else>
# <288:then>
15 03    # vload 3            # results
15 04    # vload 4            # i
63       # aadds              # &results[i]
2E       # imload             # results[i]
10 02    # bipush 2           # 2
9F 00 06 # if_cmpeq +6        # if (results[i] == 2) goto <291:cond_true>
A7 00 08 # goto +8            # goto <292:cond_false>
# <291:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <293:cond_end>
# <292:cond_false>
10 00    # bipush 0           # false
# <293:cond_end>
14 22 97 # aldc 8855          # s[8855] = "multireturn.c0: 115.25-115.49: assert failed"
CF       # assert             # assert (results[i] == 2) [failure message on stack]
A7 00 6A # goto +106          # goto <290:endif>
# <289:else>
15 04    # vload 4            # i
13 00 23 # ildc 35            # c[35] = 158
9F 00 06 # if_cmpeq +6        # if (i == 158) goto <294:then>
A7 00 1F # goto +31           # goto <295:else>
# <294:then>
15 03    # vload 3            # results
15 04    # vload 4            # i
63       # aadds              # &results[i]
2E       # imload             # results[i]
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (results[i] == 1) goto <297:cond_true>
A7 00 08 # goto +8            # goto <298:cond_false>
# <297:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <299:cond_end>
# <298:cond_false>
10 00    # bipush 0           # false
# <299:cond_end>
14 22 C4 # aldc 8900          # s[8900] = "multireturn.c0: 116.25-116.49: assert failed"
CF       # assert             # assert (results[i] == 1) [failure message on stack]
A7 00 43 # goto +67           # goto <296:endif>
# <295:else>
15 04    # vload 4            # i
13 00 24 # ildc 36            # c[36] = 164
9F 00 06 # if_cmpeq +6        # if (i == 164) goto <300:then>
A7 00 1F # goto +31           # goto <301:else>
# <300:then>
15 03    # vload 3            # results
15 04    # vload 4            # i
63       # aadds              # &results[i]
2E       # imload             # results[i]
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (results[i] == 1) goto <303:cond_true>
A7 00 08 # goto +8            # goto <304:cond_false>
# <303:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <305:cond_end>
# <304:cond_false>
10 00    # bipush 0           # false
# <305:cond_end>
14 22 F1 # aldc 8945          # s[8945] = "multireturn.c0: 117.25-117.49: assert failed"
CF       # assert             # assert (results[i] == 1) [failure message on stack]
A7 00 1C # goto +28           # goto <302:endif>
# <301:else>
15 03    # vload 3            # results
15 04    # vload 4            # i
63       # aadds              # &results[i]
2E       # imload             # results[i]
10 00    # bipush 0           # 0
9F 00 06 # if_cmpeq +6        # if (results[i] == 0) goto <306:cond_true>
A7 00 08 # goto +8            # goto <307:cond_false>
# <306:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <308:cond_end>
# <307:cond_false>
10 00    # bipush 0           # false
# <308:cond_end>
14 23 1E # aldc 8990          # s[8990] = "multireturn.c0: 118.10-118.34: assert failed"
CF       # assert             # assert (results[i] == 0) [failure message on stack]
# <302:endif>
# <296:endif>
# <290:endif>
# <284:endif>
# <278:endif>
# <272:endif>
# <266:endif>
# <260:endif>
15 04    # vload 4            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 04    # vstore 4           # i += 1;
A7 00 06 # goto +6            # goto <257:endif>
# <256:else>
A7 00 06 # goto +6            # break
# <257:endif>
A7 FE 96 # goto -362          # goto <252:loop>
# <254:exit>
15 01    # vload 1            # A
10 08    # bipush 8           # 8
63       # aadds              # &A[8]
10 00    # bipush 0           # 0
10 00    # bipush 0           # 0
10 00    # bipush 0           # 0
13 00 25 # ildc 37            # c[37] = 255
14 23 4B # aldc 9035          # s[9035] = "test_histogram (multireturn.c0: 122.10-122.44)"
B8 00 26 # invokestatic 38    # make_pixel(0, 0, 0, 255, "test_histogram (multireturn.c0: 122.10-122.44)")
4F       # amstore            # A[8] = make_pixel(0, 0, 0, 255, "test_histogram (multireturn.c0: 122.10-122.44)");
15 02    # vload 2            # C
10 08    # bipush 8           # 8
63       # aadds              # &C[8]
10 00    # bipush 0           # 0
10 00    # bipush 0           # 0
10 00    # bipush 0           # 0
13 00 26 # ildc 38            # c[38] = 255
14 23 7A # aldc 9082          # s[9082] = "test_histogram (multireturn.c0: 123.10-123.44)"
B8 00 26 # invokestatic 38    # make_pixel(0, 0, 0, 255, "test_histogram (multireturn.c0: 123.10-123.44)")
4F       # amstore            # C[8] = make_pixel(0, 0, 0, 255, "test_histogram (multireturn.c0: 123.10-123.44)");
15 01    # vload 1            # A
10 09    # bipush 9           # 9
15 03    # vload 3            # results
14 23 A9 # aldc 9129          # s[9129] = "test_histogram (multireturn.c0: 126.3-126.27)"
B8 00 2C # invokestatic 44    # histogram(A, 9, results, "test_histogram (multireturn.c0: 126.3-126.27)")
57       # pop                # (ignore result)
15 01    # vload 1            # A
15 02    # vload 2            # C
10 09    # bipush 9           # 9
14 23 D7 # aldc 9175          # s[9175] = "test_histogram (multireturn.c0: 127.10-127.31)"
B8 00 2E # invokestatic 46    # pixels_equal(A, C, 9, "test_histogram (multireturn.c0: 127.10-127.31)")
14 24 06 # aldc 9222          # s[9222] = "multireturn.c0: 127.3-127.33: assert failed"
CF       # assert             # assert pixels_equal(A, C, 9, "test_histogram (multireturn.c0: 127.10-127.31)") [failure message on stack]
10 00    # bipush 0           # 0
36 04    # vstore 4           # i = 0;
# <309:loop>
A7 00 03 # goto +3            # goto <310:body>
# <310:body>
15 04    # vload 4            # i
13 00 27 # ildc 39            # c[39] = 256
A1 00 06 # if_icmplt +6       # if (i < 256) goto <312:then>
A7 01 5B # goto +347          # goto <313:else>
# <312:then>
15 04    # vload 4            # i
10 00    # bipush 0           # 0
9F 00 06 # if_cmpeq +6        # if (i == 0) goto <315:then>
A7 00 1F # goto +31           # goto <316:else>
# <315:then>
15 03    # vload 3            # results
15 04    # vload 4            # i
63       # aadds              # &results[i]
2E       # imload             # results[i]
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (results[i] == 1) goto <318:cond_true>
A7 00 08 # goto +8            # goto <319:cond_false>
# <318:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <320:cond_end>
# <319:cond_false>
10 00    # bipush 0           # false
# <320:cond_end>
14 24 32 # aldc 9266          # s[9266] = "multireturn.c0: 129.25-129.49: assert failed"
CF       # assert             # assert (results[i] == 1) [failure message on stack]
A7 01 2B # goto +299          # goto <317:endif>
# <316:else>
15 04    # vload 4            # i
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (i == 1) goto <321:then>
A7 00 1F # goto +31           # goto <322:else>
# <321:then>
15 03    # vload 3            # results
15 04    # vload 4            # i
63       # aadds              # &results[i]
2E       # imload             # results[i]
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (results[i] == 1) goto <324:cond_true>
A7 00 08 # goto +8            # goto <325:cond_false>
# <324:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <326:cond_end>
# <325:cond_false>
10 00    # bipush 0           # false
# <326:cond_end>
14 24 5F # aldc 9311          # s[9311] = "multireturn.c0: 130.25-130.49: assert failed"
CF       # assert             # assert (results[i] == 1) [failure message on stack]
A7 01 05 # goto +261          # goto <323:endif>
# <322:else>
15 04    # vload 4            # i
10 55    # bipush 85          # 85
9F 00 06 # if_cmpeq +6        # if (i == 85) goto <327:then>
A7 00 1F # goto +31           # goto <328:else>
# <327:then>
15 03    # vload 3            # results
15 04    # vload 4            # i
63       # aadds              # &results[i]
2E       # imload             # results[i]
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (results[i] == 1) goto <330:cond_true>
A7 00 08 # goto +8            # goto <331:cond_false>
# <330:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <332:cond_end>
# <331:cond_false>
10 00    # bipush 0           # false
# <332:cond_end>
14 24 8C # aldc 9356          # s[9356] = "multireturn.c0: 131.25-131.49: assert failed"
CF       # assert             # assert (results[i] == 1) [failure message on stack]
A7 00 DF # goto +223          # goto <329:endif>
# <328:else>
15 04    # vload 4            # i
13 00 28 # ildc 40            # c[40] = 238
9F 00 06 # if_cmpeq +6        # if (i == 238) goto <333:then>
A7 00 1F # goto +31           # goto <334:else>
# <333:then>
15 03    # vload 3            # results
15 04    # vload 4            # i
63       # aadds              # &results[i]
2E       # imload             # results[i]
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (results[i] == 1) goto <336:cond_true>
A7 00 08 # goto +8            # goto <337:cond_false>
# <336:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <338:cond_end>
# <337:cond_false>
10 00    # bipush 0           # false
# <338:cond_end>
14 24 B9 # aldc 9401          # s[9401] = "multireturn.c0: 132.25-132.49: assert failed"
CF       # assert             # assert (results[i] == 1) [failure message on stack]
A7 00 B8 # goto +184          # goto <335:endif>
# <334:else>
15 04    # vload 4            # i
13 00 29 # ildc 41            # c[41] = 255
9F 00 06 # if_cmpeq +6        # if (i == 255) goto <339:then>
A7 00 1F # goto +31           # goto <340:else>
# <339:then>
15 03    # vload 3            # results
15 04    # vload 4            # i
63       # aadds              # &results[i]
2E       # imload             # results[i]
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (results[i] == 1) goto <342:cond_true>
A7 00 08 # goto +8            # goto <343:cond_false>
# <342:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <344:cond_end>
# <343:cond_false>
10 00    # bipush 0           # false
# <344:cond_end>
14 24 E6 # aldc 9446          # s[9446] = "multireturn.c0: 133.25-133.49: assert failed"
CF       # assert             # assert (results[i] == 1) [failure message on stack]
A7 00 91 # goto +145          # goto <341:endif>
# <340:else>
15 04    # vload 4            # i
13 00 2A # ildc 42            # c[42] = 153
9F 00 06 # if_cmpeq +6        # if (i == 153) goto <345:then>
A7 00 1F # goto +31           # goto <346:else>
# <345:then>
15 03    # vload 3            # results
15 04    # vload 4            # i
63       # aadds              # &results[i]
2E       # imload             # results[i]
10 02    # bipush 2           # 2
9F 00 06 # if_cmpeq +6        # if (results[i] == 2) goto <348:cond_true>
A7 00 08 # goto +8            # goto <349:cond_false>
# <348:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <350:cond_end>
# <349:cond_false>
10 00    # bipush 0           # false
# <350:cond_end>
14 25 13 # aldc 9491          # s[9491] = "multireturn.c0: 134.25-134.49: assert failed"
CF       # assert             # assert (results[i] == 2) [failure message on stack]
A7 00 6A # goto +106          # goto <347:endif>
# <346:else>
15 04    # vload 4            # i
13 00 2B # ildc 43            # c[43] = 158
9F 00 06 # if_cmpeq +6        # if (i == 158) goto <351:then>
A7 00 1F # goto +31           # goto <352:else>
# <351:then>
15 03    # vload 3            # results
15 04    # vload 4            # i
63       # aadds              # &results[i]
2E       # imload             # results[i]
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (results[i] == 1) goto <354:cond_true>
A7 00 08 # goto +8            # goto <355:cond_false>
# <354:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <356:cond_end>
# <355:cond_false>
10 00    # bipush 0           # false
# <356:cond_end>
14 25 40 # aldc 9536          # s[9536] = "multireturn.c0: 135.25-135.49: assert failed"
CF       # assert             # assert (results[i] == 1) [failure message on stack]
A7 00 43 # goto +67           # goto <353:endif>
# <352:else>
15 04    # vload 4            # i
13 00 2C # ildc 44            # c[44] = 164
9F 00 06 # if_cmpeq +6        # if (i == 164) goto <357:then>
A7 00 1F # goto +31           # goto <358:else>
# <357:then>
15 03    # vload 3            # results
15 04    # vload 4            # i
63       # aadds              # &results[i]
2E       # imload             # results[i]
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (results[i] == 1) goto <360:cond_true>
A7 00 08 # goto +8            # goto <361:cond_false>
# <360:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <362:cond_end>
# <361:cond_false>
10 00    # bipush 0           # false
# <362:cond_end>
14 25 6D # aldc 9581          # s[9581] = "multireturn.c0: 136.25-136.49: assert failed"
CF       # assert             # assert (results[i] == 1) [failure message on stack]
A7 00 1C # goto +28           # goto <359:endif>
# <358:else>
15 03    # vload 3            # results
15 04    # vload 4            # i
63       # aadds              # &results[i]
2E       # imload             # results[i]
10 00    # bipush 0           # 0
9F 00 06 # if_cmpeq +6        # if (results[i] == 0) goto <363:cond_true>
A7 00 08 # goto +8            # goto <364:cond_false>
# <363:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <365:cond_end>
# <364:cond_false>
10 00    # bipush 0           # false
# <365:cond_end>
14 25 9A # aldc 9626          # s[9626] = "multireturn.c0: 137.10-137.34: assert failed"
CF       # assert             # assert (results[i] == 0) [failure message on stack]
# <359:endif>
# <353:endif>
# <347:endif>
# <341:endif>
# <335:endif>
# <329:endif>
# <323:endif>
# <317:endif>
15 04    # vload 4            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 04    # vstore 4           # i += 1;
A7 00 06 # goto +6            # goto <314:endif>
# <313:else>
A7 00 06 # goto +6            # break
# <314:endif>
A7 FE 97 # goto -361          # goto <309:loop>
# <311:exit>
10 00    # bipush 0           # dummy return value
B0       # return             # 

00 17             # native count
# native pool
00 02 00 64       # string_join
00 01 00 65       # string_length
00 02 00 5D       # string_charat
00 03 00 66       # string_sub
00 02 00 5F       # string_equal
00 02 00 5E       # string_compare
00 01 00 63       # string_fromint
00 01 00 61       # string_frombool
00 01 00 62       # string_fromchar
00 01 00 69       # string_tolower
00 02 00 67       # string_terminated
00 01 00 68       # string_to_chararray
00 01 00 60       # string_from_chararray
00 01 00 5C       # char_ord
00 01 00 5B       # char_chr
00 01 00 06       # print
00 01 00 0A       # println
00 01 00 09       # printint
00 01 00 07       # printbool
00 01 00 08       # printchar
00 00 00 05       # flush
00 00 00 04       # eof
00 00 00 0B       # readline

